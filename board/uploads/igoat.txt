//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CBLBlobKey {
    unsigned char bytes[20];
};

struct CBLChangesOptions {
    unsigned int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct CBLGeoPoint {
    double x;
    double y;
};

struct CBLGeoRect {
    struct CBLGeoPoint min;
    struct CBLGeoPoint max;
};

struct CBLManagerOptions {
    _Bool readOnly;
    unsigned long long fileProtection;
};

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CC_SHA1state_st {
    unsigned int h0;
    unsigned int h1;
    unsigned int h2;
    unsigned int h3;
    unsigned int h4;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct YapDatabaseViewRangePosition {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct internal_state;

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
                struct __tree_node_base<void *> *__left_;
            } __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct vector<CBLMovedRange, std::__1::allocator<CBLMovedRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<CBLMovedRange *, std::__1::allocator<CBLMovedRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void *bytes;
    unsigned long long length;
} CDStruct_6dcf026d;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct CDStruct_183601bc;

typedef struct {
    struct _NSRange _field1;
    unsigned long long _field2;
} CDStruct_477d7e2c;

#pragma mark -

//
// File: iGoat
// UUID: E3343C21-F25B-3F71-A5F7-A6C733D96EAC
//
//                           Arch: x86_64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 11.4.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Frameworks
//

@protocol BLIPConnectionDelegate <NSObject>

@optional
- (void)blipConnection:(BLIPConnection *)arg1 receivedResponse:(BLIPResponse *)arg2;
- (_Bool)blipConnection:(BLIPConnection *)arg1 receivedRequest:(BLIPRequest *)arg2;
- (void)blipConnection:(BLIPConnection *)arg1 didCloseWithError:(NSError *)arg2;
- (void)blipConnection:(BLIPConnection *)arg1 didFailWithError:(NSError *)arg2;
- (void)blipConnectionDidOpen:(BLIPConnection *)arg1;
- (_Bool)blipConnection:(BLIPConnection *)arg1 validateServerTrust:(struct __SecTrust *)arg2;
@end

@protocol CBLAuthenticator <NSObject>
@end

@protocol CBLAuthorizer <CBLAuthenticator>
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
- (_Bool)removeStoredCredentials:(id *)arg1;

@optional
@property(readonly) NSString *username;
@end

@protocol CBLCacheable <NSObject>
@property(readonly) NSString *cacheKey;
@end

@protocol CBLChangeTrackerClient <NSObject>
- (void)changeTrackerFinished;
- (void)changeTrackerCaughtUp;
- (void)changeTrackerReceivedSequence:(id)arg1 docID:(NSString *)arg2 revIDs:(NSArray *)arg3 deleted:(_Bool)arg4;
- (void)changeTrackerReceivedHTTPHeaders:(NSDictionary *)arg1;
- (_Bool)changeTrackerApproveSSLTrust:(struct __SecTrust *)arg1 forHost:(NSString *)arg2 port:(unsigned short)arg3;

@optional
- (void)changeTrackerStopped:(CBLChangeTracker *)arg1;
@end

@protocol CBLCodec
@property(readonly) int status;
- (_Bool)flush:(void (^)(void *, unsigned long long))arg1;
- (_Bool)addBytes:(const void *)arg1 length:(unsigned long long)arg2 onOutput:(void (^)(void *, unsigned long long))arg3;
@end

@protocol CBLCredentialAuthorizer <CBLAuthorizer>
@property(readonly) NSURLCredential *credential;
@end

@protocol CBLCustomHeadersAuthorizer <CBLAuthorizer>
- (_Bool)authorizeURLRequest:(NSMutableURLRequest *)arg1;
@end

@protocol CBLDocumentModel <NSObject>
- (void)document:(CBLDocument *)arg1 didChange:(CBLDatabaseChange *)arg2;
@end

@protocol CBLJSONEncoding <NSObject>
- (id)encodeAsJSON;
- (id)initWithJSON:(id)arg1;

@optional
- (void)setOnMutate:(void (^)(void))arg1;
@end

@protocol CBLLoginAuthorizer <CBLAuthorizer>
- (NSArray *)loginRequest;

@optional
- (void)loginResponse:(NSDictionary *)arg1 headers:(NSDictionary *)arg2 error:(NSError *)arg3 continuation:(void (^)(_Bool, NSError *))arg4;
@end

@protocol CBLMultipartReaderDelegate <NSObject>
- (_Bool)finishedPart;
- (_Bool)appendToPart:(NSData *)arg1;
- (_Bool)startedPart:(NSDictionary *)arg1;
@end

@protocol CBLRemoteRequestDelegate <NSObject>
- (_Bool)checkSSLServerTrust:(NSURLProtectionSpace *)arg1;
- (void)remoteRequestReceivedResponse:(CBLRemoteRequest *)arg1;
@end

@protocol CBLSessionCookieAuthorizer <CBLLoginAuthorizer>
@end

@protocol CBLValidationContext <NSObject>
@property(readonly) NSArray *changedKeys;
@property(readonly, nonatomic) NSURL *source;
@property(readonly) CBLSavedRevision *currentRevision;
- (_Bool)validateChanges:(_Bool (^)(NSString *, id, id))arg1;
- (void)rejectWithMessage:(NSString *)arg1;
- (void)reject;
@end

@protocol CBL_QueryRowStorage <NSObject>
- (NSData *)fullTextForDocument:(NSString *)arg1 sequence:(long long)arg2 fullTextID:(unsigned long long)arg3;
- (NSDictionary *)documentPropertiesWithID:(NSString *)arg1 sequence:(long long)arg2 status:(int *)arg3;
@end

@protocol CBL_Replicator <NSObject>
+ (_Bool)needsRunLoop;
@property(readonly) id lastSequence;
@property(nonatomic) _Bool suspended;
@property(readonly) struct __SecCertificate *serverCert;
@property(copy, nonatomic) NSString *sessionID;
@property(readonly, nonatomic) unsigned long long changesTotal;
@property(readonly, nonatomic) unsigned long long changesProcessed;
@property(retain, nonatomic) NSError *error;
@property(readonly) unsigned int status;
@property(readonly) NSString *remoteCheckpointDocID;
@property(readonly, nonatomic) __weak CBLDatabase *db;
@property(readonly, nonatomic) CBL_ReplicatorSettings *settings;
- (void)databaseClosing;
- (void)stop;
- (void)start;
- (id <CBL_Replicator>)initWithDB:(CBLDatabase *)arg1 settings:(CBL_ReplicatorSettings *)arg2;

@optional
@property(readonly) NSArray *activeTasksInfo;
- (void)downloadAttachment:(CBL_AttachmentTask *)arg1;
@end

@protocol CBL_Storage <NSObject>
+ (_Bool)databaseExistsIn:(NSString *)arg1;
@property(readonly) NSArray *allViewNames;
@property(readonly, nonatomic) _Bool inTransaction;
@property(readonly, nonatomic) long long lastSequence;
@property(readonly, nonatomic) unsigned long long documentCount;
@property _Bool autoCompact;
@property unsigned int maxRevTreeDepth;
@property(retain) id <CBL_StorageDelegate> delegate;
- (CBL_Revision *)putLocalRevision:(CBL_Revision *)arg1 prevRevisionID:(CBL_RevID *)arg2 obeyMVCC:(_Bool)arg3 status:(int *)arg4;
- (CBL_MutableRevision *)getLocalDocumentWithID:(NSString *)arg1 revisionID:(CBL_RevID *)arg2;
- (id <CBL_ViewStorage>)viewStorageNamed:(NSString *)arg1 create:(_Bool)arg2;
- (unsigned long long)purgeExpiredDocuments;
- (unsigned long long)nextDocumentExpiry;
- (_Bool)setExpiration:(unsigned long long)arg1 ofDocument:(NSString *)arg2;
- (unsigned long long)expirationOfDocument:(NSString *)arg1;
- (int)purgeRevisions:(NSDictionary *)arg1 result:(id *)arg2;
- (int)forceInsert:(CBL_Revision *)arg1 revisionHistory:(NSArray *)arg2 validationBlock:(int (^)(CBL_Revision *, CBL_Revision *, CBL_RevID *, id *))arg3 source:(NSURL *)arg4 error:(id *)arg5;
- (CBL_Revision *)addDocID:(NSString *)arg1 prevRevID:(CBL_RevID *)arg2 properties:(NSMutableDictionary *)arg3 deleting:(_Bool)arg4 allowConflict:(_Bool)arg5 validationBlock:(int (^)(CBL_Revision *, CBL_Revision *, CBL_RevID *, id *))arg6 status:(int *)arg7 error:(id *)arg8;
- (CBL_RevisionList *)changesSinceSequence:(long long)arg1 options:(const struct CBLChangesOptions *)arg2 filter:(_Bool (^)(CBL_Revision *))arg3 status:(int *)arg4;
- (CBLQueryEnumerator *)getAllDocs:(CBLQueryOptions *)arg1 status:(int *)arg2;
- (NSSet *)findAllAttachmentKeys:(id *)arg1;
- (_Bool)findMissingRevisions:(CBL_RevisionList *)arg1 status:(int *)arg2;
- (CBL_RevID *)findCommonAncestorOf:(CBL_Revision *)arg1 withRevIDs:(NSArray *)arg2;
- (NSArray *)getPossibleAncestorRevisionIDs:(CBL_Revision *)arg1 limit:(unsigned int)arg2 haveBodies:(_Bool *)arg3;
- (CBL_RevisionList *)getAllRevisionsOfDocumentID:(NSString *)arg1 onlyCurrent:(_Bool)arg2 includeDeleted:(_Bool)arg3;
- (NSArray *)getRevisionHistory:(CBL_Revision *)arg1 backToRevIDs:(NSSet *)arg2;
- (CBL_Revision *)getParentRevision:(CBL_Revision *)arg1;
- (long long)getRevisionSequence:(CBL_Revision *)arg1;
- (int)loadRevisionBody:(CBL_MutableRevision *)arg1;
- (CBL_MutableRevision *)getDocumentWithID:(NSString *)arg1 revisionID:(CBL_RevID *)arg2 withBody:(_Bool)arg3 status:(int *)arg4;
- (int)inTransaction:(int (^)(void))arg1;
- (_Bool)compact:(id *)arg1;
- (NSString *)infoForKey:(NSString *)arg1;
- (int)setInfo:(NSString *)arg1 forKey:(NSString *)arg2;
- (void)close;
- (_Bool)openInDirectory:(NSString *)arg1 readOnly:(_Bool)arg2 manager:(CBLManager *)arg3 error:(id *)arg4;

@optional
- (MYAction *)actionToChangeEncryptionKey:(CBLSymmetricKey *)arg1;
- (void)setEncryptionKey:(CBLSymmetricKey *)arg1;
- (void)lowMemoryWarning;
@end

@protocol CBL_StorageDelegate <NSObject>
- (void)databaseStorageChanged:(CBLDatabaseChange *)arg1;
- (void)storageExitedTransaction:(_Bool)arg1;
@end

@protocol CBL_ViewStorage <NSObject>
@property(readonly) long long lastSequenceChangedAt;
@property(readonly) long long lastSequenceIndexed;
@property(readonly) unsigned long long totalRows;
@property(nonatomic) __weak id <CBL_ViewStorageDelegate> delegate;
@property(readonly) NSString *name;
- (id <CBL_QueryRowStorage>)storageForQueryRow:(CBLQueryRow *)arg1;
- (CBLQueryEnumerator *)queryWithOptions:(CBLQueryOptions *)arg1 status:(int *)arg2;
- (int)updateIndexes:(NSArray *)arg1;
- (_Bool)setVersion:(NSString *)arg1;
- (void)deleteView;
- (void)deleteIndex;
- (void)close;
@end

@protocol CBL_ViewStorageDelegate <NSObject>
@property(readonly) NSString *documentType;
@property(readonly) NSString *mapVersion;
@property(readonly) CDUnknownBlockType reduceBlock;
@property(readonly) CDUnknownBlockType mapBlock;
@end

@protocol DDLogFileManager <NSObject>
@property unsigned long long maximumNumberOfLogFiles;
- (NSString *)createNewLogFile;
- (NSArray *)sortedLogFileInfos;
- (NSArray *)sortedLogFileNames;
- (NSArray *)sortedLogFilePaths;
- (NSArray *)unsortedLogFileInfos;
- (NSArray *)unsortedLogFileNames;
- (NSArray *)unsortedLogFilePaths;
- (NSString *)logsDirectory;

@optional
- (void)didRollAndArchiveLogFile:(NSString *)arg1;
- (void)didArchiveLogFile:(NSString *)arg1;
@end

@protocol DDLogFormatter <NSObject>
- (NSString *)formatLogMessage:(DDLogMessage *)arg1;

@optional
- (void)willRemoveFromLogger:(id <DDLogger>)arg1;
- (void)didAddToLogger:(id <DDLogger>)arg1;
@end

@protocol DDLogger <NSObject>
- (void)setLogFormatter:(id <DDLogFormatter>)arg1;
- (id <DDLogFormatter>)logFormatter;
- (void)logMessage:(DDLogMessage *)arg1;

@optional
- (NSString *)loggerName;
- (NSObject<OS_dispatch_queue> *)loggerQueue;
- (void)flush;
- (void)willRemoveLogger;
- (void)didAddLogger;
@end

@protocol InfoViewDelegate <NSObject>
- (void)didDismissInfoDialog;
@end

@protocol MYAction <NSObject>
- (_Bool)cleanUp:(id *)arg1;
- (_Bool)backOut:(id *)arg1;
- (_Bool)perform:(id *)arg1;
@end

@protocol MYCodec
@property(readonly) int status;
- (_Bool)addBytes:(const void *)arg1 length:(unsigned long long)arg2 onOutput:(void (^)(void *, unsigned long long))arg3;
@end

@protocol MYReader <NSObject>
@property(readonly) _Bool atEnd;
@property(readonly) _Bool hasBytesAvailable;
- (CDStruct_6dcf026d)readSliceOfMaxLength:(unsigned long long)arg1;
- (long long)readBytes:(void *)arg1 maxLength:(unsigned long long)arg2;
@end

@protocol MYWriter <NSObject>
- (_Bool)writeContentsOfStream:(NSInputStream *)arg1;
- (_Bool)writeSlice:(CDStruct_6dcf026d)arg1;
- (_Bool)writeData:(NSData *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSLocking
- (void)unlock;
- (void)lock;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol OASignatureProviding <NSObject>
- (NSString *)signClearText:(NSString *)arg1 withSecret:(NSString *)arg2;
- (NSString *)name;
@end

@protocol PSWebSocketDelegate <NSObject>
- (void)webSocket:(PSWebSocket *)arg1 didCloseWithCode:(long long)arg2 reason:(NSString *)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(PSWebSocket *)arg1 didReceiveMessage:(id)arg2;
- (void)webSocket:(PSWebSocket *)arg1 didFailWithError:(NSError *)arg2;
- (void)webSocketDidOpen:(PSWebSocket *)arg1;

@optional
- (_Bool)webSocket:(PSWebSocket *)arg1 validateServerTrust:(struct __SecTrust *)arg2;
- (void)webSocketIsHungry:(PSWebSocket *)arg1;
@end

@protocol PSWebSocketDriverDelegate <NSObject>
- (void)driver:(PSWebSocketDriver *)arg1 write:(NSData *)arg2;
- (void)driver:(PSWebSocketDriver *)arg1 didCloseWithCode:(long long)arg2 reason:(NSString *)arg3;
- (void)driver:(PSWebSocketDriver *)arg1 didFailWithError:(NSError *)arg2;
- (void)driver:(PSWebSocketDriver *)arg1 didReceivePong:(NSData *)arg2;
- (void)driver:(PSWebSocketDriver *)arg1 didReceivePing:(NSData *)arg2;
- (void)driver:(PSWebSocketDriver *)arg1 didReceiveMessage:(id)arg2;
- (void)driverDidOpen:(PSWebSocketDriver *)arg1;
@end

@protocol PSWebSocketServerDelegate <NSObject>
- (void)server:(PSWebSocketServer *)arg1 webSocket:(PSWebSocket *)arg2 didCloseWithCode:(long long)arg3 reason:(NSString *)arg4 wasClean:(_Bool)arg5;
- (void)server:(PSWebSocketServer *)arg1 webSocket:(PSWebSocket *)arg2 didFailWithError:(NSError *)arg3;
- (void)server:(PSWebSocketServer *)arg1 webSocket:(PSWebSocket *)arg2 didReceiveMessage:(id)arg3;
- (void)server:(PSWebSocketServer *)arg1 webSocketDidOpen:(PSWebSocket *)arg2;
- (void)serverDidStop:(PSWebSocketServer *)arg1;
- (void)server:(PSWebSocketServer *)arg1 didFailWithError:(NSError *)arg2;
- (void)serverDidStart:(PSWebSocketServer *)arg1;

@optional
- (void)server:(PSWebSocketServer *)arg1 webSocketIsHungry:(PSWebSocket *)arg2;
- (_Bool)server:(PSWebSocketServer *)arg1 acceptWebSocketFrom:(NSData *)arg2 withRequest:(NSURLRequest *)arg3 trust:(struct __SecTrust *)arg4 response:(id *)arg5;
- (_Bool)server:(PSWebSocketServer *)arg1 acceptWebSocketWithRequest:(NSURLRequest *)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleIntent:(INIntent *)arg2 completionHandler:(void (^)(INIntentResponse *))arg3;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIDataSourceModelAssociation
- (NSIndexPath *)indexPathForElementWithModelIdentifier:(NSString *)arg1 inView:(UIView *)arg2;
- (NSString *)modelIdentifierForElementAtIndexPath:(NSIndexPath *)arg1 inView:(UIView *)arg2;
@end

@protocol UISplitViewControllerDelegate

@optional
- (_Bool)splitViewController:(UISplitViewController *)arg1 shouldHideViewController:(UIViewController *)arg2 inOrientation:(long long)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 popoverController:(UIPopoverController *)arg2 willPresentViewController:(UIViewController *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willShowViewController:(UIViewController *)arg2 invalidatingBarButtonItem:(UIBarButtonItem *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willHideViewController:(UIViewController *)arg2 withBarButtonItem:(UIBarButtonItem *)arg3 forPopoverController:(UIPopoverController *)arg4;
- (long long)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)arg1;
- (unsigned long long)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)arg1;
- (UIViewController *)splitViewController:(UISplitViewController *)arg1 separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)arg2;
- (_Bool)splitViewController:(UISplitViewController *)arg1 collapseSecondaryViewController:(UIViewController *)arg2 ontoPrimaryViewController:(UIViewController *)arg3;
- (UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)arg1;
- (UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)arg1;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showDetailViewController:(UIViewController *)arg2 sender:(id)arg3;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showViewController:(UIViewController *)arg2 sender:(id)arg3;
- (long long)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)arg1;
- (void)splitViewController:(UISplitViewController *)arg1 willChangeToDisplayMode:(long long)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol YDBCKMappingTableInfo <NSObject>
@property(readonly, nonatomic) NSString *current_recordTable_hash;
@end

@protocol YDBCKRecordTableInfo <NSObject>
@property(readonly, nonatomic) long long current_ownerCount;
@property(readonly, nonatomic) CKRecord *current_record;
@property(readonly, nonatomic) NSString *databaseIdentifier;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface RuntimeAnalysisChallengeVC : ExerciseViewController
{
    UILabel *_theLabel;
    UILabel *_Hint;
    UITextField *_theTextField;
    UIButton *_bVerify;
}

@property(nonatomic) __weak UIButton *bVerify; // @synthesize bVerify=_bVerify;
@property(nonatomic) __weak UITextField *theTextField; // @synthesize theTextField=_theTextField;
@property(nonatomic) __weak UILabel *Hint; // @synthesize Hint=_Hint;
@property(nonatomic) __weak UILabel *theLabel; // @synthesize theLabel=_theLabel;
- (void).cxx_destruct;
- (void)didReceiveMemoryWarning;
- (void)buttonClick:(id)arg1;
- (void)viewDidLoad;

@end

@interface RotationLimitingNavigationViewController : UINavigationController
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface SQLInjectionExerciseController : ExerciseViewController
{
    UITextField *searchField;
}

@property(nonatomic) __weak UITextField *searchField; // @synthesize searchField;
- (void).cxx_destruct;
- (void)search:(id)arg1;

@end

@interface YapDatabaseViewPageMetadata : NSObject <NSCopying>
{
    NSString *pageKey;
    NSString *prevPageKey;
    NSString *group;
    unsigned long long count;
    _Bool isNew;
}

- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface YapTouch : NSObject
{
}

+ (id)touch;
+ (void)initialize;
- (id)init;

@end

@interface KeychainExerciseViewController : ExerciseViewController
{
    UITextField *_username;
    UITextField *_password;
    UISwitch *_rememberMe;
}

@property(nonatomic) __weak UISwitch *rememberMe; // @synthesize rememberMe=_rememberMe;
@property(nonatomic) __weak UITextField *password; // @synthesize password=_password;
@property(nonatomic) __weak UITextField *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (void)storeButtonPressed:(id)arg1;
- (void)storeCredentialsInKeychain;
- (void)storeCredentialsInSettingsApp;

@end

@interface YapDatabaseSecondaryIndexHandler : NSObject
{
    id block;
    long long blockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long blockType; // @synthesize blockType;
@property(readonly, nonatomic) id block; // @synthesize block;
- (void).cxx_destruct;

@end

@interface StringAnalysisExerciseController : ExerciseViewController
{
    UITextField *answerField;
}

@property(nonatomic) __weak UITextField *answerField; // @synthesize answerField;
- (void).cxx_destruct;
- (_Bool)isValidResponse:(id)arg1;
- (void)submit:(id)arg1;
- (_Bool)isPlaintextStringTableEntry;
- (id)retrieveStringTableEntry;

@end

@interface DDLogFileManagerDefault : NSObject <DDLogFileManager>
{
    unsigned long long maximumNumberOfLogFiles;
    NSString *_logsDirectory;
    NSString *_defaultFileProtectionLevel;
}

@property unsigned long long maximumNumberOfLogFiles; // @synthesize maximumNumberOfLogFiles;
- (void).cxx_destruct;
- (id)applicationName;
- (id)createNewLogFile;
- (id)newLogFileName;
- (id)sortedLogFileInfos;
- (id)sortedLogFileNames;
- (id)sortedLogFilePaths;
- (id)unsortedLogFileInfos;
- (id)unsortedLogFileNames;
- (id)unsortedLogFilePaths;
- (id)logFileDateFormatter;
- (_Bool)isLogFile:(id)arg1;
- (id)logsDirectory;
- (id)defaultLogsDirectory;
- (void)deleteOldLogFiles;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithLogsDirectory:(id)arg1 defaultFileProtectionLevel:(id)arg2;
- (id)initWithLogsDirectory:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLogFileFormatterDefault : NSObject <DDLogFormatter>
{
    NSDateFormatter *dateFormatter;
}

- (void).cxx_destruct;
- (id)formatLogMessage:(id)arg1;
- (id)initWithDateFormatter:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDFileLogger : DDAbstractLogger <DDLogger>
{
    id <DDLogFileManager> logFileManager;
    DDLogFileInfo *currentLogFileInfo;
    NSFileHandle *currentLogFileHandle;
    NSObject<OS_dispatch_source> *currentLogFileVnode;
    NSObject<OS_dispatch_source> *rollingTimer;
    unsigned long long maximumFileSize;
    double rollingFrequency;
    _Bool _doNotReuseLogFiles;
}

@property _Bool doNotReuseLogFiles; // @synthesize doNotReuseLogFiles=_doNotReuseLogFiles;
@property(readonly, nonatomic) id <DDLogFileManager> logFileManager; // @synthesize logFileManager;
- (void).cxx_destruct;
- (id)loggerName;
- (void)willRemoveLogger;
- (void)logMessage:(id)arg1;
- (id)currentLogFileHandle;
- (id)currentLogFileInfo;
- (void)maybeRollLogFileDueToSize;
- (void)maybeRollLogFileDueToAge;
- (void)rollLogFileNow;
- (void)rollLogFileWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)rollLogFile;
- (void)scheduleTimerToRollLogFileDueToAge;
@property double rollingFrequency;
@property unsigned long long maximumFileSize;
- (void)dealloc;
- (id)initWithLogFileManager:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLogFileInfo : NSObject
{
    NSString *filePath;
    NSString *fileName;
    NSDictionary *fileAttributes;
    NSDate *creationDate;
    NSDate *modificationDate;
    unsigned long long fileSize;
}

+ (id)logFileWithPath:(id)arg1;
@property(readonly, nonatomic) NSString *filePath; // @synthesize filePath;
- (void).cxx_destruct;
- (long long)reverseCompareByModificationDate:(id)arg1;
- (long long)reverseCompareByCreationDate:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)removeExtensionAttributeWithName:(id)arg1;
- (void)addExtensionAttributeWithName:(id)arg1;
- (_Bool)hasExtensionAttributeWithName:(id)arg1;
- (void)renameFile:(id)arg1;
- (void)reset;
@property(nonatomic) _Bool isArchived; // @dynamic isArchived;
- (id)description;
@property(readonly, nonatomic) double age; // @dynamic age;
@property(readonly, nonatomic) unsigned long long fileSize; // @dynamic fileSize;
@property(readonly, nonatomic) NSDate *creationDate; // @dynamic creationDate;
@property(readonly, nonatomic) NSDate *modificationDate; // @dynamic modificationDate;
@property(readonly, nonatomic) NSString *fileName; // @dynamic fileName;
@property(readonly, nonatomic) NSDictionary *fileAttributes; // @dynamic fileAttributes;
- (id)initWithFilePath:(id)arg1;

@end

@interface KeystrokeLoggingExerciseController : ExerciseViewController
{
    UITextField *subjectField;
    UITextField *messageField;
}

@property(nonatomic) __weak UITextField *messageField; // @synthesize messageField;
@property(nonatomic) __weak UITextField *subjectField; // @synthesize subjectField;
- (void).cxx_destruct;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface YapDatabaseReadTransaction : NSObject
{
    NSMutableArray *orderedExtensions;
    _Bool extensionsReady;
    YapMemoryTableTransaction *yapMemoryTableTransaction;
    NSMutableDictionary *extensions;
    _Bool isMutated;
    YapDatabaseConnection *connection;
    _Bool isReadWriteTransaction;
    id _external_userInfo;
}

+ (void)load;
@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_external_userInfo;
@property(readonly, nonatomic) YapDatabaseConnection *connection; // @synthesize connection;
- (void).cxx_destruct;
- (id)mutationDuringEnumerationException;
- (id)dataValueForKey:(id)arg1 extension:(id)arg2;
- (id)stringValueForKey:(id)arg1 extension:(id)arg2;
- (_Bool)getDoubleValue:(double *)arg1 forKey:(id)arg2 extension:(id)arg3;
- (_Bool)getIntValue:(int *)arg1 forKey:(id)arg2 extension:(id)arg3;
- (_Bool)getBoolValue:(_Bool *)arg1 forKey:(id)arg2 extension:(id)arg3;
- (id)yapMemoryTableTransaction;
- (id)memoryTableTransaction:(id)arg1;
- (id)orderedExtensions;
- (id)extensions;
- (void)prepareExtensions;
- (id)ext:(id)arg1;
- (id)extension:(id)arg1;
- (void)_enumerateRowsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)_enumerateRowsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateRowsInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateRowsInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateRowsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateRowsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndObjectsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndObjectsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateKeysAndObjectsInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateKeysAndObjectsInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndObjectsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateKeysAndObjectsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndMetadataInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndMetadataInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateKeysAndMetadataInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateKeysAndMetadataInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysAndMetadataInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)_enumerateKeysAndMetadataInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateKeysInCollections:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_enumerateKeysInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowsForKeys:(id)arg1 inCollection:(id)arg2 unorderedUsingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateObjectsForKeys:(id)arg1 inCollection:(id)arg2 unorderedUsingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateMetadataForKeys:(id)arg1 inCollection:(id)arg2 unorderedUsingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)enumerateRowsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateRowsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)enumerateRowsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndObjectsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndObjectsInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndMetadataInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1 withFilter:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndMetadataInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndMetadataInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 withFilter:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndMetadataInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysInAllCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysInCollection:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateCollectionsForKey:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateCollectionsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getSerializedObject:(id *)arg1 serializedMetadata:(id *)arg2 forKey:(id)arg3 inCollection:(id)arg4;
- (id)serializedMetadataForKey:(id)arg1 inCollection:(id)arg2;
- (id)serializedObjectForKey:(id)arg1 inCollection:(id)arg2;
- (id)metadataForKey:(id)arg1 inCollection:(id)arg2;
- (_Bool)getObject:(id *)arg1 metadata:(id *)arg2 forKey:(id)arg3 inCollection:(id)arg4;
- (_Bool)hasObjectForKey:(id)arg1 inCollection:(id)arg2;
- (id)objectForKey:(id)arg1 inCollection:(id)arg2;
- (_Bool)getObject:(id *)arg1 metadata:(id *)arg2 forCollectionKey:(id)arg3 withRowid:(long long)arg4;
- (id)metadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (id)metadataForKey:(id)arg1 inCollection:(id)arg2 withRowid:(long long)arg3;
- (id)objectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (id)objectForKey:(id)arg1 inCollection:(id)arg2 withRowid:(long long)arg3;
- (_Bool)hasRowid:(long long)arg1;
- (_Bool)getCollectionKey:(id *)arg1 object:(id *)arg2 metadata:(id *)arg3 forRowid:(long long)arg4;
- (_Bool)getCollectionKey:(id *)arg1 metadata:(id *)arg2 forRowid:(long long)arg3;
- (_Bool)getCollectionKey:(id *)arg1 object:(id *)arg2 forRowid:(long long)arg3;
- (id)collectionKeyForRowid:(long long)arg1;
- (_Bool)getRowid:(long long *)arg1 forKey:(id)arg2 inCollection:(id)arg3;
- (id)allKeysInCollection:(id)arg1;
- (id)allCollections;
- (unsigned long long)numberOfKeysInAllCollections;
- (unsigned long long)numberOfKeysInCollection:(id)arg1;
- (unsigned long long)numberOfCollections;
- (void)rollbackTransaction;
- (void)commitTransaction;
- (void)preCommitReadWriteTransaction;
- (void)beginTransaction;
- (id)initWithConnection:(id)arg1 isReadWriteTransaction:(_Bool)arg2;

@end

@interface YapDatabaseReadWriteTransaction : YapDatabaseReadTransaction
{
    _Bool rollback;
    id customObjectForNotification;
}

@property(retain, nonatomic) id yapDatabaseModifiedNotificationCustomObject; // @synthesize yapDatabaseModifiedNotificationCustomObject=customObjectForNotification;
- (void).cxx_destruct;
- (void)removeAllValuesForExtension:(id)arg1;
- (void)removeValueForKey:(id)arg1 extension:(id)arg2;
- (void)setDataValue:(id)arg1 forKey:(id)arg2 extension:(id)arg3;
- (void)setStringValue:(id)arg1 forKey:(id)arg2 extension:(id)arg3;
- (void)setDoubleValue:(double)arg1 forKey:(id)arg2 extension:(id)arg3;
- (void)setIntValue:(int)arg1 forKey:(id)arg2 extension:(id)arg3;
- (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2 extension:(id)arg3;
- (void)removeRegisteredExtensionTransactionWithName:(id)arg1;
- (void)addRegisteredExtensionTransaction:(id)arg1 withName:(id)arg2;
- (void)removeAllObjectsInAllCollections;
- (void)removeAllObjectsInCollection:(id)arg1;
- (void)removeObjectsForKeys:(id)arg1 inCollection:(id)arg2;
- (void)removeObjectForKey:(id)arg1 inCollection:(id)arg2;
- (void)removeObjectForKey:(id)arg1 inCollection:(id)arg2 withRowid:(long long)arg3;
- (void)touchMetadataForKey:(id)arg1 inCollection:(id)arg2;
- (void)touchObjectForKey:(id)arg1 inCollection:(id)arg2;
- (void)replaceMetadata:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withRowid:(long long)arg4 serializedMetadata:(id)arg5;
- (void)replaceMetadata:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withSerializedMetadata:(id)arg4;
- (void)replaceMetadata:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3;
- (void)replaceObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withRowid:(long long)arg4 serializedObject:(id)arg5;
- (void)replaceObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withSerializedObject:(id)arg4;
- (void)replaceObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withMetadata:(id)arg4 serializedObject:(id)arg5 serializedMetadata:(id)arg6;
- (void)setObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3 withMetadata:(id)arg4;
- (void)setObject:(id)arg1 forKey:(id)arg2 inCollection:(id)arg3;
- (void)rollback;

@end

@interface SVProgressHUD : UIView
{
    _Bool _isInitializing;
    _Bool _hapticsEnabled;
    long long _defaultStyle;
    unsigned long long _defaultMaskType;
    unsigned long long _defaultAnimationType;
    UIView *_containerView;
    double _ringThickness;
    double _ringRadius;
    double _ringNoTextRadius;
    double _cornerRadius;
    UIFont *_font;
    UIColor *_backgroundColor;
    UIColor *_foregroundColor;
    UIColor *_backgroundLayerColor;
    UIImage *_infoImage;
    UIImage *_successImage;
    UIImage *_errorImage;
    UIView *_viewForExtension;
    double _minimumDismissTimeInterval;
    double _maximumDismissTimeInterval;
    double _fadeInAnimationDuration;
    double _fadeOutAnimationDuration;
    double _maxSupportedWindowLevel;
    NSTimer *_fadeOutTimer;
    UIControl *_controlView;
    UIView *_backgroundView;
    SVRadialGradientLayer *_backgroundRadialGradientLayer;
    UIVisualEffectView *_hudView;
    UIVisualEffectView *_hudVibrancyView;
    UILabel *_statusLabel;
    UIImageView *_imageView;
    UIView *_indefiniteAnimatedView;
    SVProgressAnimatedView *_ringView;
    SVProgressAnimatedView *_backgroundRingView;
    double _progress;
    unsigned long long _activityCount;
    UINotificationFeedbackGenerator *_hapticGenerator;
    struct CGSize _minimumSize;
    struct CGSize _imageViewSize;
    struct UIOffset _offsetFromCenter;
}

+ (double)displayDurationForString:(id)arg1;
+ (_Bool)isVisible;
+ (void)resetOffsetFromCenter;
+ (void)setOffsetFromCenter:(struct UIOffset)arg1;
+ (void)dismissWithDelay:(double)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)dismissWithDelay:(double)arg1;
+ (void)dismissWithCompletion:(CDUnknownBlockType)arg1;
+ (void)dismiss;
+ (void)popActivity;
+ (void)showImage:(id)arg1 status:(id)arg2 maskType:(unsigned long long)arg3;
+ (void)showImage:(id)arg1 status:(id)arg2;
+ (void)showErrorWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showErrorWithStatus:(id)arg1;
+ (void)showSuccessWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showSuccessWithStatus:(id)arg1;
+ (void)showInfoWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showInfoWithStatus:(id)arg1;
+ (void)showProgress:(float)arg1 status:(id)arg2 maskType:(unsigned long long)arg3;
+ (void)showProgress:(float)arg1 status:(id)arg2;
+ (void)showProgress:(float)arg1 maskType:(unsigned long long)arg2;
+ (void)showProgress:(float)arg1;
+ (void)showWithStatus:(id)arg1 maskType:(unsigned long long)arg2;
+ (void)showWithStatus:(id)arg1;
+ (void)showWithMaskType:(unsigned long long)arg1;
+ (void)show;
+ (void)setHapticsEnabled:(_Bool)arg1;
+ (void)setMaxSupportedWindowLevel:(double)arg1;
+ (void)setFadeOutAnimationDuration:(double)arg1;
+ (void)setFadeInAnimationDuration:(double)arg1;
+ (void)setMaximumDismissTimeInterval:(double)arg1;
+ (void)setMinimumDismissTimeInterval:(double)arg1;
+ (void)setViewForExtension:(id)arg1;
+ (void)setErrorImage:(id)arg1;
+ (void)setSuccessImage:(id)arg1;
+ (void)setInfoImage:(id)arg1;
+ (void)setImageViewSize:(struct CGSize)arg1;
+ (void)setBackgroundLayerColor:(id)arg1;
+ (void)setBackgroundColor:(id)arg1;
+ (void)setForegroundColor:(id)arg1;
+ (void)setFont:(id)arg1;
+ (void)setBorderWidth:(double)arg1;
+ (void)setBorderColor:(id)arg1;
+ (void)setCornerRadius:(double)arg1;
+ (void)setRingNoTextRadius:(double)arg1;
+ (void)setRingRadius:(double)arg1;
+ (void)setRingThickness:(double)arg1;
+ (void)setMinimumSize:(struct CGSize)arg1;
+ (void)setContainerView:(id)arg1;
+ (void)setDefaultAnimationType:(unsigned long long)arg1;
+ (void)setDefaultMaskType:(unsigned long long)arg1;
+ (void)setDefaultStyle:(long long)arg1;
+ (void)setStatus:(id)arg1;
+ (id)sharedView;
@property(retain, nonatomic) UINotificationFeedbackGenerator *hapticGenerator; // @synthesize hapticGenerator=_hapticGenerator;
@property(nonatomic) unsigned long long activityCount; // @synthesize activityCount=_activityCount;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) SVProgressAnimatedView *backgroundRingView; // @synthesize backgroundRingView=_backgroundRingView;
@property(retain, nonatomic) SVProgressAnimatedView *ringView; // @synthesize ringView=_ringView;
@property(retain, nonatomic) UIView *indefiniteAnimatedView; // @synthesize indefiniteAnimatedView=_indefiniteAnimatedView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UILabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property(retain, nonatomic) UIVisualEffectView *hudVibrancyView; // @synthesize hudVibrancyView=_hudVibrancyView;
@property(retain, nonatomic) UIVisualEffectView *hudView; // @synthesize hudView=_hudView;
@property(retain, nonatomic) SVRadialGradientLayer *backgroundRadialGradientLayer; // @synthesize backgroundRadialGradientLayer=_backgroundRadialGradientLayer;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIControl *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) NSTimer *fadeOutTimer; // @synthesize fadeOutTimer=_fadeOutTimer;
@property(nonatomic) _Bool hapticsEnabled; // @synthesize hapticsEnabled=_hapticsEnabled;
@property(nonatomic) double maxSupportedWindowLevel; // @synthesize maxSupportedWindowLevel=_maxSupportedWindowLevel;
@property(nonatomic) double fadeOutAnimationDuration; // @synthesize fadeOutAnimationDuration=_fadeOutAnimationDuration;
@property(nonatomic) double fadeInAnimationDuration; // @synthesize fadeInAnimationDuration=_fadeInAnimationDuration;
@property(nonatomic) struct UIOffset offsetFromCenter; // @synthesize offsetFromCenter=_offsetFromCenter;
@property(nonatomic) double maximumDismissTimeInterval; // @synthesize maximumDismissTimeInterval=_maximumDismissTimeInterval;
@property(nonatomic) double minimumDismissTimeInterval; // @synthesize minimumDismissTimeInterval=_minimumDismissTimeInterval;
@property(retain, nonatomic) UIView *viewForExtension; // @synthesize viewForExtension=_viewForExtension;
@property(retain, nonatomic) UIImage *errorImage; // @synthesize errorImage=_errorImage;
@property(retain, nonatomic) UIImage *successImage; // @synthesize successImage=_successImage;
@property(retain, nonatomic) UIImage *infoImage; // @synthesize infoImage=_infoImage;
@property(nonatomic) struct CGSize imageViewSize; // @synthesize imageViewSize=_imageViewSize;
@property(retain, nonatomic) UIColor *backgroundLayerColor; // @synthesize backgroundLayerColor=_backgroundLayerColor;
@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double ringNoTextRadius; // @synthesize ringNoTextRadius=_ringNoTextRadius;
@property(nonatomic) double ringRadius; // @synthesize ringRadius=_ringRadius;
@property(nonatomic) double ringThickness; // @synthesize ringThickness=_ringThickness;
@property(nonatomic) struct CGSize minimumSize; // @synthesize minimumSize=_minimumSize;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic) unsigned long long defaultAnimationType; // @synthesize defaultAnimationType=_defaultAnimationType;
@property(nonatomic) unsigned long long defaultMaskType; // @synthesize defaultMaskType=_defaultMaskType;
@property(nonatomic) long long defaultStyle; // @synthesize defaultStyle=_defaultStyle;
- (void).cxx_destruct;
- (void)addBlur;
@property(readonly, nonatomic) UIWindow *frontWindow;
@property(readonly, nonatomic) double visibleKeyboardHeight;
- (id)backgroundColorForStyle;
- (id)foregroundColorForStyle;
- (void)cancelIndefiniteAnimatedViewAnimation;
- (void)cancelRingLayerAnimation;
- (void)dismissWithDelay:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismiss;
- (void)showStatus:(id)arg1;
- (void)showImage:(id)arg1 status:(id)arg2 duration:(double)arg3;
- (void)showProgress:(float)arg1 status:(id)arg2;
- (void)controlViewDidReceiveTouchEvent:(id)arg1 forEvent:(id)arg2;
- (void)moveToPoint:(struct CGPoint)arg1 rotateAngle:(double)arg2;
- (void)positionHUD:(id)arg1;
- (id)notificationUserInfo;
- (void)registerNotifications;
- (void)setStatus:(id)arg1;
- (void)updateViewHierarchy;
- (void)updateMotionEffectForXMotionEffectType:(long long)arg1 yMotionEffectType:(long long)arg2;
- (void)updateMotionEffectForOrientation:(long long)arg1;
- (void)updateHUDFrame;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface BackgroundingExerciseController : ExerciseViewController
{
    UITextField *cityField;
    UITextField *colorField;
}

@property(nonatomic) __weak UITextField *colorField; // @synthesize colorField;
@property(nonatomic) __weak UITextField *cityField; // @synthesize cityField;
- (void).cxx_destruct;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface YapNull : NSObject
{
}

+ (id)null;
+ (void)initialize;
- (id)init;

@end

@interface YDBCKCleanMappingTableInfo : NSObject <YDBCKMappingTableInfo>
{
    NSString *recordTable_hash;
}

@property(readonly, nonatomic) NSString *recordTable_hash; // @synthesize recordTable_hash;
- (void).cxx_destruct;
- (id)dirtyCopy;
@property(readonly, nonatomic) NSString *current_recordTable_hash;
- (id)initWithRecordTableHash:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YDBCKDirtyMappingTableInfo : NSObject <YDBCKMappingTableInfo>
{
    NSString *clean_recordTable_hash;
    NSString *dirty_recordTable_hash;
}

@property(retain, nonatomic) NSString *dirty_recordTable_hash; // @synthesize dirty_recordTable_hash;
@property(readonly, nonatomic) NSString *clean_recordTable_hash; // @synthesize clean_recordTable_hash;
- (void).cxx_destruct;
- (id)cleanCopy;
@property(readonly, nonatomic) NSString *current_recordTable_hash;
- (id)initWithRecordTableHash:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseRelationshipTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseRelationshipConnection *relationshipConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    _Bool isFlushing;
}

- (void)removeEdge:(id)arg1 withProcessing:(long long)arg2;
- (void)removeEdgeWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 withProcessing:(long long)arg6;
- (void)addEdge:(id)arg1;
- (unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4;
- (unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5;
- (unsigned long long)edgeCountWithName:(id)arg1 destinationFilePath:(id)arg2;
- (unsigned long long)edgeCountWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3;
- (unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3;
- (unsigned long long)edgeCountWithName:(id)arg1;
- (void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 usingBlock:(CDUnknownBlockType)arg6;
- (void)enumerateEdgesWithName:(id)arg1 destinationFilePath:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEdgesWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEdgesWithName:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)destinationNodeForEdge:(id)arg1;
- (id)sourceNodeForEdge:(id)arg1;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (_Bool)flushPendingChangesToMainDatabaseTable;
- (void)flush;
- (void)removeAllEdges;
- (void)removeAllProtocolEdges;
- (void)deleteEdgesWithSourceOrDestination:(long long)arg1;
- (void)deleteEdge:(id)arg1;
- (void)updateEdge:(id)arg1;
- (void)insertEdge:(id)arg1;
- (void)preprocessManualEdges:(id)arg1;
- (void)preprocessProtocolEdges:(id)arg1 forUpdatedSource:(id)arg2;
- (void)preprocessProtocolEdges:(id)arg1 forInsertedSource:(id)arg2;
- (id)findManualEdgeMatching:(id)arg1;
- (long long)edgeCountWithDestinationFilePath:(id)arg1 name:(id)arg2 excludingSource:(long long)arg3;
- (long long)edgeCountWithDestination:(long long)arg1 name:(id)arg2 excludingSource:(long long)arg3;
- (long long)edgeCountWithSource:(long long)arg1 name:(id)arg2 excludingDestination:(long long)arg3;
- (id)rowidNumberForDeletedKey:(id)arg1 inCollection:(id)arg2;
- (void)enumerateExistingEdgesWithDestination:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateExistingEdgesWithSource:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 destinationFilePath:(id)arg5;
- (id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 destinationKey:(id)arg5 collection:(id)arg6 rowid:(long long)arg7;
- (id)findChangesMatchingName:(id)arg1 destinationFilePath:(id)arg2;
- (id)findChangesMatchingName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4;
- (id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4;
- (id)findChangesMatchingName:(id)arg1;
- (id)tableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (_Bool)populateTables;
- (_Bool)createTables;
- (_Bool)dropTable;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithRelationshipConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface SVRadialGradientLayer : CALayer
{
    struct CGPoint _gradientCenter;
}

@property(nonatomic) struct CGPoint gradientCenter; // @synthesize gradientCenter=_gradientCenter;
- (void)drawInContext:(struct CGContext *)arg1;

@end

@interface CouchBaseExerciseViewController : ExerciseViewController
{
    CBLDatabase *database;
    UITextField *_nameTextField;
    UITextField *_ageTextField;
    UITextField *_genderTextField;
    UITextField *_diseaseTextField;
}

@property(nonatomic) __weak UITextField *diseaseTextField; // @synthesize diseaseTextField=_diseaseTextField;
@property(nonatomic) __weak UITextField *genderTextField; // @synthesize genderTextField=_genderTextField;
@property(nonatomic) __weak UITextField *ageTextField; // @synthesize ageTextField=_ageTextField;
@property(nonatomic) __weak UITextField *nameTextField; // @synthesize nameTextField=_nameTextField;
- (void).cxx_destruct;
- (_Bool)verifyPatientInfo:(id)arg1;
- (void)saveData;
- (void)verifyItemPressed:(id)arg1;
- (void)viewDidLoad;

@end

@interface MemoryManagementVC : ExerciseViewController
{
    NSString *_cardNumberString;
    UITextField *_cardNoTextField;
    UITextField *_cardCCVTextField;
}

@property(retain, nonatomic) UITextField *cardCCVTextField; // @synthesize cardCCVTextField=_cardCCVTextField;
@property(retain, nonatomic) UITextField *cardNoTextField; // @synthesize cardNoTextField=_cardNoTextField;
@property(retain, nonatomic) NSString *cardNumberString; // @synthesize cardNumberString=_cardNumberString;
- (void).cxx_destruct;
- (void)payItemPressed:(id)arg1;

@end

@interface DDDispatchQueueLogFormatter : NSObject <DDLogFormatter>
{
    NSString *dateFormatString;
    int atomicLoggerCount;
    NSDateFormatter *threadUnsafeDateFormatter;
    int lock;
    unsigned long long _minQueueLength;
    unsigned long long _maxQueueLength;
    NSMutableDictionary *_replacements;
}

@property unsigned long long maxQueueLength; // @synthesize maxQueueLength=_maxQueueLength;
@property unsigned long long minQueueLength; // @synthesize minQueueLength=_minQueueLength;
- (void).cxx_destruct;
- (void)willRemoveFromLogger:(id)arg1;
- (void)didAddToLogger:(id)arg1;
- (id)formatLogMessage:(id)arg1;
- (id)queueThreadLabelForLogMessage:(id)arg1;
- (id)stringFromDate:(id)arg1;
- (void)setReplacementString:(id)arg1 forQueueLabel:(id)arg2;
- (id)replacementStringForQueueLabel:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RCreditInfo : RLMObject
{
    NSString *_name;
    NSString *_cardNumber;
    NSString *_cvv;
}

@property(retain, nonatomic) NSString *cvv; // @synthesize cvv=_cvv;
@property(retain, nonatomic) NSString *cardNumber; // @synthesize cardNumber=_cardNumber;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

@interface LocalDataStorageExerciseController : ExerciseViewController
{
    UITextField *usernameField;
    UITextField *passwordField;
    UISwitch *credentialStorageSwitch;
}

@property(nonatomic) __weak UISwitch *credentialStorageSwitch; // @synthesize credentialStorageSwitch;
@property(nonatomic) __weak UITextField *passwordField; // @synthesize passwordField;
@property(nonatomic) __weak UITextField *usernameField; // @synthesize usernameField;
- (void).cxx_destruct;
- (void)storeCredentialsForUsername:(id)arg1 withPassword:(id)arg2;
- (void)submit:(id)arg1;

@end

@interface YAPExcersizeViewController : ExerciseViewController
{
    UITextField *_emailTextField;
    UITextField *_passwordTextField;
}

@property(nonatomic) __weak UITextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(nonatomic) __weak UITextField *emailTextField; // @synthesize emailTextField=_emailTextField;
- (void).cxx_destruct;
- (_Bool)verifyName:(id)arg1 password:(id)arg2;
- (id)getYAPDatabasePath;
- (void)verifyItemPressed:(id)arg1;
- (void)viewDidLoad;
- (void)saveData;

@end

@interface YapDatabaseManager : NSObject
{
}

+ (void)deregisterDatabaseForPath:(id)arg1;
+ (_Bool)registerDatabaseForPath:(id)arg1;
+ (void)initialize;

@end

@interface User : NSManagedObject
{
}

+ (id)fetchRequest;

// Remaining properties
@property(copy, nonatomic) NSString *email; // @dynamic email;
@property(copy, nonatomic) NSString *password; // @dynamic password;

@end

@interface YapCacheItem : NSObject
{
    YapCacheItem *prev;
    YapCacheItem *next;
    id key;
    id value;
}

- (void).cxx_destruct;
- (id)description;
- (id)initWithKey:(id)arg1 value:(id)arg2;

@end

@interface YapCache : NSObject
{
    struct __CFDictionary *cfdict;
    unsigned long long countLimit;
    YapCacheItem *mostRecentCacheItem;
    YapCacheItem *leastRecentCacheItem;
    YapCacheItem *evictedCacheItem;
    NSSet *allowedKeyClasses;
    NSSet *allowedObjectClasses;
}

@property(copy, nonatomic) NSSet *allowedObjectClasses; // @synthesize allowedObjectClasses;
@property(copy, nonatomic) NSSet *allowedKeyClasses; // @synthesize allowedKeyClasses;
- (void).cxx_destruct;
- (id)description;
- (void)enumerateKeysAndObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysWithBlock:(CDUnknownBlockType)arg1;
- (void)removeObjectsForKeys:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)removeAllObjects;
- (unsigned long long)count;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)containsKey:(id)arg1;
- (id)objectForKey:(id)arg1;
@property(nonatomic) unsigned long long countLimit;
- (void)dealloc;
- (id)initWithCountLimit:(unsigned long long)arg1 keyCallbacks:(CDStruct_90be15af)arg2;
- (id)initWithCountLimit:(unsigned long long)arg1;
- (id)init;

@end

@interface WebkitCacheExerciseViewController : ExerciseViewController
{
    UILabel *_encryptedLabel;
    UITextField *_keyTextField;
}

@property(nonatomic) __weak UITextField *keyTextField; // @synthesize keyTextField=_keyTextField;
@property(nonatomic) __weak UILabel *encryptedLabel; // @synthesize encryptedLabel=_encryptedLabel;
- (void).cxx_destruct;
- (void)verify:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;

@end

@interface ExerciseIntroViewController : UIViewController <InfoViewDelegate>
{
    Exercise *exercise;
    UIWebView *webView;
}

@property(retain, nonatomic) UIWebView *webView; // @synthesize webView;
@property(retain, nonatomic) Exercise *exercise; // @synthesize exercise;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)didDismissInfoDialog;
- (void)showInfoDialog;
- (void)startExercise;
- (void)goHome;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 exercise:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseConnection : NSObject
{
    YapDatabase *database;
    struct sqlite3 *db;
    NSObject<OS_dispatch_queue> *connectionQueue;
    void *IsOnConnectionQueueKey;
    NSArray *extensionsOrder;
    NSDictionary *extensionDependencies;
    _Bool hasDiskChanges;
    YapCache *keyCache;
    YapCache *objectCache;
    YapCache *metadataCache;
    unsigned long long objectCacheLimit;
    unsigned long long metadataCacheLimit;
    long long objectPolicy;
    long long metadataPolicy;
    _Bool needsMarkSqlLevelSharedReadLock;
    NSMutableDictionary *objectChanges;
    NSMutableDictionary *metadataChanges;
    NSMutableSet *removedKeys;
    NSMutableSet *removedCollections;
    NSMutableSet *removedRowids;
    _Bool allKeysRemoved;
    unsigned long long snapshot;
    id sharedKeySetForInternalChangeset;
    id sharedKeySetForExternalChangeset;
    YapDatabaseReadTransaction *longLivedReadTransaction;
    _Bool throwExceptionsForImplicitlyEndingLongLivedReadTransaction;
    NSMutableArray *pendingChangesets;
    NSMutableArray *processedChangesets;
    NSDictionary *registeredExtensions;
    _Bool registeredExtensionsChanged;
    NSDictionary *registeredMemoryTables;
    _Bool registeredMemoryTablesChanged;
    NSMutableDictionary *extensions;
    _Bool extensionsReady;
    id sharedKeySetForExtensions;
    struct sqlite3_stmt *beginTransactionStatement;
    struct sqlite3_stmt *commitTransactionStatement;
    struct sqlite3_stmt *rollbackTransactionStatement;
    struct sqlite3_stmt *yapGetDataForKeyStatement;
    struct sqlite3_stmt *yapSetDataForKeyStatement;
    struct sqlite3_stmt *yapRemoveForKeyStatement;
    struct sqlite3_stmt *yapRemoveExtensionStatement;
    struct sqlite3_stmt *getCollectionCountStatement;
    struct sqlite3_stmt *getKeyCountForCollectionStatement;
    struct sqlite3_stmt *getKeyCountForAllStatement;
    struct sqlite3_stmt *getCountForRowidStatement;
    struct sqlite3_stmt *getRowidForKeyStatement;
    struct sqlite3_stmt *getKeyForRowidStatement;
    struct sqlite3_stmt *getDataForRowidStatement;
    struct sqlite3_stmt *getMetadataForRowidStatement;
    struct sqlite3_stmt *getAllForRowidStatement;
    struct sqlite3_stmt *getDataForKeyStatement;
    struct sqlite3_stmt *getMetadataForKeyStatement;
    struct sqlite3_stmt *getAllForKeyStatement;
    struct sqlite3_stmt *insertForRowidStatement;
    struct sqlite3_stmt *updateAllForRowidStatement;
    struct sqlite3_stmt *updateObjectForRowidStatement;
    struct sqlite3_stmt *updateMetadataForRowidStatement;
    struct sqlite3_stmt *removeForRowidStatement;
    struct sqlite3_stmt *removeCollectionStatement;
    struct sqlite3_stmt *removeAllStatement;
    struct sqlite3_stmt *enumerateCollectionsStatement;
    struct sqlite3_stmt *enumerateCollectionsForKeyStatement;
    struct sqlite3_stmt *enumerateKeysInCollectionStatement;
    struct sqlite3_stmt *enumerateKeysInAllCollectionsStatement;
    struct sqlite3_stmt *enumerateKeysAndMetadataInCollectionStatement;
    struct sqlite3_stmt *enumerateKeysAndMetadataInAllCollectionsStatement;
    struct sqlite3_stmt *enumerateKeysAndObjectsInCollectionStatement;
    struct sqlite3_stmt *enumerateKeysAndObjectsInAllCollectionsStatement;
    struct sqlite3_stmt *enumerateRowsInCollectionStatement;
    struct sqlite3_stmt *enumerateRowsInAllCollectionsStatement;
    int lock;
    _Bool writeQueueSuspended;
    _Bool activeReadWriteTransaction;
    NSString *_name;
    unsigned long long _mustUseAtomicProperty_permittedTransactions;
    unsigned long long autoFlushMemoryFlags;
}

+ (void)load;
@property unsigned long long autoFlushMemoryFlags; // @synthesize autoFlushMemoryFlags;
@property unsigned long long permittedTransactions; // @synthesize permittedTransactions=_mustUseAtomicProperty_permittedTransactions;
@property(copy) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) YapDatabase *database; // @synthesize database;
- (void).cxx_destruct;
- (id)implicitlyEndingLongLivedReadTransactionException;
- (id)unpermittedTransactionException:(unsigned long long)arg1;
- (id)nonMainThreadException;
- (void)unregisterMemoryTableWithName:(id)arg1;
- (_Bool)registerMemoryTable:(id)arg1 withName:(id)arg2;
- (id)registeredMemoryTables;
- (void)asyncVacuumWithCompletionQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)asyncVacuumWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)vacuum;
- (id)pragmaAutoVacuum;
- (void)removeRegisteredExtensionConnectionWithName:(id)arg1;
- (void)addRegisteredExtensionConnection:(id)arg1 withName:(id)arg2;
- (void)didUnregisterExtensionWithName:(id)arg1;
- (void)didRegisterExtension:(id)arg1 withName:(id)arg2 transaction:(id)arg3 needsClassValue:(_Bool)arg4;
- (void)willRegisterExtension:(id)arg1 withName:(id)arg2 transaction:(id)arg3 needsClassValue:(_Bool *)arg4;
- (void)_unregisterExtensionWithName:(id)arg1 transaction:(id)arg2;
- (void)unregisterExtensionWithName:(id)arg1;
- (_Bool)registerExtension:(id)arg1 withName:(id)arg2;
- (id)extensions;
- (id)ext:(id)arg1;
- (id)extension:(id)arg1;
- (void)enumerateChangedCollectionKeysInNotifications:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateChangedKeysInCollection:(id)arg1 inNotifications:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)didClearAllCollectionsInNotifications:(id)arg1;
- (_Bool)didClearCollection:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasMetadataChangeForAnyKeys:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasObjectChangeForAnyKeys:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasChangeForAnyKeys:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasChangeForAnyKeys:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3 includingObjectChanges:(_Bool)arg4 metadataChanges:(_Bool)arg5;
- (_Bool)hasMetadataChangeForKey:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasObjectChangeForKey:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasChangeForKey:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3;
- (_Bool)hasChangeForKey:(id)arg1 inCollection:(id)arg2 inNotifications:(id)arg3 includingObjectChanges:(_Bool)arg4 metadataChanges:(_Bool)arg5;
- (_Bool)hasMetadataChangeForCollection:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasObjectChangeForCollection:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasChangeForCollection:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasChangeForCollection:(id)arg1 inNotifications:(id)arg2 includingObjectChanges:(_Bool)arg3 metadataChanges:(_Bool)arg4;
- (void)noteCommittedChanges:(id)arg1;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2;
- (id)externalChangesetKeys;
- (id)internalChangesetKeys;
- (void)maybeResetLongLivedReadTransaction;
- (void)disableExceptionsForImplicitlyEndingLongLivedReadTransaction;
- (void)enableExceptionsForImplicitlyEndingLongLivedReadTransaction;
- (_Bool)isInLongLivedReadTransaction;
- (id)endLongLivedReadTransaction;
- (id)beginLongLivedReadTransaction;
- (void)postRollbackCleanup;
- (void)markSqlLevelSharedReadLockAcquired;
- (unsigned long long)incrementSnapshotInDatabase;
- (unsigned long long)readSnapshotFromDatabase;
- (void)postVacuum;
- (void)preVacuum;
- (void)postReadWriteTransaction:(id)arg1;
- (void)preReadWriteTransaction:(id)arg1;
- (void)postReadTransaction:(id)arg1;
- (void)preReadTransaction:(id)arg1;
- (id)newReadWriteTransaction;
- (id)newReadTransaction;
- (void)asyncReadWriteWithBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)asyncReadWriteWithBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)asyncReadWriteWithBlock:(CDUnknownBlockType)arg1;
- (void)asyncReadWithBlock:(CDUnknownBlockType)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)asyncReadWithBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)asyncReadWithBlock:(CDUnknownBlockType)arg1;
- (void)readWriteWithBlock:(CDUnknownBlockType)arg1;
- (void)readWithBlock:(CDUnknownBlockType)arg1;
- (struct sqlite3_stmt *)enumerateRowsInAllCollectionsStatement;
- (struct sqlite3_stmt *)enumerateRowsInCollectionStatement;
- (struct sqlite3_stmt *)enumerateKeysAndObjectsInAllCollectionsStatement;
- (struct sqlite3_stmt *)enumerateKeysAndObjectsInCollectionStatement;
- (struct sqlite3_stmt *)enumerateKeysAndMetadataInAllCollectionsStatement;
- (struct sqlite3_stmt *)enumerateKeysAndMetadataInCollectionStatement;
- (struct sqlite3_stmt *)enumerateKeysInAllCollectionsStatement;
- (struct sqlite3_stmt *)enumerateKeysInCollectionStatement;
- (struct sqlite3_stmt *)enumerateCollectionsForKeyStatement;
- (struct sqlite3_stmt *)enumerateCollectionsStatement;
- (struct sqlite3_stmt *)removeAllStatement;
- (struct sqlite3_stmt *)removeCollectionStatement;
- (struct sqlite3_stmt *)removeForRowidStatement;
- (struct sqlite3_stmt *)updateMetadataForRowidStatement;
- (struct sqlite3_stmt *)updateObjectForRowidStatement;
- (struct sqlite3_stmt *)updateAllForRowidStatement;
- (struct sqlite3_stmt *)insertForRowidStatement;
- (struct sqlite3_stmt *)getAllForKeyStatement;
- (struct sqlite3_stmt *)getMetadataForKeyStatement;
- (struct sqlite3_stmt *)getDataForKeyStatement;
- (struct sqlite3_stmt *)getAllForRowidStatement;
- (struct sqlite3_stmt *)getMetadataForRowidStatement;
- (struct sqlite3_stmt *)getDataForRowidStatement;
- (struct sqlite3_stmt *)getKeyForRowidStatement;
- (struct sqlite3_stmt *)getRowidForKeyStatement;
- (struct sqlite3_stmt *)getCountForRowidStatement;
- (struct sqlite3_stmt *)getKeyCountForAllStatement;
- (struct sqlite3_stmt *)getKeyCountForCollectionStatement;
- (struct sqlite3_stmt *)getCollectionCountStatement;
- (struct sqlite3_stmt *)yapRemoveExtensionStatement;
- (struct sqlite3_stmt *)yapRemoveForKeyStatement;
- (struct sqlite3_stmt *)yapSetDataForKeyStatement;
- (struct sqlite3_stmt *)yapGetDataForKeyStatement;
- (struct sqlite3_stmt *)rollbackTransactionStatement;
- (struct sqlite3_stmt *)commitTransactionStatement;
- (struct sqlite3_stmt *)beginTransactionStatement;
- (void)updateKeyCacheLimit;
@property(readonly) unsigned long long snapshot;
@property long long metadataPolicy;
@property long long objectPolicy;
@property unsigned long long metadataCacheLimit;
@property _Bool metadataCacheEnabled;
@property unsigned long long objectCacheLimit;
@property _Bool objectCacheEnabled;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (void)prepare;
- (id)initWithDatabase:(id)arg1;

@end

@interface YapDatabaseFullTextSearchHandler : NSObject
{
    id block;
    long long blockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long blockType; // @synthesize blockType;
@property(readonly, nonatomic) id block; // @synthesize block;
- (void).cxx_destruct;

@end

@interface KeyStorageServerSideVC : ExerciseViewController
{
    UILabel *_encryptedMessageLabel;
    UITextField *_encryptionTextField;
    NSString *_encryptionKey;
}

@property(retain, nonatomic) NSString *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(nonatomic) __weak UITextField *encryptionTextField; // @synthesize encryptionTextField=_encryptionTextField;
@property(nonatomic) __weak UILabel *encryptedMessageLabel; // @synthesize encryptedMessageLabel=_encryptedMessageLabel;
- (void).cxx_destruct;
- (void)verifyItemPressed:(id)arg1;
- (id)keyFromResponseString:(id)arg1;
- (void)encryptUsingResponseString:(id)arg1;
- (void)fetchKeyFromServer;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface YapDatabaseSecondaryIndexTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseSecondaryIndexConnection *secondaryIndexConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    _Bool isMutated;
}

- (id)mutationDuringEnumerationException;
- (_Bool)getNumberOfRows:(unsigned long long *)arg1 matchingQuery:(id)arg2;
- (_Bool)enumerateRowsMatchingQuery:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)enumerateKeysAndObjectsMatchingQuery:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)enumerateKeysAndMetadataMatchingQuery:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)enumerateKeysMatchingQuery:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)_enumerateRowidsMatchingQuery:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)removeAllRowids;
- (void)removeRowids:(id)arg1;
- (void)removeRowid:(long long)arg1;
- (void)addRowid:(long long)arg1 isNew:(_Bool)arg2;
- (id)tableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (_Bool)populate;
- (_Bool)createTable;
- (_Bool)dropTable;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithSecondaryIndexConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface DDASLLogger : DDAbstractLogger <DDLogger>
{
    struct __asl_object_s *client;
}

+ (id)sharedInstance;
- (id)loggerName;
- (void)logMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PublicKeyPinningExerciseController : ExerciseViewController
{
    NSMutableData *responseData;
    UITextField *firstNameField;
    UITextField *lastNameField;
    UITextField *ssnField;
}

@property(nonatomic) __weak UITextField *ssnField; // @synthesize ssnField;
@property(nonatomic) __weak UITextField *lastNameField; // @synthesize lastNameField;
@property(nonatomic) __weak UITextField *firstNameField; // @synthesize firstNameField;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)submit:(id)arg1;

@end

@interface YapDatabaseRelationshipEdge : NSObject <NSCoding, NSCopying>
{
    NSString *name;
    NSString *sourceKey;
    NSString *sourceCollection;
    NSString *destinationKey;
    NSString *destinationCollection;
    NSString *destinationFilePath;
    unsigned short nodeDeleteRules;
    _Bool isManualEdge;
    long long edgeRowid;
    long long sourceRowid;
    long long destinationRowid;
    int edgeAction;
    int flags;
}

+ (id)edgeWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4 nodeDeleteRules:(unsigned short)arg5;
+ (id)edgeWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 nodeDeleteRules:(unsigned short)arg6;
+ (id)edgeWithName:(id)arg1 destinationFilePath:(id)arg2 nodeDeleteRules:(unsigned short)arg3;
+ (id)edgeWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 nodeDeleteRules:(unsigned short)arg4;
@property(readonly, nonatomic) _Bool isManualEdge; // @synthesize isManualEdge;
@property(readonly, nonatomic) unsigned short nodeDeleteRules; // @synthesize nodeDeleteRules;
@property(readonly, copy, nonatomic) NSString *destinationFilePath; // @synthesize destinationFilePath;
@property(readonly, copy, nonatomic) NSString *destinationKey; // @synthesize destinationKey;
@property(readonly, copy, nonatomic) NSString *destinationCollection; // @synthesize destinationCollection;
@property(readonly, copy, nonatomic) NSString *sourceKey; // @synthesize sourceKey;
@property(readonly, copy, nonatomic) NSString *sourceCollection; // @synthesize sourceCollection;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (id)description;
- (_Bool)matchesManualEdge:(id)arg1;
- (id)copyWithSourceKey:(id)arg1 collection:(id)arg2 rowid:(long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithRowid:(long long)arg1 name:(id)arg2 src:(long long)arg3 dst:(long long)arg4 dstFilePath:(id)arg5 rules:(int)arg6 manual:(_Bool)arg7;
- (id)initWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4 nodeDeleteRules:(unsigned short)arg5;
- (id)initWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 nodeDeleteRules:(unsigned short)arg6;
- (id)initWithName:(id)arg1 destinationFilePath:(id)arg2 nodeDeleteRules:(unsigned short)arg3;
- (id)initWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 nodeDeleteRules:(unsigned short)arg4;

@end

@interface MethodSwizzlingExerciseController : ExerciseViewController
{
    UILabel *m_fetchedLabel;
    UIButton *m_fetchButton;
    UISwitch *m_fakeJailbrokenEnvironmentSwitch;
    UISwitch *m_JailbreakEvasionSwitch;
}

@property(retain, nonatomic) UISwitch *m_JailbreakEvasionSwitch; // @synthesize m_JailbreakEvasionSwitch;
@property(retain, nonatomic) UISwitch *m_fakeJailbrokenEnvironmentSwitch; // @synthesize m_fakeJailbrokenEnvironmentSwitch;
@property(retain, nonatomic) UIButton *m_fetchButton; // @synthesize m_fetchButton;
@property(retain, nonatomic) UILabel *m_fetchedLabel; // @synthesize m_fetchedLabel;
- (void).cxx_destruct;
- (void)fetchButtonTapped:(id)arg1;
- (void)jailbreakEvasionSwitchFlipped:(id)arg1;
- (void)displayStatusMessage:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface YapSet : NSObject <NSFastEnumeration>
{
    NSDictionary *dictionary;
    NSSet *set;
}

- (void).cxx_destruct;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)intersectsSet:(id)arg1;
- (_Bool)containsObject:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface PersonalPhotoStorageVC : ExerciseViewController
{
    NSString *_pw;
    UILabel *_Hint;
    UITextField *_theTextField;
    UIButton *_bVerify;
}

@property(nonatomic) __weak UIButton *bVerify; // @synthesize bVerify=_bVerify;
@property(nonatomic) __weak UITextField *theTextField; // @synthesize theTextField=_theTextField;
@property(nonatomic) __weak UILabel *Hint; // @synthesize Hint=_Hint;
- (void).cxx_destruct;
- (id)thePw;
- (void)buttonClick:(id)arg1;
- (void)viewDidLoad;

@end

@interface YapMemoryTableValue : NSObject
{
    YapMemoryTableValue *olderValue;
    unsigned long long snapshot;
    id object;
}

- (void).cxx_destruct;
- (id)description;

@end

@interface YapMemoryTable : NSObject
{
    Class keyClass;
    NSMutableDictionary *dict;
    NSObject<OS_dispatch_queue> *queue;
    void *IsOnQueueKey;
    NSMutableArray *snapshots;
    NSMutableArray *changes;
    NSLock *lock;
}

- (void).cxx_destruct;
- (void)asyncRollback:(long long)arg1 withChanges:(id)arg2;
- (void)asyncCheckpoint:(long long)arg1;
- (id)newReadWriteTransactionWithSnapshot:(unsigned long long)arg1;
- (id)newReadTransactionWithSnapshot:(unsigned long long)arg1;
- (id)initWithKeyClass:(Class)arg1;

@end

@interface YapMemoryTableTransaction : NSObject
{
    YapMemoryTable *table;
    unsigned long long snapshot;
    _Bool isReadWriteTransaction;
    NSMutableSet *changedKeys;
}

@property(readonly, nonatomic) _Bool isReadWriteTransaction; // @synthesize isReadWriteTransaction;
@property(readonly, nonatomic) unsigned long long snapshot; // @synthesize snapshot;
- (void).cxx_destruct;
- (void)rollback;
- (void)commit;
- (void)modifyWithBlock:(CDUnknownBlockType)arg1;
- (void)accessWithBlock:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)removeObjectsForKeys:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)enumerateKeysAndObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysWithBlock:(CDUnknownBlockType)arg1;
- (id)objectForKey:(id)arg1;

@end

@interface InfoViewController : UIViewController
{
    id <InfoViewDelegate> delegate;
    UIWebView *infoWebView;
    NSString *infoText;
}

@property(retain, nonatomic) id <InfoViewDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NSString *infoText; // @synthesize infoText;
@property(retain, nonatomic) UIWebView *infoWebView; // @synthesize infoWebView;
- (void)dealloc;
- (id)formatAsHtml:(id)arg1;
- (void)dismissDialog:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)loadHtmlString:(id)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 infoText:(id)arg3;

@end

@interface YapDatabaseFilteredViewTransaction : YapDatabaseViewTransaction
{
}

- (void)view:(id)arg1 didRepopulateWithFlags:(int)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)repopulateViewDueToFilteringBlockChange;
- (void)repopulateViewDueToParentFilteringBlockChange;
- (void)repopulateViewDueToParentGroupingBlockChange;
- (_Bool)populateView;
- (_Bool)createIfNeeded;
- (void)setFiltering:(id)arg1 versionTag:(id)arg2;
- (void)setGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3;

@end

@interface HtmlViewController : UIViewController
{
    UIWebView *webView;
    NSString *_content;
}

@property(retain, nonatomic) NSString *content; // @synthesize content=_content;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView;
- (void).cxx_destruct;
- (id)formatAsHtml:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLoad;

@end

@interface YapDatabaseCloudKit : YapDatabaseExtension
{
    id recordBlock;
    long long recordBlockType;
    CDUnknownBlockType mergeBlock;
    CDUnknownBlockType opErrorBlock;
    CDUnknownBlockType databaseIdentifierBlock;
    NSString *versionTag;
    id versionInfo;
    YapDatabaseCloudKitOptions *options;
    YDBCKChangeQueue *masterQueue;
    unsigned long long suspendCount;
    int suspendCountLock;
    NSOperationQueue *masterOperationQueue;
    YapDatabaseConnection *completionDatabaseConnection;
    YapCache *databaseCache;
}

+ (id)queueTableNameForRegisteredName:(id)arg1;
+ (id)recordTableNameForRegisteredName:(id)arg1;
+ (id)mappingTableNameForRegisteredName:(id)arg1;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSString *versionTag; // @synthesize versionTag;
@property(readonly, nonatomic) CDUnknownBlockType operationErrorBlock; // @synthesize operationErrorBlock=opErrorBlock;
@property(readonly, nonatomic) CDUnknownBlockType mergeBlock; // @synthesize mergeBlock;
@property(readonly, nonatomic) long long recordBlockType; // @synthesize recordBlockType;
@property(readonly, nonatomic) id recordBlock; // @synthesize recordBlock;
- (void).cxx_destruct;
- (id)missingCKDatabaseException:(id)arg1;
- (id)missingDatabaseIdentifierBlockException:(id)arg1;
- (void)handleCompletedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3;
- (void)handlePartiallyFailedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3 error:(id)arg4;
- (void)handleFailedOperationWithChangeSet:(id)arg1 error:(id)arg2;
- (void)queueOperationForChangeSet:(id)arg1;
- (id)databaseForIdentifier:(id)arg1;
- (id)completionDatabaseConnection;
- (void)asyncMaybeDispatchNextOperation:(_Bool)arg1;
- (id)queueTableName;
- (id)recordTableName;
- (id)mappingTableName;
- (id)newConnection:(id)arg1;
- (void)postInFlightChangeSetChangedNotification:(id)arg1;
- (void)getNumberOfInFlightChangeSets:(unsigned long long *)arg1 queuedChangeSets:(unsigned long long *)arg2;
@property(readonly) unsigned long long numberOfPendingChangeSets;
@property(readonly) unsigned long long numberOfQueuedChangeSets;
@property(readonly) unsigned long long numberOfInFlightChangeSets;
- (id)pendingChangeSets;
- (void)postSuspendCountChangedNotification;
- (unsigned long long)resume;
- (unsigned long long)suspendWithCount:(unsigned long long)arg1;
- (unsigned long long)suspend;
@property(readonly) unsigned long long suspendCount;
@property(readonly) _Bool isSuspended; // @dynamic isSuspended;
@property(readonly, copy, nonatomic) YapDatabaseCloudKitOptions *options; // @dynamic options;
- (id)initWithRecordHandler:(id)arg1 mergeBlock:(CDUnknownBlockType)arg2 operationErrorBlock:(CDUnknownBlockType)arg3 databaseIdentifierBlock:(CDUnknownBlockType)arg4 versionTag:(id)arg5 versionInfo:(id)arg6 options:(id)arg7;
- (id)initWithRecordHandler:(id)arg1 mergeBlock:(CDUnknownBlockType)arg2 operationErrorBlock:(CDUnknownBlockType)arg3 versionTag:(id)arg4 versionInfo:(id)arg5 options:(id)arg6;
- (id)initWithRecordHandler:(id)arg1 mergeBlock:(CDUnknownBlockType)arg2 operationErrorBlock:(CDUnknownBlockType)arg3 versionTag:(id)arg4 versionInfo:(id)arg5;
- (id)initWithRecordHandler:(id)arg1 mergeBlock:(CDUnknownBlockType)arg2 operationErrorBlock:(CDUnknownBlockType)arg3;

@end

@interface YapDatabaseCloudKitOptions : NSObject <NSCopying>
{
    YapWhitelistBlacklist *allowedCollections;
}

@property(retain, nonatomic) YapWhitelistBlacklist *allowedCollections; // @synthesize allowedCollections;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface YapDatabaseFullTextSearchConnection : YapDatabaseExtensionConnection
{
    YapDatabaseFullTextSearch *fts;
    YapDatabaseConnection *databaseConnection;
    NSMutableDictionary *blockDict;
    struct sqlite3_stmt *insertRowidStatement;
    struct sqlite3_stmt *setRowidStatement;
    struct sqlite3_stmt *removeRowidStatement;
    struct sqlite3_stmt *removeAllStatement;
    struct sqlite3_stmt *queryStatement;
    struct sqlite3_stmt *querySnippetStatement;
    struct sqlite3_stmt *rowidQueryStatement;
    struct sqlite3_stmt *rowidQuerySnippetStatement;
}

@property(readonly, nonatomic) YapDatabaseFullTextSearch *fullTextSearch; // @synthesize fullTextSearch=fts;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)rowidQuerySnippetStatement;
- (struct sqlite3_stmt *)rowidQueryStatement;
- (struct sqlite3_stmt *)querySnippetStatement;
- (struct sqlite3_stmt *)queryStatement;
- (struct sqlite3_stmt *)removeAllStatement;
- (struct sqlite3_stmt *)removeRowidStatement;
- (struct sqlite3_stmt *)setRowidStatement;
- (struct sqlite3_stmt *)insertRowidStatement;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithFTS:(id)arg1 databaseConnection:(id)arg2;

@end

@interface SecureUserDefaultsViewController : ExerciseViewController <UITextFieldDelegate>
{
    UILabel *_fNameLbl;
    UILabel *_lNameLbl;
    UILabel *_genderLbl;
    UILabel *_mobileLbl;
    UILabel *_locationLbl;
    UITextField *_fNameTextField;
    UITextField *_lNameTextField;
    UISegmentedControl *_genderSegmentControl;
    UITextField *_mobileTextField;
    UITextField *_locationTextField;
    UIButton *_saveBtn;
}

@property(nonatomic) __weak UIButton *saveBtn; // @synthesize saveBtn=_saveBtn;
@property(nonatomic) __weak UITextField *locationTextField; // @synthesize locationTextField=_locationTextField;
@property(nonatomic) __weak UITextField *mobileTextField; // @synthesize mobileTextField=_mobileTextField;
@property(nonatomic) __weak UISegmentedControl *genderSegmentControl; // @synthesize genderSegmentControl=_genderSegmentControl;
@property(nonatomic) __weak UITextField *lNameTextField; // @synthesize lNameTextField=_lNameTextField;
@property(nonatomic) __weak UITextField *fNameTextField; // @synthesize fNameTextField=_fNameTextField;
@property(nonatomic) __weak UILabel *locationLbl; // @synthesize locationLbl=_locationLbl;
@property(nonatomic) __weak UILabel *mobileLbl; // @synthesize mobileLbl=_mobileLbl;
@property(nonatomic) __weak UILabel *genderLbl; // @synthesize genderLbl=_genderLbl;
@property(nonatomic) __weak UILabel *lNameLbl; // @synthesize lNameLbl=_lNameLbl;
@property(nonatomic) __weak UILabel *fNameLbl; // @synthesize fNameLbl=_fNameLbl;
- (void).cxx_destruct;
- (void)saveClicked;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RealmExerciseViewController : ExerciseViewController
{
    UITextField *_creditNameTextField;
    UITextField *_creditNumberTextField;
    UITextField *_creditCVVTextField;
}

@property(nonatomic) __weak UITextField *creditCVVTextField; // @synthesize creditCVVTextField=_creditCVVTextField;
@property(nonatomic) __weak UITextField *creditNumberTextField; // @synthesize creditNumberTextField=_creditNumberTextField;
@property(nonatomic) __weak UITextField *creditNameTextField; // @synthesize creditNameTextField=_creditNameTextField;
- (void).cxx_destruct;
- (_Bool)verifyName:(id)arg1 number:(id)arg2 cvv:(id)arg3;
- (void)saveData;
- (void)verifyItemPressed:(id)arg1;
- (void)viewDidLoad;

@end

@interface CloudMisconfigurationVC : ExerciseViewController
{
    UIImageView *_cardImageView;
    UITextField *_cardNoTxtField;
    UITextField *_cvvTxtField;
}

@property(nonatomic) __weak UITextField *cvvTxtField; // @synthesize cvvTxtField=_cvvTxtField;
@property(nonatomic) __weak UITextField *cardNoTxtField; // @synthesize cardNoTxtField=_cardNoTxtField;
@property(nonatomic) __weak UIImageView *cardImageView; // @synthesize cardImageView=_cardImageView;
- (void).cxx_destruct;
- (void)verifyItemPressed:(id)arg1;
- (void)fetchCardImage;
- (void)viewDidLoad;

@end

@interface DDLog : NSObject
{
}

+ (void)lt_flush;
+ (void)lt_log:(id)arg1;
+ (id)lt_allLoggers;
+ (void)lt_removeAllLoggers;
+ (void)lt_removeLogger:(id)arg1;
+ (void)lt_addLogger:(id)arg1 logLevel:(int)arg2;
+ (void)setLogLevel:(int)arg1 forClassWithName:(id)arg2;
+ (void)setLogLevel:(int)arg1 forClass:(Class)arg2;
+ (int)logLevelForClassWithName:(id)arg1;
+ (int)logLevelForClass:(Class)arg1;
+ (id)registeredClassNames;
+ (id)registeredClasses;
+ (_Bool)isRegisteredClass:(Class)arg1;
+ (void)flushLog;
+ (void)log:(_Bool)arg1 message:(id)arg2;
+ (void)log:(_Bool)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7 tag:(id)arg8 format:(id)arg9 args:(struct __va_list_tag [1])arg10;
+ (void)log:(_Bool)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7 tag:(id)arg8 format:(id)arg9;
+ (void)queueLogMessage:(id)arg1 asynchronously:(_Bool)arg2;
+ (id)allLoggers;
+ (void)removeAllLoggers;
+ (void)removeLogger:(id)arg1;
+ (void)addLogger:(id)arg1 withLogLevel:(int)arg2;
+ (void)addLogger:(id)arg1;
+ (void)applicationWillTerminate:(id)arg1;
+ (id)loggingQueue;
+ (void)initialize;

@end

@interface DDLoggerNode : NSObject
{
    id <DDLogger> logger;
    NSObject<OS_dispatch_queue> *loggerQueue;
    int logLevel;
}

+ (id)nodeWithLogger:(id)arg1 loggerQueue:(id)arg2 logLevel:(int)arg3;
@property(readonly, nonatomic) int logLevel; // @synthesize logLevel;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithLogger:(id)arg1 loggerQueue:(id)arg2 logLevel:(int)arg3;

@end

@interface DDLogMessage : NSObject <NSCopying>
{
    int logLevel;
    int logFlag;
    int logContext;
    NSString *logMsg;
    NSDate *timestamp;
    char *file;
    char *function;
    int lineNumber;
    unsigned int machThreadID;
    char *queueLabel;
    NSString *threadName;
    id tag;
    int options;
}

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)methodName;
- (id)fileName;
- (id)threadID;
- (id)initWithLogMsg:(id)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7 tag:(id)arg8 options:(int)arg9 timestamp:(id)arg10;
- (id)initWithLogMsg:(id)arg1 level:(int)arg2 flag:(int)arg3 context:(int)arg4 file:(const char *)arg5 function:(const char *)arg6 line:(int)arg7 tag:(id)arg8 options:(int)arg9;

@end

@interface DDAbstractLogger : NSObject <DDLogger>
{
    id <DDLogFormatter> formatter;
    NSObject<OS_dispatch_queue> *loggerQueue;
}

- (void).cxx_destruct;
- (_Bool)isOnInternalLoggerQueue;
- (_Bool)isOnGlobalLoggingQueue;
- (id)loggerName;
- (id)loggerQueue;
- (void)setLogFormatter:(id)arg1;
- (id)logFormatter;
- (void)logMessage:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseHooksConnection : YapDatabaseExtensionConnection
{
    YapDatabaseHooks *parent;
    YapDatabaseConnection *databaseConnection;
}

@property(readonly, nonatomic) YapDatabaseHooks *parent; // @synthesize parent;
- (void).cxx_destruct;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (id)extension;
- (id)initWithParent:(id)arg1 databaseConnection:(id)arg2;

@end

@interface YapDatabaseRelationshipConnection : YapDatabaseExtensionConnection
{
    YapDatabaseRelationship *relationship;
    YapDatabaseConnection *databaseConnection;
    NSMutableDictionary *protocolChanges;
    NSMutableDictionary *manualChanges;
    NSMutableSet *inserted;
    NSMutableArray *deletedOrder;
    NSMutableDictionary *deletedInfo;
    NSMutableSet *filesToDelete;
    struct sqlite3_stmt *findManualEdgeStatement;
    struct sqlite3_stmt *insertEdgeStatement;
    struct sqlite3_stmt *updateEdgeStatement;
    struct sqlite3_stmt *deleteEdgeStatement;
    struct sqlite3_stmt *deleteEdgesWithNodeStatement;
    struct sqlite3_stmt *enumerateAllDstFilePathStatement;
    struct sqlite3_stmt *enumerateForSrcStatement;
    struct sqlite3_stmt *enumerateForDstStatement;
    struct sqlite3_stmt *enumerateForSrcNameStatement;
    struct sqlite3_stmt *enumerateForDstNameStatement;
    struct sqlite3_stmt *enumerateForNameStatement;
    struct sqlite3_stmt *enumerateForSrcDstStatement;
    struct sqlite3_stmt *enumerateForSrcDstNameStatement;
    struct sqlite3_stmt *countForSrcNameExcludingDstStatement;
    struct sqlite3_stmt *countForDstNameExcludingSrcStatement;
    struct sqlite3_stmt *countForNameStatement;
    struct sqlite3_stmt *countForSrcStatement;
    struct sqlite3_stmt *countForSrcNameStatement;
    struct sqlite3_stmt *countForDstStatement;
    struct sqlite3_stmt *countForDstNameStatement;
    struct sqlite3_stmt *countForSrcDstStatement;
    struct sqlite3_stmt *countForSrcDstNameStatement;
    struct sqlite3_stmt *removeAllStatement;
    struct sqlite3_stmt *removeAllProtocolStatement;
}

@property(readonly, nonatomic) YapDatabaseRelationship *relationship; // @synthesize relationship;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)removeAllProtocolStatement;
- (struct sqlite3_stmt *)removeAllStatement;
- (struct sqlite3_stmt *)countForSrcDstNameStatement;
- (struct sqlite3_stmt *)countForSrcDstStatement;
- (struct sqlite3_stmt *)countForDstNameStatement;
- (struct sqlite3_stmt *)countForDstStatement;
- (struct sqlite3_stmt *)countForSrcNameStatement;
- (struct sqlite3_stmt *)countForSrcStatement;
- (struct sqlite3_stmt *)countForNameStatement;
- (struct sqlite3_stmt *)countForDstNameExcludingSrcStatement;
- (struct sqlite3_stmt *)countForSrcNameExcludingDstStatement;
- (struct sqlite3_stmt *)enumerateForSrcDstNameStatement;
- (struct sqlite3_stmt *)enumerateForSrcDstStatement;
- (struct sqlite3_stmt *)enumerateForNameStatement;
- (struct sqlite3_stmt *)enumerateForDstNameStatement;
- (struct sqlite3_stmt *)enumerateForSrcNameStatement;
- (struct sqlite3_stmt *)enumerateForDstStatement;
- (struct sqlite3_stmt *)enumerateForSrcStatement;
- (struct sqlite3_stmt *)enumerateAllDstFilePathStatement;
- (struct sqlite3_stmt *)deleteEdgesWithNodeStatement;
- (struct sqlite3_stmt *)deleteEdgeStatement;
- (struct sqlite3_stmt *)updateEdgeStatement;
- (struct sqlite3_stmt *)insertEdgeStatement;
- (struct sqlite3_stmt *)findManualEdgeStatement;
- (void)prepareStatement:(struct sqlite3_stmt **)arg1 withString:(id)arg2 caller:(SEL)arg3;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (void)postRollbackCleanup;
- (void)postCommitCleanup;
- (void)prepareForReadWriteTransaction;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithRelationship:(id)arg1 databaseConnection:(id)arg2;

@end

@interface YapDatabaseFullTextSearchTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseFullTextSearchConnection *ftsConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    _Bool isMutated;
}

- (id)rowid:(long long)arg1 matches:(id)arg2 withSnippetOptions:(id)arg3;
- (_Bool)rowid:(long long)arg1 matches:(id)arg2;
- (void)enumerateRowsMatching:(id)arg1 withSnippetOptions:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndObjectsMatching:(id)arg1 withSnippetOptions:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndMetadataMatching:(id)arg1 withSnippetOptions:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysMatching:(id)arg1 withSnippetOptions:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowidsMatching:(id)arg1 withSnippetOptions:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowsMatching:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsMatching:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndMetadataMatching:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysMatching:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowidsMatching:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)removeAllRowids;
- (void)removeRowids:(id)arg1;
- (void)removeRowid:(long long)arg1;
- (void)addRowid:(long long)arg1 isNew:(_Bool)arg2;
- (id)tableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (_Bool)populate;
- (_Bool)createTable;
- (_Bool)dropTable;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithFTSConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface YapDatabaseConnectionDefaults : NSObject <NSCopying>
{
    _Bool objectCacheEnabled;
    _Bool metadataCacheEnabled;
    unsigned long long objectCacheLimit;
    unsigned long long metadataCacheLimit;
    long long objectPolicy;
    long long metadataPolicy;
    unsigned long long autoFlushMemoryFlags;
}

@property(nonatomic) unsigned long long autoFlushMemoryFlags; // @synthesize autoFlushMemoryFlags;
@property(nonatomic) long long metadataPolicy; // @synthesize metadataPolicy;
@property(nonatomic) long long objectPolicy; // @synthesize objectPolicy;
@property(nonatomic) unsigned long long metadataCacheLimit; // @synthesize metadataCacheLimit;
@property(nonatomic) _Bool metadataCacheEnabled; // @synthesize metadataCacheEnabled;
@property(nonatomic) unsigned long long objectCacheLimit; // @synthesize objectCacheLimit;
@property(nonatomic) _Bool objectCacheEnabled; // @synthesize objectCacheEnabled;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface YapDatabaseFullTextSearchSnippetOptions : NSObject <NSCopying>
{
    int numberOfTokens;
    NSString *startMatchText;
    NSString *endMatchText;
    NSString *ellipsesText;
    NSString *columnName;
}

+ (int)defaultNumberOfTokens;
+ (id)defaultEllipsesText;
+ (id)defaultEndMatchText;
+ (id)defaultStartMatchText;
@property(nonatomic) int numberOfTokens; // @synthesize numberOfTokens;
@property(copy, nonatomic) NSString *columnName; // @synthesize columnName;
@property(copy, nonatomic) NSString *ellipsesText; // @synthesize ellipsesText;
@property(copy, nonatomic) NSString *endMatchText; // @synthesize endMatchText;
@property(copy, nonatomic) NSString *startMatchText; // @synthesize startMatchText;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initForCopy;
- (id)init;

@end

@interface YapDatabaseFilteredViewConnection : YapDatabaseViewConnection
{
    id filteringBlock;
    long long filteringBlockType;
    _Bool filteringBlockChanged;
}

- (void).cxx_destruct;
- (void)getFilteringBlock:(id *)arg1 filteringBlockType:(long long *)arg2;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2 sortingBlock:(id *)arg3 sortingBlockType:(long long *)arg4;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2 sortingBlock:(id *)arg3 sortingBlockType:(long long *)arg4 filteringBlock:(id *)arg5 filteringBlockType:(long long *)arg6;
- (void)setFilteringBlock:(id)arg1 filteringBlockType:(long long)arg2 versionTag:(id)arg3;
- (void)setGroupingBlock:(id)arg1 groupingBlockType:(long long)arg2 sortingBlock:(id)arg3 sortingBlockType:(long long)arg4;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (void)postCommitCleanup;
- (void)postRollbackCleanup;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
@property(readonly, nonatomic) YapDatabaseFilteredView *filteredView;

@end

@interface YDBCKMergeInfo : NSObject
{
    NSMutableDictionary *originalValues;
    CKRecord *pendingLocalRecord;
    CKRecord *updatedPendingLocalRecord;
}

@property(retain, nonatomic) CKRecord *updatedPendingLocalRecord; // @synthesize updatedPendingLocalRecord;
@property(retain, nonatomic) CKRecord *pendingLocalRecord; // @synthesize pendingLocalRecord;
- (void).cxx_destruct;
- (void)mergeNewerRecord:(id)arg1 newerOriginalValues:(id)arg2;
@property(readonly, nonatomic) NSDictionary *originalValues; // @dynamic originalValues;

@end

@interface YapDatabaseRelationship : YapDatabaseExtension
{
    NSString *versionTag;
    YapDatabaseRelationshipOptions *options;
    NSObject<OS_dispatch_queue> *fileManagerQueue;
}

+ (id)tableNameForRegisteredName:(id)arg1;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSString *versionTag; // @synthesize versionTag;
- (void).cxx_destruct;
- (id)fileManagerQueue;
- (id)tableName;
- (id)newConnection:(id)arg1;
- (_Bool)supportsDatabase:(id)arg1 withRegisteredExtensions:(id)arg2;
@property(readonly, copy, nonatomic) YapDatabaseRelationshipOptions *options; // @dynamic options;
- (id)initWithVersionTag:(id)arg1 options:(id)arg2;
- (id)initWithVersionTag:(id)arg1;
- (id)init;

@end

@interface YapDatabaseView : YapDatabaseExtension
{
    YapDatabaseViewState *latestState;
    id groupingBlock;
    id sortingBlock;
    long long groupingBlockType;
    long long sortingBlockType;
    NSString *versionTag;
    YapDatabaseViewOptions *options;
}

+ (id)previousVersionTagForRegisteredViewName:(id)arg1 withTransaction:(id)arg2;
+ (id)pageMetadataTableNameForRegisteredName:(id)arg1;
+ (id)pageTableNameForRegisteredName:(id)arg1;
+ (id)mapTableNameForRegisteredName:(id)arg1;
+ (id)previousClassNames;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
- (void).cxx_destruct;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2 sortingBlock:(id *)arg3 sortingBlockType:(long long *)arg4;
- (_Bool)getState:(id *)arg1 forConnection:(id)arg2;
- (void)processChangeset:(id)arg1;
- (id)pageMetadataTableName;
- (id)pageTableName;
- (id)mapTableName;
- (id)newConnection:(id)arg1;
- (_Bool)isPersistent;
@property(readonly, copy, nonatomic) YapDatabaseViewOptions *options; // @dynamic options;
@property(readonly, copy, nonatomic) NSString *versionTag; // @synthesize versionTag;
@property(readonly, nonatomic) long long sortingBlockType; // @synthesize sortingBlockType;
@property(readonly, nonatomic) long long groupingBlockType; // @synthesize groupingBlockType;
@property(readonly, nonatomic) id sortingBlock; // @synthesize sortingBlock;
@property(readonly, nonatomic) id groupingBlock; // @synthesize groupingBlock;
- (id)initWithGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3 options:(id)arg4;
- (id)initWithGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3;
- (id)initWithGrouping:(id)arg1 sorting:(id)arg2;

@end

@interface YapDatabaseSecondaryIndex : YapDatabaseExtension
{
    YapDatabaseSecondaryIndexSetup *setup;
    YapDatabaseSecondaryIndexOptions *options;
    id block;
    long long blockType;
    NSString *versionTag;
    id columnNamesSharedKeySet;
}

+ (id)tableNameForRegisteredName:(id)arg1;
+ (id)previousClassNames;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSString *versionTag; // @synthesize versionTag;
- (void).cxx_destruct;
- (id)tableName;
- (id)newConnection:(id)arg1;
- (id)initWithSetup:(id)arg1 handler:(id)arg2 versionTag:(id)arg3 options:(id)arg4;
- (id)initWithSetup:(id)arg1 handler:(id)arg2 versionTag:(id)arg3;
- (id)initWithSetup:(id)arg1 handler:(id)arg2;
- (id)init;

@end

@interface YapCollectionKey : NSObject <NSCopying, NSCoding>
{
    unsigned long long hash;
    NSString *collection;
    NSString *key;
}

+ (CDStruct_90be15af)keyCallbacks;
@property(readonly, nonatomic) NSString *key; // @synthesize key;
@property(readonly, nonatomic) NSString *collection; // @synthesize collection;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToCollectionKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCollection:(id)arg1 key:(id)arg2;

@end

@interface SBJsonWriter : SBJsonBase
{
    _Bool sortKeys;
    _Bool humanReadable;
}

+ (void)initialize;
@property _Bool humanReadable; // @synthesize humanReadable;
@property _Bool sortKeys; // @synthesize sortKeys;
- (_Bool)appendString:(id)arg1 into:(id)arg2;
- (_Bool)appendDictionary:(id)arg1 into:(id)arg2;
- (_Bool)appendArray:(id)arg1 into:(id)arg2;
- (_Bool)appendValue:(id)arg1 into:(id)arg2;
- (id)indent;
- (id)stringWithObject:(id)arg1 error:(id *)arg2;
- (id)stringWithObject:(id)arg1;

@end

@interface MasterViewController : UITableViewController
{
}

- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)awakeFromNib;

@end

@interface BinaryCookiesExerciseViewController : ExerciseViewController
{
    UITextField *_nameTxtField;
    UITextField *_sessionTxtField;
    UITextField *_csrfTxtField;
}

@property(nonatomic) __weak UITextField *csrfTxtField; // @synthesize csrfTxtField=_csrfTxtField;
@property(nonatomic) __weak UITextField *sessionTxtField; // @synthesize sessionTxtField=_sessionTxtField;
@property(nonatomic) __weak UITextField *nameTxtField; // @synthesize nameTxtField=_nameTxtField;
- (void).cxx_destruct;
- (id)captureCookieWithKey:(id)arg1 value:(id)arg2;
- (void)saveCookies;
- (_Bool)verifyName:(id)arg1 sessionToken:(id)arg2 csrfToken:(id)arg3;
- (void)verifyItemPressed:(id)arg1;
- (void)viewDidLoad;

@end

@interface Exercise : Asset
{
    NSString *creditsFile;
    NSMutableArray *hints;
    long long hintIndex;
    long long totalHints;
    NSString *solution;
    ExerciseCategory *category;
    NSString *initialViewController;
}

@property(retain, nonatomic) NSString *initialViewController; // @synthesize initialViewController;
@property(retain, nonatomic) ExerciseCategory *category; // @synthesize category;
@property(retain, nonatomic) NSString *solution; // @synthesize solution;
@property(nonatomic) long long totalHints; // @synthesize totalHints;
@property(nonatomic) long long hintIndex; // @synthesize hintIndex;
@property(retain, nonatomic) NSMutableArray *hints; // @synthesize hints;
@property(retain, nonatomic) NSString *creditsFile; // @synthesize creditsFile;
- (void).cxx_destruct;
- (id)htmlSolution;
- (id)htmlCredits;
- (id)initWithName:(id)arg1 longDescription:(id)arg2 creditsFile:(id)arg3 hints:(id)arg4 solution:(id)arg5 initialViewController:(id)arg6;

@end

@interface KeychainDumper : NSObject
{
    NSMutableArray *_arguments;
    NSString *_keychainPath;
    NSString *_passwordInGenp;
    NSMutableDictionary *_allKeychainData;
}

- (id)getReadableKeychainData;
- (id)dumpAllKeychainData;
- (id)getKeychainObjectsForSecClass:(void *)arg1;
- (id)initWithSimulator:(id)arg1;

@end

@interface CoreDataExerciseViewController : ExerciseViewController <UITextFieldDelegate>
{
    UITextField *_email;
    UITextField *_password;
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_managedObjectContext;
}

@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(readonly, retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(nonatomic) __weak UITextField *password; // @synthesize password=_password;
@property(nonatomic) __weak UITextField *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (id)fetchUser;
- (void)storeDetails;
- (void)saveCoreData:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CrossSiteScriptingExerciseViewController : ExerciseViewController <UITextFieldDelegate>
{
    UIWebView *_webview;
    UITextField *_txtField;
}

@property(nonatomic) __weak UITextField *txtField; // @synthesize txtField=_txtField;
@property(nonatomic) __weak UIWebView *webview; // @synthesize webview=_webview;
- (void).cxx_destruct;
- (void)loadButton:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseViewGrouping : NSObject
{
    id groupingBlock;
    long long groupingBlockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long groupingBlockType; // @synthesize groupingBlockType;
@property(readonly, nonatomic) id groupingBlock; // @synthesize groupingBlock;
- (void).cxx_destruct;

@end

@interface YapDatabaseViewSorting : NSObject
{
    id sortingBlock;
    long long sortingBlockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long sortingBlockType; // @synthesize sortingBlockType;
@property(readonly, nonatomic) id sortingBlock; // @synthesize sortingBlock;
- (void).cxx_destruct;

@end

@interface DDAbstractDatabaseLogger : DDAbstractLogger
{
    unsigned long long saveThreshold;
    double saveInterval;
    double maxAge;
    double deleteInterval;
    _Bool deleteOnEverySave;
    _Bool saveTimerSuspended;
    unsigned long long unsavedCount;
    unsigned long long unsavedTime;
    NSObject<OS_dispatch_source> *saveTimer;
    unsigned long long lastDeleteTime;
    NSObject<OS_dispatch_source> *deleteTimer;
}

- (void).cxx_destruct;
- (void)flush;
- (void)logMessage:(id)arg1;
- (void)willRemoveLogger;
- (void)didAddLogger;
- (void)deleteOldLogEntries;
- (void)savePendingLogEntries;
@property _Bool deleteOnEverySave;
@property double deleteInterval;
@property double maxAge;
@property double saveInterval;
@property unsigned long long saveThreshold;
- (void)createAndStartDeleteTimer;
- (void)updateDeleteTimer;
- (void)destroyDeleteTimer;
- (void)createSuspendedSaveTimer;
- (void)updateAndResumeSaveTimer;
- (void)destroySaveTimer;
- (void)performDelete;
- (void)performSaveAndSuspendSaveTimer;
- (void)db_saveAndDelete;
- (void)db_delete;
- (void)db_save;
- (_Bool)db_log:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RandomKeyGenerationExerciseViewController : ExerciseViewController
{
    UITextField *usernameField;
    UITextField *passwordField;
    UISwitch *credentialStorageSwitch;
    UITextField *secretKeyField;
}

@property(nonatomic) __weak UITextField *secretKeyField; // @synthesize secretKeyField;
@property(nonatomic) __weak UISwitch *credentialStorageSwitch; // @synthesize credentialStorageSwitch;
@property(nonatomic) __weak UITextField *passwordField; // @synthesize passwordField;
@property(nonatomic) __weak UITextField *usernameField; // @synthesize usernameField;
- (void).cxx_destruct;
- (void)showAlertWithMessage:(id)arg1;
- (void)storeCredentialsForUsername:(id)arg1 withPassword:(id)arg2;
- (void)submit:(id)arg1;
- (void)verifyItemPressed:(id)arg1;

@end

@interface SVProgressAnimatedView : UIView
{
    double _radius;
    double _strokeThickness;
    UIColor *_strokeColor;
    double _strokeEnd;
    CAShapeLayer *_ringAnimatedLayer;
}

@property(retain, nonatomic) CAShapeLayer *ringAnimatedLayer; // @synthesize ringAnimatedLayer=_ringAnimatedLayer;
@property(nonatomic) double strokeEnd; // @synthesize strokeEnd=_strokeEnd;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) double strokeThickness; // @synthesize strokeThickness=_strokeThickness;
@property(nonatomic) double radius; // @synthesize radius=_radius;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutAnimatedLayer;
- (void)willMoveToSuperview:(id)arg1;

@end

@interface DDMultiFormatter : NSObject <DDLogFormatter>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_formatters;
}

- (void).cxx_destruct;
- (_Bool)isFormattingWithFormatter:(id)arg1;
- (void)removeAllFormatters;
- (void)removeFormatter:(id)arg1;
- (void)addFormatter:(id)arg1;
@property(readonly) NSArray *formatters;
- (id)logMessageForLine:(id)arg1 originalMessage:(id)arg2;
- (id)formatLogMessage:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseSecondaryIndexSetup : NSObject <NSCopying, NSFastEnumeration>
{
    NSMutableArray *setup;
}

- (void).cxx_destruct;
- (_Bool)matchesExistingColumnNamesAndAffinity:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)columnNames;
- (id)columnAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)addColumn:(id)arg1 withType:(long long)arg2;
- (_Bool)isExistingName:(id)arg1;
- (_Bool)isReservedName:(id)arg1;
- (id)initForCopy;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface YapDatabaseSecondaryIndexColumn : NSObject
{
    NSString *name;
    long long type;
}

@property(readonly, nonatomic) long long type; // @synthesize type;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (id)description;
- (id)initWithName:(id)arg1 type:(long long)arg2;

@end

@interface YapDatabaseSearchResultsViewOptions : YapDatabaseViewOptions <NSCopying>
{
    YapWhitelistBlacklist *allowedGroups;
    YapDatabaseFullTextSearchSnippetOptions *snippetOptions;
}

@property(copy, nonatomic) YapDatabaseFullTextSearchSnippetOptions *snippetOptions; // @synthesize snippetOptions;
@property(retain, nonatomic) YapWhitelistBlacklist *allowedGroups; // @synthesize allowedGroups;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) YapDatabaseFullTextSearchSnippetOptions *snippetOptions_NoCopy;
- (id)init;

@end

@interface YapDatabaseViewOptions : NSObject <NSCopying>
{
    _Bool isPersistent;
    _Bool skipInitialViewPopulation;
    YapWhitelistBlacklist *allowedCollections;
}

@property(nonatomic) _Bool skipInitialViewPopulation; // @synthesize skipInitialViewPopulation;
@property(retain, nonatomic) YapWhitelistBlacklist *allowedCollections; // @synthesize allowedCollections;
@property(nonatomic) _Bool isPersistent; // @synthesize isPersistent;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface DDTTYLogger : DDAbstractLogger <DDLogger>
{
    NSCalendar *calendar;
    unsigned long long calendarUnitFlags;
    NSString *appName;
    char *app;
    unsigned long long appLen;
    NSString *processID;
    char *pid;
    unsigned long long pidLen;
    _Bool colorsEnabled;
    NSMutableArray *colorProfilesArray;
    NSMutableDictionary *colorProfilesDict;
}

+ (id)sharedInstance;
+ (unsigned long long)codeIndexForColor:(id)arg1;
+ (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 fromColor:(id)arg4;
+ (void)initialize_colors_256;
+ (void)initialize_colors_16;
- (void).cxx_destruct;
- (id)loggerName;
- (void)logMessage:(id)arg1;
- (void)clearAllColors;
- (void)clearColorsForAllTags;
- (void)clearColorsForAllFlags;
- (void)clearColorsForTag:(id)arg1;
- (void)clearColorsForFlag:(int)arg1 context:(int)arg2;
- (void)clearColorsForFlag:(int)arg1;
- (void)setForegroundColor:(id)arg1 backgroundColor:(id)arg2 forTag:(id)arg3;
- (void)setForegroundColor:(id)arg1 backgroundColor:(id)arg2 forFlag:(int)arg3 context:(int)arg4;
- (void)setForegroundColor:(id)arg1 backgroundColor:(id)arg2 forFlag:(int)arg3;
@property _Bool colorsEnabled;
- (void)loadDefaultColorProfiles;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDTTYLoggerColorProfile : NSObject
{
    int mask;
    int context;
    unsigned char fg_r;
    unsigned char fg_g;
    unsigned char fg_b;
    unsigned char bg_r;
    unsigned char bg_g;
    unsigned char bg_b;
    unsigned long long fgCodeIndex;
    NSString *fgCodeRaw;
    unsigned long long bgCodeIndex;
    NSString *bgCodeRaw;
    char fgCode[24];
    unsigned long long fgCodeLen;
    char bgCode[24];
    unsigned long long bgCodeLen;
    char resetCode[8];
    unsigned long long resetCodeLen;
}

- (void).cxx_destruct;
- (id)description;
- (id)initWithForegroundColor:(id)arg1 backgroundColor:(id)arg2 flag:(int)arg3 context:(int)arg4;

@end

@interface YapDatabaseFullTextSearch : YapDatabaseExtension
{
    id block;
    long long blockType;
    NSOrderedSet *columnNames;
    NSDictionary *options;
    NSString *versionTag;
    id columnNamesSharedKeySet;
}

+ (id)tableNameForRegisteredName:(id)arg1;
+ (id)previousClassNames;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSString *versionTag; // @synthesize versionTag;
@property(readonly, nonatomic) long long blockType; // @synthesize blockType;
@property(readonly, nonatomic) id block; // @synthesize block;
- (void).cxx_destruct;
- (id)tableName;
- (id)newConnection:(id)arg1;
- (id)initWithColumnNames:(id)arg1 options:(id)arg2 handler:(id)arg3 versionTag:(id)arg4;
- (id)initWithColumnNames:(id)arg1 handler:(id)arg2 versionTag:(id)arg3;
- (id)initWithColumnNames:(id)arg1 handler:(id)arg2;

@end

@interface Asset : NSObject
{
    NSString *name;
    NSString *longDescription;
}

@property(retain, nonatomic) NSString *longDescription; // @synthesize longDescription;
@property(retain, nonatomic) NSString *name; // @synthesize name;
- (void).cxx_destruct;
- (id)htmlDescription;
- (id)description;
- (id)initWithName:(id)arg1 longDescription:(id)arg2;
- (id)initWithName:(id)arg1;

@end

@interface NSUserDefaultsStorageExerciseViewController : ExerciseViewController <UITextFieldDelegate>
{
    UITextField *_txt_pin;
    UIButton *_login;
}

@property(nonatomic) __weak UIButton *login; // @synthesize login=_login;
@property(nonatomic) __weak UITextField *txt_pin; // @synthesize txt_pin=_txt_pin;
- (void).cxx_destruct;
- (void)login:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AppDelegate : UIResponder <UIApplicationDelegate>
{
    UIWindow *_window;
    AssetStore *assetStore;
    NSManagedObjectContext *_managedObjectContext;
    NSManagedObjectModel *_managedObjectModel;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
}

@property(retain, nonatomic) AssetStore *assetStore; // @synthesize assetStore;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (id)applicationDocumentsDirectory;
@property(readonly, retain, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
@property(readonly, retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YDBCKCleanRecordTableInfo : NSObject <YDBCKRecordTableInfo>
{
    NSString *databaseIdentifier;
    long long ownerCount;
    CKRecord *record;
}

@property(readonly, nonatomic) CKRecord *record; // @synthesize record;
@property(readonly, nonatomic) long long ownerCount; // @synthesize ownerCount;
@property(readonly, nonatomic) NSString *databaseIdentifier; // @synthesize databaseIdentifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long current_ownerCount;
@property(readonly, nonatomic) CKRecord *current_record;
- (id)cleanCopyWithSanitizedRecord:(id)arg1;
- (id)dirtyCopy;
- (id)initWithDatabaseIdentifier:(id)arg1 ownerCount:(long long)arg2 record:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YDBCKDirtyRecordTableInfo : NSObject <YDBCKRecordTableInfo>
{
    _Bool skipUploadRecord;
    _Bool skipUploadDeletion;
    _Bool remoteDeletion;
    _Bool remoteMerge;
    NSString *databaseIdentifier;
    CKRecordID *recordID;
    long long clean_ownerCount;
    CKRecord *dirty_record;
    long long dirty_ownerCount;
    NSDictionary *originalValues;
}

@property(readonly, copy, nonatomic) NSDictionary *originalValues; // @synthesize originalValues;
@property(nonatomic) _Bool remoteMerge; // @synthesize remoteMerge;
@property(nonatomic) _Bool remoteDeletion; // @synthesize remoteDeletion;
@property(nonatomic) _Bool skipUploadDeletion; // @synthesize skipUploadDeletion;
@property(nonatomic) _Bool skipUploadRecord; // @synthesize skipUploadRecord;
@property(readonly, nonatomic) long long dirty_ownerCount; // @synthesize dirty_ownerCount;
@property(retain, nonatomic) CKRecord *dirty_record; // @synthesize dirty_record;
@property(readonly, nonatomic) long long clean_ownerCount; // @synthesize clean_ownerCount;
@property(readonly, nonatomic) CKRecordID *recordID; // @synthesize recordID;
@property(readonly, nonatomic) NSString *databaseIdentifier; // @synthesize databaseIdentifier;
- (void).cxx_destruct;
- (id)cleanCopyWithSanitizedRecord:(id)arg1;
- (_Bool)hasNilRecordOrZeroOwnerCount;
- (_Bool)ownerCountChanged;
- (void)decrementOwnerCount;
- (void)incrementOwnerCount;
- (void)mergeOriginalValues:(id)arg1;
@property(readonly, nonatomic) long long current_ownerCount;
@property(readonly, nonatomic) CKRecord *current_record;
- (id)initWithDatabaseIdentifier:(id)arg1 recordID:(id)arg2 ownerCount:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YDBCKAttachRequest : NSObject
{
    _Bool shouldUploadRecord;
    NSString *databaseIdentifier;
    CKRecord *record;
}

@property(nonatomic) _Bool shouldUploadRecord; // @synthesize shouldUploadRecord;
@property(retain, nonatomic) CKRecord *record; // @synthesize record;
@property(copy, nonatomic) NSString *databaseIdentifier; // @synthesize databaseIdentifier;
- (void).cxx_destruct;

@end

@interface YapDatabaseSecondaryIndexConnection : YapDatabaseExtensionConnection
{
    YapDatabaseSecondaryIndex *secondaryIndex;
    YapDatabaseConnection *databaseConnection;
    NSMutableDictionary *blockDict;
    YapCache *queryCache;
    unsigned long long queryCacheLimit;
    struct sqlite3_stmt *insertStatement;
    struct sqlite3_stmt *updateStatement;
    struct sqlite3_stmt *removeStatement;
    struct sqlite3_stmt *removeAllStatement;
}

@property(readonly, nonatomic) YapDatabaseSecondaryIndex *secondaryIndex; // @synthesize secondaryIndex;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)removeAllStatement;
- (struct sqlite3_stmt *)removeStatement;
- (struct sqlite3_stmt *)updateStatement;
- (struct sqlite3_stmt *)insertStatement;
- (void)prepareStatement:(struct sqlite3_stmt **)arg1 withString:(id)arg2 caller:(SEL)arg3;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
@property unsigned long long queryCacheLimit;
@property _Bool queryCacheEnabled;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithSecondaryIndex:(id)arg1 databaseConnection:(id)arg2;

@end

@interface YapDatabaseConnectionState : NSObject
{
    NSObject<OS_dispatch_semaphore> *writeSemaphore;
    YapDatabaseConnection *connection;
    _Bool activeReadTransaction;
    _Bool longLivedReadTransaction;
    _Bool sqlLevelSharedReadLock;
    _Bool activeWriteTransaction;
    _Bool waitingForWriteLock;
    unsigned long long lastTransactionSnapshot;
    unsigned long long lastTransactionTime;
}

- (void).cxx_destruct;
- (void)signalWriteLock;
- (void)waitForWriteLock;
- (void)prepareWriteLock;
- (void)dealloc;
- (id)initWithConnection:(id)arg1;

@end

@interface YapDatabaseViewState : NSObject
{
    NSMutableDictionary *group_pagesMetadata_dict;
    NSMutableDictionary *pageKey_group_dict;
    _Bool isImmutable;
}

@property(readonly, nonatomic) _Bool isImmutable; // @synthesize isImmutable;
- (void).cxx_destruct;
- (void)removeAllGroups;
- (void)removeGroup:(id)arg1;
- (id)removePageMetadataAtIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (id)insertPageMetadata:(id)arg1 atIndex:(unsigned long long)arg2 inGroup:(id)arg3;
- (id)addPageMetadata:(id)arg1 toGroup:(id)arg2;
- (id)createGroup:(id)arg1 withCapacity:(unsigned long long)arg2;
- (id)createGroup:(id)arg1;
- (void)enumerateWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateGroupsWithBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)numberOfGroups;
- (id)groupForPageKey:(id)arg1;
- (id)pagesMetadataForGroup:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)group_pagesMetadata_dict_deepCopy;
- (id)initForCopy;
- (id)init;

@end

@interface YapDatabaseSearchResultsViewConnection : YapDatabaseViewConnection
{
    NSString *query;
    _Bool queryChanged;
    struct sqlite3_stmt *snippetTable_getForRowidStatement;
    struct sqlite3_stmt *snippetTable_setForRowidStatement;
    struct sqlite3_stmt *snippetTable_removeForRowidStatement;
    struct sqlite3_stmt *snippetTable_removeAllStatement;
}

- (void).cxx_destruct;
- (void)setGroupingBlock:(id)arg1 groupingBlockType:(long long)arg2 sortingBlock:(id)arg3 sortingBlockType:(long long)arg4;
- (void)getQuery:(id *)arg1 wasChanged:(_Bool *)arg2;
- (void)setQuery:(id)arg1 isChange:(_Bool)arg2;
- (id)query;
- (struct sqlite3_stmt *)snippetTable_removeAllStatement;
- (struct sqlite3_stmt *)snippetTable_removeForRowidStatement;
- (struct sqlite3_stmt *)snippetTable_setForRowidStatement;
- (struct sqlite3_stmt *)snippetTable_getForRowidStatement;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)internalChangesetKeys;
- (void)postCommitCleanup;
- (void)postRollbackCleanup;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
@property(readonly, nonatomic) YapDatabaseSearchResultsView *searchResultsView;
- (void)_flushStatements;

@end

@interface BruteForceRuntimeVC : ExerciseViewController
{
    UILabel *_Hint;
    UITextField *_theTextField;
    UIButton *_bVerify;
}

@property(nonatomic) __weak UIButton *bVerify; // @synthesize bVerify=_bVerify;
@property(nonatomic) __weak UITextField *theTextField; // @synthesize theTextField=_theTextField;
@property(nonatomic) __weak UILabel *Hint; // @synthesize Hint=_Hint;
- (void).cxx_destruct;
- (_Bool)validatePin:(id)arg1;
- (void)buttonClick:(id)arg1;
- (void)viewDidLoad;

@end

@interface DDContextWhitelistFilterLogFormatter : NSObject <DDLogFormatter>
{
    DDLoggingContextSet *contextSet;
}

- (void).cxx_destruct;
- (id)formatLogMessage:(id)arg1;
- (_Bool)isOnWhitelist:(int)arg1;
- (id)whitelist;
- (void)removeFromWhitelist:(int)arg1;
- (void)addToWhitelist:(int)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDContextBlacklistFilterLogFormatter : NSObject <DDLogFormatter>
{
    DDLoggingContextSet *contextSet;
}

- (void).cxx_destruct;
- (id)formatLogMessage:(id)arg1;
- (_Bool)isOnBlacklist:(int)arg1;
- (id)blacklist;
- (void)removeFromBlacklist:(int)arg1;
- (void)addToBlacklist:(int)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DDLoggingContextSet : NSObject
{
    int lock;
    NSMutableSet *set;
}

- (void).cxx_destruct;
- (_Bool)isInSet:(int)arg1;
- (id)currentSet;
- (void)removeFromSet:(int)arg1;
- (void)addToSet:(int)arg1;
- (id)init;

@end

@interface YapDatabaseSearchQueueControl : NSObject
{
    _Bool rollback;
}

@property(readonly, nonatomic) _Bool rollback; // @synthesize rollback;
@property(readonly, nonatomic) _Bool abort;
- (id)initWithRollback:(_Bool)arg1;

@end

@interface YapDatabaseSearchQueue : NSObject
{
    NSMutableArray *queue;
    int lock;
    _Bool queueHasAbort;
    _Bool queueHasRollback;
}

- (void).cxx_destruct;
- (_Bool)shouldAbortSearchInProgressAndRollback:(_Bool *)arg1;
- (id)flushQueue;
- (unsigned long long)enqueuedQueryCount;
- (id)enqueuedQueries;
- (void)abortSearchInProgressAndRollback:(_Bool)arg1;
- (void)enqueueQuery:(id)arg1;
- (id)init;

@end

@interface YDBCKRecordInfo : NSObject
{
    NSString *databaseIdentifier;
    NSDictionary *originalValues;
    NSArray *keysToRestore;
    id versionInfo;
}

@property(retain, nonatomic) id versionInfo; // @synthesize versionInfo;
@property(retain, nonatomic) NSArray *keysToRestore; // @synthesize keysToRestore;
@property(retain, nonatomic) NSDictionary *originalValues; // @synthesize originalValues;
@property(copy, nonatomic) NSString *databaseIdentifier; // @synthesize databaseIdentifier;
- (void).cxx_destruct;

@end

@interface YDBCKChangeSet : NSObject
{
    NSMutableArray *deletedRecordIDs;
    YapDebugDictionary *modifiedRecords;
    _Bool isInFlight;
    _Bool hasChangesToDeletedRecordIDs;
    _Bool hasChangesToModifiedRecords;
    NSString *uuid;
    NSString *prev;
    NSString *databaseIdentifier;
}

@property(nonatomic) _Bool hasChangesToModifiedRecords; // @synthesize hasChangesToModifiedRecords;
@property(nonatomic) _Bool hasChangesToDeletedRecordIDs; // @synthesize hasChangesToDeletedRecordIDs;
@property(nonatomic) _Bool isInFlight; // @synthesize isInFlight;
@property(readonly, nonatomic) NSString *databaseIdentifier; // @synthesize databaseIdentifier;
@property(retain, nonatomic) NSString *prev; // @synthesize prev;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid;
- (void).cxx_destruct;
- (void)enumerateMissingRecordsWithBlock:(CDUnknownBlockType)arg1;
- (void)deserializeModifiedRecords:(id)arg1;
- (id)serializeModifiedRecords;
- (void)deserializeDeletedRecordIDs:(id)arg1;
- (id)serializeDeletedRecordIDs;
@property(readonly, nonatomic) unsigned long long recordsToSaveCount; // @dynamic recordsToSaveCount;
@property(readonly, nonatomic) unsigned long long recordIDsToDeleteCount; // @dynamic recordIDsToDeleteCount;
@property(readonly, nonatomic) NSArray *recordIDsToSave;
@property(readonly, nonatomic) NSArray *recordsToSave_noCopy; // @dynamic recordsToSave_noCopy;
@property(readonly, nonatomic) NSArray *recordsToSave; // @dynamic recordsToSave;
@property(readonly, nonatomic) NSArray *recordIDsToDelete; // @dynamic recordIDsToDelete;
- (id)fullCopy;
- (id)emptyCopy;
- (id)initWithDatabaseIdentifier:(id)arg1;
- (id)initWithUUID:(id)arg1 prev:(id)arg2 databaseIdentifier:(id)arg3 deletedRecordIDs:(id)arg4 modifiedRecords:(id)arg5;

@end

@interface HintsViewController : HtmlViewController
{
    UIScrollView *scrollView;
    UIPageControl *pageControl;
    Exercise *_exercise;
}

@property(retain, nonatomic) Exercise *exercise; // @synthesize exercise=_exercise;
@property(nonatomic) __weak UIPageControl *pageControl; // @synthesize pageControl;
@property(nonatomic) __weak UIScrollView *scrollView; // @synthesize scrollView;
- (void).cxx_destruct;
- (id)formatAsHtml:(id)arg1;
- (void)loadPreviousHint;
- (void)loadNextHint;
- (void)pageDidChangeAction;
- (void)viewDidLoad;

@end

@interface DeviceLogsExerciseViewController : ExerciseViewController <UITextFieldDelegate>
{
    UITextField *_ccField;
    UITextField *_cvvField;
    UITextField *_pinField;
}

@property(nonatomic) __weak UITextField *pinField; // @synthesize pinField=_pinField;
@property(nonatomic) __weak UITextField *cvvField; // @synthesize cvvField=_cvvField;
@property(nonatomic) __weak UITextField *ccField; // @synthesize ccField=_ccField;
- (void).cxx_destruct;
- (void)submitAction:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseExtensionTransaction : NSObject
{
}

- (void)removeValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (void)setDataValue:(id)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (id)dataValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (void)setStringValue:(id)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (id)stringValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (void)setDoubleValue:(double)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (double)doubleValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (_Bool)getDoubleValue:(double *)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (void)setIntValue:(int)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (int)intValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (_Bool)getIntValue:(int *)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (void)setBoolValue:(_Bool)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (_Bool)boolValueForExtensionKey:(id)arg1 persistent:(_Bool)arg2;
- (_Bool)getBoolValue:(_Bool *)arg1 forExtensionKey:(id)arg2 persistent:(_Bool)arg3;
- (void)handleWillRemoveAllObjectsInAllCollections;
- (void)handleWillRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleWillRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleWillReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleWillReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleWillUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleWillInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (id)extensionConnection;
- (id)databaseTransaction;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)flushPendingChangesToExtensionTables;
- (_Bool)flushPendingChangesToMainDatabaseTable;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;

@end

@interface ExercisesViewController : UITableViewController
{
    ExerciseCategory *category;
    DetailViewController *_detailViewController;
}

@property(retain, nonatomic) DetailViewController *detailViewController; // @synthesize detailViewController=_detailViewController;
@property(retain, nonatomic) ExerciseCategory *category; // @synthesize category;
- (void).cxx_destruct;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)awakeFromNib;

@end

@interface ServerCommunicationExerciseController : ExerciseViewController
{
    NSMutableData *responseData;
    UITextField *firstNameField;
    UITextField *lastNameField;
    UITextField *ssnField;
}

@property(nonatomic) __weak UITextField *ssnField; // @synthesize ssnField;
@property(nonatomic) __weak UITextField *lastNameField; // @synthesize lastNameField;
@property(nonatomic) __weak UITextField *firstNameField; // @synthesize firstNameField;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)submit:(id)arg1;

@end

@interface YapDatabaseHooksTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseHooksConnection *parentConnection;
    YapDatabaseReadTransaction *databaseTransaction;
}

- (void)handleWillRemoveAllObjectsInAllCollections;
- (void)handleWillRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleWillRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleWillReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleWillReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleWillUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleWillInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (id)extensionConnection;
- (id)databaseTransaction;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithParentConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface YapDatabaseViewPage : NSObject <NSCopying>
{
    struct vector<long long, std::__1::allocator<long long>> *vector;
}

- (id)debugDescription;
- (void)enumerateRowidsWithOptions:(unsigned long long)arg1 range:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowidsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowidsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getIndex:(unsigned long long *)arg1 ofRowid:(long long)arg2;
- (void)prependRange:(struct _NSRange)arg1 ofPage:(id)arg2;
- (void)appendRange:(struct _NSRange)arg1 ofPage:(id)arg2;
- (void)prependPage:(id)arg1;
- (void)appendPage:(id)arg1;
- (void)removeAllRowids;
- (void)removeRange:(struct _NSRange)arg1;
- (void)removeRowidAtIndex:(unsigned long long)arg1;
- (void)insertRowid:(long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addRowid:(long long)arg1;
- (long long)rowidAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)deserialize:(id)arg1;
- (id)serialize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface SBJsonBase : NSObject
{
    NSMutableArray *errorTrace;
    unsigned long long depth;
    unsigned long long maxDepth;
}

@property unsigned long long maxDepth; // @synthesize maxDepth;
@property(readonly, copy) NSArray *errorTrace; // @synthesize errorTrace;
- (void).cxx_destruct;
- (void)clearErrorTrace;
- (void)addErrorWithCode:(unsigned long long)arg1 description:(id)arg2;
- (id)init;

@end

@interface YapWhitelistBlacklist : NSObject
{
    NSSet *whitelist;
    NSSet *blacklist;
    CDUnknownBlockType filterBlock;
}

- (void).cxx_destruct;
- (_Bool)isAllowed:(id)arg1;
- (id)initWithFilterBlock:(CDUnknownBlockType)arg1;
- (id)initWithBlacklist:(id)arg1;
- (id)initWithWhitelist:(id)arg1;

@end

@interface YapDatabaseExtensionConnection : NSObject
{
}

- (id)extension;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;

@end

@interface YapDatabaseSearchResultsView : YapDatabaseView
{
    NSString *parentViewName;
    NSString *fullTextSearchName;
}

+ (id)snippetTableNameForRegisteredName:(id)arg1;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(readonly, nonatomic) NSString *fullTextSearchName; // @synthesize fullTextSearchName;
@property(readonly, nonatomic) NSString *parentViewName; // @synthesize parentViewName;
- (void).cxx_destruct;
- (id)snippetTableName;
- (id)newConnection:(id)arg1;
- (id)dependencies;
- (_Bool)supportsDatabase:(id)arg1 withRegisteredExtensions:(id)arg2;
- (id)initWithFullTextSearchName:(id)arg1 grouping:(id)arg2 sorting:(id)arg3 versionTag:(id)arg4 options:(id)arg5;
- (id)initWithFullTextSearchName:(id)arg1 parentViewName:(id)arg2 versionTag:(id)arg3 options:(id)arg4;
- (id)initWithGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3 options:(id)arg4;

@end

@interface YapDatabaseViewSectionChange : NSObject <NSCopying>
{
    NSString *group;
    _Bool isReset;
    long long type;
    unsigned long long originalSection;
    unsigned long long finalSection;
}

+ (id)resetGroup:(id)arg1;
+ (id)deleteGroup:(id)arg1;
+ (id)insertGroup:(id)arg1;
@property(readonly, nonatomic) NSString *group; // @synthesize group;
@property(readonly, nonatomic) long long type; // @synthesize type;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) unsigned long long index;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface YapDatabaseViewRowChange : NSObject <NSCopying>
{
    YapCollectionKey *collectionKey;
    NSString *originalGroup;
    NSString *finalGroup;
    long long type;
    unsigned long long changes;
    unsigned long long opOriginalIndex;
    unsigned long long opFinalIndex;
    unsigned long long originalIndex;
    unsigned long long finalIndex;
    unsigned long long originalSection;
    unsigned long long finalSection;
}

+ (id)updateCollectionKey:(id)arg1 inGroup:(id)arg2 atIndex:(unsigned long long)arg3 withChanges:(unsigned long long)arg4;
+ (id)deleteCollectionKey:(id)arg1 inGroup:(id)arg2 atIndex:(unsigned long long)arg3;
+ (id)insertCollectionKey:(id)arg1 inGroup:(id)arg2 atIndex:(unsigned long long)arg3;
@property(readonly, nonatomic) unsigned long long finalSection; // @synthesize finalSection;
@property(readonly, nonatomic) unsigned long long originalSection; // @synthesize originalSection;
@property(readonly, nonatomic) unsigned long long finalIndex; // @synthesize finalIndex;
@property(readonly, nonatomic) unsigned long long originalIndex; // @synthesize originalIndex;
@property(readonly, nonatomic) NSString *finalGroup; // @synthesize finalGroup;
@property(readonly, nonatomic) NSString *originalGroup; // @synthesize originalGroup;
@property(readonly, nonatomic) unsigned long long changes; // @synthesize changes;
@property(readonly, nonatomic) long long type; // @synthesize type;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) YapCollectionKey *collectionKey;
@property(readonly, nonatomic) NSIndexPath *newIndexPath;
@property(readonly, nonatomic) NSIndexPath *indexPath;

@end

@interface YapDatabaseViewChange : NSObject
{
}

+ (void)getSectionChanges:(id *)arg1 rowChanges:(id *)arg2 withOriginalMappings:(id)arg3 finalMappings:(id)arg4 fromChanges:(id)arg5;
+ (void)postProcessAndFilterSectionChanges:(id)arg1 withOriginalMappings:(id)arg2 finalMappings:(id)arg3;
+ (void)postProcessAndFilterRowChanges:(id)arg1 withOriginalMappings:(id)arg2 finalMappings:(id)arg3;
+ (void)consolidateSectionChanges:(id)arg1;
+ (void)consolidateRowChanges:(id)arg1;
+ (void)processRowChanges:(id)arg1 withOriginalMappings:(id)arg2 finalMappings:(id)arg3;
+ (void)preProcessChanges:(id)arg1 withOriginalMappings:(id)arg2 finalMappings:(id)arg3 andGetSectionChanges:(id *)arg4 rowChanges:(id *)arg5;

@end

@interface WeakServerSideControlsVC : ExerciseViewController <UIWebViewDelegate>
{
    UIWebView *_webView;
    UIActivityIndicatorView *_activityIndicatorView;
}

@property(nonatomic) __weak UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseFilteredView : YapDatabaseView
{
    id filteringBlock;
    long long filteringBlockType;
    NSString *parentViewName;
}

@property(readonly, nonatomic) NSString *parentViewName; // @synthesize parentViewName;
- (void).cxx_destruct;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2 sortingBlock:(id *)arg3 sortingBlockType:(long long *)arg4 filteringBlock:(id *)arg5 filteringBlockType:(long long *)arg6;
- (void)processChangeset:(id)arg1;
- (id)newConnection:(id)arg1;
- (id)dependencies;
- (_Bool)supportsDatabase:(id)arg1 withRegisteredExtensions:(id)arg2;
@property(readonly, nonatomic) long long filteringBlockType; // @synthesize filteringBlockType;
@property(readonly, nonatomic) id filteringBlock; // @synthesize filteringBlock;
- (id)initWithParentViewName:(id)arg1 filtering:(id)arg2 versionTag:(id)arg3 options:(id)arg4;
- (id)initWithParentViewName:(id)arg1 filtering:(id)arg2 versionTag:(id)arg3;
- (id)initWithParentViewName:(id)arg1 filtering:(id)arg2;
- (id)initWithGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3 options:(id)arg4;

@end

@interface YapDatabaseViewConnection : YapDatabaseExtensionConnection
{
    id sharedKeySetForInternalChangeset;
    id sharedKeySetForExternalChangeset;
    id groupingBlock;
    id sortingBlock;
    long long groupingBlockType;
    long long sortingBlockType;
    NSString *versionTag;
    _Bool groupingBlockChanged;
    _Bool sortingBlockChanged;
    _Bool versionTagChanged;
    YapDatabaseView *view;
    YapDatabaseConnection *databaseConnection;
    YapDatabaseViewState *state;
    YapCache *mapCache;
    YapCache *pageCache;
    NSMutableDictionary *dirtyMaps;
    NSMutableDictionary *dirtyPages;
    NSMutableDictionary *dirtyLinks;
    _Bool reset;
    _Bool lastInsertWasAtFirstIndex;
    _Bool lastInsertWasAtLastIndex;
    NSMutableArray *changes;
    NSMutableSet *mutatedGroups;
    struct sqlite3_stmt *mapTable_getPageKeyForRowidStatement;
    struct sqlite3_stmt *mapTable_setPageKeyForRowidStatement;
    struct sqlite3_stmt *mapTable_removeForRowidStatement;
    struct sqlite3_stmt *mapTable_removeAllStatement;
    struct sqlite3_stmt *pageTable_getDataForPageKeyStatement;
    struct sqlite3_stmt *pageTable_insertForPageKeyStatement;
    struct sqlite3_stmt *pageTable_updateAllForPageKeyStatement;
    struct sqlite3_stmt *pageTable_updatePageForPageKeyStatement;
    struct sqlite3_stmt *pageTable_updateLinkForPageKeyStatement;
    struct sqlite3_stmt *pageTable_removeForPageKeyStatement;
    struct sqlite3_stmt *pageTable_removeAllStatement;
}

@property(readonly, nonatomic) YapDatabaseView *view; // @synthesize view;
- (void).cxx_destruct;
- (void)getGroupingBlockType:(long long *)arg1 sortingBlockType:(long long *)arg2;
- (void)getSortingBlock:(id *)arg1 sortingBlockType:(long long *)arg2;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2;
- (void)getGroupingBlock:(id *)arg1 groupingBlockType:(long long *)arg2 sortingBlock:(id *)arg3 sortingBlockType:(long long *)arg4;
- (void)setGroupingBlock:(id)arg1 groupingBlockType:(long long)arg2 sortingBlock:(id)arg3 sortingBlockType:(long long)arg4 versionTag:(id)arg5;
- (struct sqlite3_stmt *)pageTable_removeAllStatement;
- (struct sqlite3_stmt *)pageTable_removeForPageKeyStatement;
- (struct sqlite3_stmt *)pageTable_updateLinkForPageKeyStatement;
- (struct sqlite3_stmt *)pageTable_updatePageForPageKeyStatement;
- (struct sqlite3_stmt *)pageTable_updateAllForPageKeyStatement;
- (struct sqlite3_stmt *)pageTable_insertForPageKeyStatement;
- (struct sqlite3_stmt *)pageTable_getDataForPageKeyStatement;
- (struct sqlite3_stmt *)mapTable_removeAllStatement;
- (struct sqlite3_stmt *)mapTable_removeForRowidStatement;
- (struct sqlite3_stmt *)mapTable_setPageKeyForRowidStatement;
- (struct sqlite3_stmt *)mapTable_getPageKeyForRowidStatement;
- (void)prepareStatement:(struct sqlite3_stmt **)arg1 withString:(id)arg2 caller:(SEL)arg3;
- (unsigned long long)numberOfRawChangesForNotifications:(id)arg1;
- (_Bool)hasChangesForAnyGroups:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasChangesForGroup:(id)arg1 inNotifications:(id)arg2;
- (_Bool)hasChangesForNotifications:(id)arg1;
- (void)getSectionChanges:(id *)arg1 rowChanges:(id *)arg2 forNotifications:(id)arg3 withMappings:(id)arg4;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)externalChangesetKeys;
- (id)internalChangesetKeys;
- (void)postCommitCleanup;
- (void)postRollbackCleanup;
- (void)prepareForReadWriteTransaction;
- (void)sanitizeDirtyPages;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (_Bool)isPersistentView;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithView:(id)arg1 databaseConnection:(id)arg2;

@end

@interface CLIColor : NSObject
{
    double _red;
    double _green;
    double _blue;
    double _alpha;
}

+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;

@end

@interface YapDatabaseQuery : NSObject
{
    NSString *queryString;
    NSArray *queryParameters;
}

+ (id)queryMatchingAll;
+ (id)queryWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
+ (id)queryWithFormat:(id)arg1;
@property(readonly, nonatomic) NSArray *queryParameters; // @synthesize queryParameters;
@property(readonly, nonatomic) NSString *queryString; // @synthesize queryString;
- (void).cxx_destruct;
- (id)initWithQueryString:(id)arg1 queryParameters:(id)arg2;

@end

@interface YapDatabaseCloudKitTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseCloudKitConnection *parentConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    NSSet *rowidsInMidMerge;
}

- (void).cxx_destruct;
- (id)requiresReadWriteTransactionException:(id)arg1;
- (void)getRecordChangeTag:(id *)arg1 hasPendingModifications:(_Bool *)arg2 hasPendingDelete:(_Bool *)arg3 forRecordID:(id)arg4 databaseIdentifier:(id)arg5;
- (_Bool)containsRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (id)recordForKey:(id)arg1 inCollection:(id)arg2;
- (id)recordForRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (_Bool)getRecordID:(id *)arg1 databaseIdentifier:(id *)arg2 forKey:(id)arg3 inCollection:(id)arg4;
- (id)collectionKeysForRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (_Bool)getKey:(id *)arg1 collection:(id *)arg2 forRecordID:(id)arg3 databaseIdentifier:(id)arg4;
- (_Bool)saveRecord:(id)arg1 databaseIdentifier:(id)arg2;
- (void)mergeRecord:(id)arg1 databaseIdentifier:(id)arg2;
- (void)detachRecordForKey:(id)arg1 inCollection:(id)arg2 wasRemoteDeletion:(_Bool)arg3 shouldUploadDeletion:(_Bool)arg4;
- (_Bool)attachRecord:(id)arg1 databaseIdentifier:(id)arg2 forKey:(id)arg3 inCollection:(id)arg4 shouldUploadRecord:(_Bool)arg5;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)flushPendingChangesToExtensionTables;
- (void)handleCompletedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3;
- (void)handlePartiallyCompletedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3;
- (void)removeQueueTableRowWithUUID:(id)arg1;
- (void)updateQueueTableRowWithChangeSet:(id)arg1;
- (void)insertQueueTableRowWithChangeSet:(id)arg1;
- (_Bool)getOwnerCount:(long long *)arg1 fromDiskForHash:(id)arg2;
- (void)removeAllRecordTableRows;
- (void)removeRecordTableRowWithHash:(id)arg1;
- (void)updateRecordTableRowWithHash:(id)arg1 record:(id)arg2 outSanitizedRecord:(id *)arg3;
- (void)maybeUpdateRecordTableRowWithHash:(id)arg1 info:(id)arg2;
- (void)insertRecordTableRowWithHash:(id)arg1 info:(id)arg2 outSanitizedRecord:(id *)arg3;
- (id)recordTableInfoForHashes:(id)arg1;
- (id)recordTableInfoForHash:(id)arg1 cacheResult:(_Bool)arg2;
- (id)mappingTableRowidsForRecordTableHash:(id)arg1;
- (void)removeAllMappingTableRows;
- (void)removeMappingTableRowWithRowid:(long long)arg1;
- (void)insertOrUpdateMappingTableRowWithRowid:(long long)arg1 info:(id)arg2;
- (id)mappingTableInfoForRowids:(id)arg1;
- (id)mappingTableInfoForRowid:(long long)arg1 cacheResult:(_Bool)arg2;
- (void)processRecord:(id)arg1 recordInfo:(id)arg2 preCalculatedHash:(id)arg3 forRowid:(long long)arg4 withPrevMappingTableInfo:(id)arg5 prevRecordTableInfo:(id)arg6 flags:(unsigned long long)arg7;
- (void)mergeChangedValuesFromRecord:(id)arg1 intoRecord:(id)arg2;
- (id)hashRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (id)queueTableName;
- (id)recordTableName;
- (id)mappingTableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (_Bool)repopulateTables;
- (_Bool)populateTables;
- (_Bool)restoreMasterChangeQueue;
- (_Bool)createNewMasterChangeQueue;
- (_Bool)createTables;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithParentConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface CutAndPasteExerciseController : ExerciseViewController
{
}

- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface KeychainAnalyzerViewController : ExerciseViewController
{
    KeychainDumper *_keychainDumper;
    UITextView *_textView;
}

@property(nonatomic) __weak UITextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)cleanButtonClicked:(id)arg1;
- (void)analysisButtonClicked:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface YapDatabase : NSObject
{
    void *IsOnSnapshotQueueKey;
    void *IsOnWriteQueueKey;
    NSObject<OS_dispatch_queue> *snapshotQueue;
    NSObject<OS_dispatch_queue> *writeQueue;
    NSMutableArray *connectionStates;
    NSArray *previouslyRegisteredExtensionNames;
    CDUnknownBlockType objectSerializer;
    CDUnknownBlockType objectDeserializer;
    CDUnknownBlockType metadataSerializer;
    CDUnknownBlockType metadataDeserializer;
    CDUnknownBlockType objectPreSanitizer;
    CDUnknownBlockType objectPostSanitizer;
    CDUnknownBlockType metadataPreSanitizer;
    CDUnknownBlockType metadataPostSanitizer;
    YapDatabaseOptions *options;
    struct sqlite3 *db;
    NSMutableArray *changesets;
    unsigned long long snapshot;
    NSObject<OS_dispatch_queue> *internalQueue;
    NSObject<OS_dispatch_queue> *checkpointQueue;
    YapDatabaseConnectionDefaults *connectionDefaults;
    NSDictionary *registeredExtensions;
    NSDictionary *registeredMemoryTables;
    NSArray *extensionsOrder;
    NSDictionary *extensionDependencies;
    YapDatabaseConnection *registrationConnection;
    unsigned long long maxConnectionPoolCount;
    double connectionPoolLifetime;
    NSObject<OS_dispatch_source> *connectionPoolTimer;
    NSMutableArray *connectionPoolValues;
    NSMutableArray *connectionPoolDates;
    NSString *sqliteVersion;
    unsigned long long pageSize;
    NSString *databasePath;
}

+ (id)columnNamesAndAffinityForTable:(id)arg1 using:(struct sqlite3 *)arg2;
+ (id)columnNamesForTable:(id)arg1 using:(struct sqlite3 *)arg2;
+ (_Bool)tableExists:(id)arg1 using:(struct sqlite3 *)arg2;
+ (id)pragmaValueForSynchronous:(int)arg1;
+ (id)pragmaValueForAutoVacuum:(int)arg1;
+ (int)pragma:(id)arg1 using:(struct sqlite3 *)arg2;
+ (id)sqliteVersionUsing:(struct sqlite3 *)arg1;
+ (CDUnknownBlockType)timestampDeserializer;
+ (CDUnknownBlockType)timestampSerializer;
+ (CDUnknownBlockType)propertyListDeserializer;
+ (CDUnknownBlockType)propertyListSerializer;
+ (CDUnknownBlockType)defaultDeserializer;
+ (CDUnknownBlockType)defaultSerializer;
@property(readonly, nonatomic) CDUnknownBlockType metadataPostSanitizer; // @synthesize metadataPostSanitizer;
@property(readonly, nonatomic) CDUnknownBlockType metadataPreSanitizer; // @synthesize metadataPreSanitizer;
@property(readonly, nonatomic) CDUnknownBlockType objectPostSanitizer; // @synthesize objectPostSanitizer;
@property(readonly, nonatomic) CDUnknownBlockType objectPreSanitizer; // @synthesize objectPreSanitizer;
@property(readonly, nonatomic) CDUnknownBlockType metadataDeserializer; // @synthesize metadataDeserializer;
@property(readonly, nonatomic) CDUnknownBlockType metadataSerializer; // @synthesize metadataSerializer;
@property(readonly, nonatomic) CDUnknownBlockType objectDeserializer; // @synthesize objectDeserializer;
@property(readonly, nonatomic) CDUnknownBlockType objectSerializer; // @synthesize objectSerializer;
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath;
- (void).cxx_destruct;
- (void)aggressiveTryTruncateLargeWAL:(long long)arg1;
- (void)asyncCheckpoint:(unsigned long long)arg1;
- (void)noteCommittedChanges:(id)arg1 fromConnection:(id)arg2;
- (id)pendingAndCommittedChangesSince:(unsigned long long)arg1 until:(unsigned long long)arg2;
- (void)notePendingChanges:(id)arg1 fromConnection:(id)arg2;
@property(readonly) unsigned long long snapshot;
- (id)registeredMemoryTables;
- (void)handleConnectionPoolTimerFire;
- (void)resetConnectionPoolTimer;
- (struct sqlite3 *)connectionPoolDequeue;
- (_Bool)connectionPoolEnqueue:(struct sqlite3 *)arg1;
@property double connectionPoolLifetime;
@property unsigned long long maxConnectionPoolCount;
- (id)previouslyRegisteredExtensionNames;
- (id)extensionDependencies;
- (id)extensionsOrder;
- (id)registeredExtensions;
- (id)registeredExtension:(id)arg1;
- (void)_unregisterExtensionWithName:(id)arg1 connection:(id)arg2;
- (_Bool)_registerExtension:(id)arg1 withName:(id)arg2 connection:(id)arg3;
- (id)registrationConnection;
- (void)asyncUnregisterExtensionWithName:(id)arg1 connection:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)asyncUnregisterExtensionWithName:(id)arg1 completionQueue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)asyncUnregisterExtensionWithName:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)unregisterExtensionWithName:(id)arg1 connection:(id)arg2;
- (void)unregisterExtensionWithName:(id)arg1;
- (void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 connection:(id)arg3 completionQueue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)registerExtension:(id)arg1 withName:(id)arg2 connection:(id)arg3;
- (_Bool)registerExtension:(id)arg1 withName:(id)arg2;
- (id)newConnection;
- (void)removeConnection:(id)arg1;
- (void)addConnection:(id)arg1;
@property unsigned long long defaultAutoFlushMemoryFlags;
@property long long defaultMetadataPolicy;
@property long long defaultObjectPolicy;
@property unsigned long long defaultMetadataCacheLimit;
@property _Bool defaultMetadataCacheEnabled;
@property unsigned long long defaultObjectCacheLimit;
@property _Bool defaultObjectCacheEnabled;
- (id)connectionDefaults;
- (void)fetchPreviouslyRegisteredExtensionNames;
- (void)writeSnapshot;
- (void)commitTransaction;
- (void)beginTransaction;
- (void)prepare;
- (void)upgradeTable;
- (_Bool)upgradeTable_2_3;
- (_Bool)upgradeTable_1_2;
- (_Bool)set_user_version:(int)arg1;
- (_Bool)get_user_version:(int *)arg1;
- (_Bool)createTables;
- (_Bool)configureEncryptionForDatabase:(struct sqlite3 *)arg1;
- (_Bool)configureDatabase:(_Bool)arg1;
- (_Bool)openDatabase;
- (void)dealloc;
- (id)initWithPath:(id)arg1 objectSerializer:(CDUnknownBlockType)arg2 objectDeserializer:(CDUnknownBlockType)arg3 metadataSerializer:(CDUnknownBlockType)arg4 metadataDeserializer:(CDUnknownBlockType)arg5 objectPreSanitizer:(CDUnknownBlockType)arg6 objectPostSanitizer:(CDUnknownBlockType)arg7 metadataPreSanitizer:(CDUnknownBlockType)arg8 metadataPostSanitizer:(CDUnknownBlockType)arg9 options:(id)arg10;
- (id)initWithPath:(id)arg1 objectSerializer:(CDUnknownBlockType)arg2 objectDeserializer:(CDUnknownBlockType)arg3 metadataSerializer:(CDUnknownBlockType)arg4 metadataDeserializer:(CDUnknownBlockType)arg5 options:(id)arg6;
- (id)initWithPath:(id)arg1 objectSerializer:(CDUnknownBlockType)arg2 objectDeserializer:(CDUnknownBlockType)arg3 metadataSerializer:(CDUnknownBlockType)arg4 metadataDeserializer:(CDUnknownBlockType)arg5;
- (id)initWithPath:(id)arg1 serializer:(CDUnknownBlockType)arg2 deserializer:(CDUnknownBlockType)arg3 preSanitizer:(CDUnknownBlockType)arg4 postSanitizer:(CDUnknownBlockType)arg5 options:(id)arg6;
- (id)initWithPath:(id)arg1 serializer:(CDUnknownBlockType)arg2 deserializer:(CDUnknownBlockType)arg3 options:(id)arg4;
- (id)initWithPath:(id)arg1 serializer:(CDUnknownBlockType)arg2 deserializer:(CDUnknownBlockType)arg3;
- (id)initWithPath:(id)arg1;
@property(readonly) long long sqlitePageSize; // @dynamic sqlitePageSize;
@property(readonly) NSString *sqliteVersion; // @dynamic sqliteVersion;
@property(readonly, copy, nonatomic) YapDatabaseOptions *options; // @dynamic options;
@property(readonly, nonatomic) NSString *databasePath_shm; // @dynamic databasePath_shm;
@property(readonly, nonatomic) NSString *databasePath_wal; // @dynamic databasePath_wal;

@end

@interface YapDatabaseCloudKitRecordHandler : NSObject
{
    id recordBlock;
    long long recordBlockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long recordBlockType; // @synthesize recordBlockType;
@property(readonly, nonatomic) id recordBlock; // @synthesize recordBlock;
- (void).cxx_destruct;

@end

@interface YapDatabaseExtension : NSObject
{
    NSString *registeredName;
    YapDatabase *registeredDatabase;
}

+ (id)previousClassNames;
+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property __weak YapDatabase *registeredDatabase; // @synthesize registeredDatabase;
@property(copy) NSString *registeredName; // @synthesize registeredName;
- (void).cxx_destruct;
- (void)processChangeset:(id)arg1;
- (id)newConnection:(id)arg1;
- (_Bool)isPersistent;
- (id)dependencies;
- (_Bool)supportsDatabase:(id)arg1 withRegisteredExtensions:(id)arg2;

@end

@interface DDASLLogCapture : NSObject
{
}

+ (void)captureAslLogs;
+ (void)aslMessageRecieved:(struct __asl_object_s *)arg1;
+ (void)configureAslQuery:(struct __asl_object_s *)arg1;
+ (void)setCaptureLogLevel:(int)arg1;
+ (int)captureLogLevel;
+ (void)stop;
+ (void)start;

@end

@interface SocialEngineeringVC : ExerciseViewController
{
    LAContext *context;
    UITextField *_nameTxtField;
    UITextField *_passwordTxtField;
}

@property(nonatomic) __weak UITextField *passwordTxtField; // @synthesize passwordTxtField=_passwordTxtField;
@property(nonatomic) __weak UITextField *nameTxtField; // @synthesize nameTxtField=_nameTxtField;
- (void).cxx_destruct;
- (void)showMessage:(id)arg1;
- (void)authenticateViaTouchID;
- (_Bool)verifyUserName:(id)arg1 password:(id)arg2;
- (void)loginItemPressed:(id)arg1;
- (void)hideShow:(id)arg1;
- (void)addShowHideButton;
- (void)viewDidLoad;

@end

@interface RootViewController : UITableViewController <InfoViewDelegate>
{
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didDismissInfoDialog;
- (void)showInfoDialog;
- (void)showInfoDialogWithContentFrom:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface YapDatabaseOptions : NSObject <NSCopying>
{
    long long corruptAction;
    long long pragmaSynchronous;
    long long pragmaJournalSizeLimit;
    long long pragmaPageSize;
    CDUnknownBlockType cipherKeyBlock;
    unsigned long long aggressiveWALTruncationSize;
}

@property(nonatomic) unsigned long long aggressiveWALTruncationSize; // @synthesize aggressiveWALTruncationSize;
@property(copy, nonatomic) CDUnknownBlockType cipherKeyBlock; // @synthesize cipherKeyBlock;
@property(nonatomic) long long pragmaPageSize; // @synthesize pragmaPageSize;
@property(nonatomic) long long pragmaJournalSizeLimit; // @synthesize pragmaJournalSizeLimit;
@property(nonatomic) long long pragmaSynchronous; // @synthesize pragmaSynchronous;
@property(nonatomic) long long corruptAction; // @synthesize corruptAction;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface DetailViewController : UIViewController <UISplitViewControllerDelegate>
{
    UIWebView *webView;
    UIBarButtonItem *startButton;
    UIBarButtonItem *creditsButton;
    Exercise *_exercise;
    UIPopoverController *_categoriesPopoverController;
}

@property(retain, nonatomic) UIPopoverController *categoriesPopoverController; // @synthesize categoriesPopoverController=_categoriesPopoverController;
@property(retain, nonatomic) Exercise *exercise; // @synthesize exercise=_exercise;
@property(nonatomic) __weak UIBarButtonItem *creditsButton; // @synthesize creditsButton;
@property(nonatomic) __weak UIBarButtonItem *startButton; // @synthesize startButton;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView;
- (void).cxx_destruct;
- (void)splitViewController:(id)arg1 willShowViewController:(id)arg2 invalidatingBarButtonItem:(id)arg3;
- (void)splitViewController:(id)arg1 willHideViewController:(id)arg2 withBarButtonItem:(id)arg3 forPopoverController:(id)arg4;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)configureView;

@end

@interface YapDatabaseViewRangeOptions : NSObject <NSCopying>
{
    _Bool isFixedRange;
    unsigned long long length;
    unsigned long long offset;
    long long pin;
    unsigned long long maxLength;
    unsigned long long minLength;
    unsigned long long growOptions;
}

+ (id)flexibleRangeWithLength:(unsigned long long)arg1 offset:(unsigned long long)arg2 from:(long long)arg3;
+ (id)fixedRangeWithLength:(unsigned long long)arg1 offset:(unsigned long long)arg2 from:(long long)arg3;
@property(nonatomic) unsigned long long growOptions; // @synthesize growOptions;
@property(nonatomic) unsigned long long minLength; // @synthesize minLength;
@property(nonatomic) unsigned long long maxLength; // @synthesize maxLength;
@property(readonly, nonatomic) _Bool isFixedRange; // @synthesize isFixedRange;
@property(readonly, nonatomic) long long pin; // @synthesize pin;
@property(readonly, nonatomic) unsigned long long offset; // @synthesize offset;
@property(readonly, nonatomic) unsigned long long length; // @synthesize length;
- (id)copyAndReverse;
- (id)copyWithNewLength:(unsigned long long)arg1 newOffset:(unsigned long long)arg2;
- (id)copyWithNewOffset:(unsigned long long)arg1;
- (id)copyWithNewLength:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) _Bool isFlexibleRange; // @dynamic isFlexibleRange;

@end

@interface YapDatabaseStatement : NSObject
{
    struct sqlite3_stmt *stmt;
}

@property(readonly, nonatomic) struct sqlite3_stmt *stmt; // @synthesize stmt;
- (void)dealloc;
- (id)initWithStatement:(struct sqlite3_stmt *)arg1;

@end

@interface ExerciseCategory : Asset
{
    NSMutableArray *exercises;
    NSString *longDescription;
}

- (void)setLongDescription:(id)arg1;
- (id)longDescription;
@property(retain, nonatomic) NSMutableArray *exercises; // @synthesize exercises;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1;

@end

@interface YapDatabaseSearchResultsViewTransaction : YapDatabaseViewTransaction
{
    YapMemoryTableTransaction *snippetTableTransaction;
    struct _YapRowidSet *ftsRowids;
    NSMutableDictionary *snippets;
    YapDatabaseSearchQueue *searchQueue;
}

- (void).cxx_destruct;
- (id)snippetForKey:(id)arg1 inCollection:(id)arg2;
- (void)performSearchWithQueue:(id)arg1;
- (void)performSearchFor:(id)arg1;
- (void)updateViewUsingBlocks;
- (void)updateViewFromParent;
- (id)query;
- (void)setGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3;
- (void)view:(id)arg1 didRepopulateWithFlags:(int)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)flushPendingChangesToExtensionTables;
- (void)didRemoveAllRowids;
- (void)didRemoveRowids:(id)arg1 collectionKeys:(id)arg2;
- (void)didRemoveRowid:(long long)arg1 collectionKey:(id)arg2;
- (void)didInsertRowid:(long long)arg1 collectionKey:(id)arg2;
- (void)updateSnippet:(id)arg1 forRowid:(long long)arg2;
- (id)snippetTableName;
- (void)repopulateViewDueToParentFilteringBlockChange;
- (void)repopulateViewDueToParentGroupingBlockChange;
- (void)repopulateFtsRowidsAndSnippets;
- (_Bool)populateView;
- (_Bool)createTables;
- (void)dropTablesForOldSubclassVersion:(int)arg1;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (void)dealloc;
- (id)initWithViewConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

@interface ExerciseViewController : UIViewController
{
    float keyboardHeight;
    UIScrollView *scrollView;
    Exercise *exercise;
    ExerciseViewController *rootExerciseController;
    UITextField *activeField;
    UIBarButtonItem *hintsButton;
}

@property(nonatomic) __weak UIBarButtonItem *hintsButton; // @synthesize hintsButton;
@property(retain, nonatomic) UITextField *activeField; // @synthesize activeField;
@property(retain, nonatomic) ExerciseViewController *rootExerciseController; // @synthesize rootExerciseController;
@property(retain, nonatomic) Exercise *exercise; // @synthesize exercise;
@property(nonatomic) __weak UIScrollView *scrollView; // @synthesize scrollView;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLoad;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWasShown:(id)arg1;
- (void)registerForKeyboardNotifications;
- (_Bool)disablesAutomaticKeyboardDismissal;
- (void)backgroundTouched:(id)arg1;
- (void)textFieldReturn:(id)arg1;
- (void)displayAlertWithTitle:(id)arg1 message:(id)arg2;
- (id)getPathForFilename:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 exercise:(id)arg3 rootExerciseController:(id)arg4;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 exercise:(id)arg3;

@end

@interface PhotoViewerVC : UIViewController
{
    UIImageView *_imageView;
}

@property(nonatomic) __weak UIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)dismiss:(id)arg1;
- (void)viewDidLoad;

@end

@interface SVIndefiniteAnimatedView : UIView
{
    double _strokeThickness;
    double _radius;
    UIColor *_strokeColor;
    CAShapeLayer *_indefiniteAnimatedLayer;
}

@property(retain, nonatomic) CAShapeLayer *indefiniteAnimatedLayer; // @synthesize indefiniteAnimatedLayer=_indefiniteAnimatedLayer;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double strokeThickness; // @synthesize strokeThickness=_strokeThickness;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutAnimatedLayer;
- (void)willMoveToSuperview:(id)arg1;

@end

@interface YapDatabaseHooks : YapDatabaseExtension
{
    YapWhitelistBlacklist *allowedCollections;
    CDUnknownBlockType willInsertObject;
    CDUnknownBlockType didInsertObject;
    CDUnknownBlockType willUpdateObject;
    CDUnknownBlockType didUpdateObject;
    CDUnknownBlockType willReplaceObject;
    CDUnknownBlockType didReplaceObject;
    CDUnknownBlockType willReplaceMetadata;
    CDUnknownBlockType didReplaceMetadata;
    CDUnknownBlockType willRemoveObject;
    CDUnknownBlockType didRemoveObject;
    CDUnknownBlockType willRemoveObjects;
    CDUnknownBlockType didRemoveObjects;
    CDUnknownBlockType willRemoveAllObjectsInAllCollections;
    CDUnknownBlockType didRemoveAllObjectsInAllCollections;
}

+ (void)dropTablesForRegisteredName:(id)arg1 withTransaction:(id)arg2 wasPersistent:(_Bool)arg3;
@property(copy) CDUnknownBlockType didRemoveAllObjectsInAllCollections; // @synthesize didRemoveAllObjectsInAllCollections;
@property(copy) CDUnknownBlockType willRemoveAllObjectsInAllCollections; // @synthesize willRemoveAllObjectsInAllCollections;
@property(copy) CDUnknownBlockType didRemoveObjects; // @synthesize didRemoveObjects;
@property(copy) CDUnknownBlockType willRemoveObjects; // @synthesize willRemoveObjects;
@property(copy) CDUnknownBlockType didRemoveObject; // @synthesize didRemoveObject;
@property(copy) CDUnknownBlockType willRemoveObject; // @synthesize willRemoveObject;
@property(copy) CDUnknownBlockType didReplaceMetadata; // @synthesize didReplaceMetadata;
@property(copy) CDUnknownBlockType willReplaceMetadata; // @synthesize willReplaceMetadata;
@property(copy) CDUnknownBlockType didReplaceObject; // @synthesize didReplaceObject;
@property(copy) CDUnknownBlockType willReplaceObject; // @synthesize willReplaceObject;
@property(copy) CDUnknownBlockType didUpdateObject; // @synthesize didUpdateObject;
@property(copy) CDUnknownBlockType willUpdateObject; // @synthesize willUpdateObject;
@property(copy) CDUnknownBlockType didInsertObject; // @synthesize didInsertObject;
@property(copy) CDUnknownBlockType willInsertObject; // @synthesize willInsertObject;
@property(retain) YapWhitelistBlacklist *allowedCollections; // @synthesize allowedCollections;
- (void).cxx_destruct;
- (void)willChangeValueForKey:(id)arg1;
- (id)newConnection:(id)arg1;
- (_Bool)isPersistent;
- (id)init;

@end

@interface YapDatabaseRelationshipOptions : NSObject <NSCopying>
{
    _Bool disableYapDatabaseRelationshipNodeProtocol;
    YapWhitelistBlacklist *allowedCollections;
    CDUnknownBlockType destinationFilePathEncryptor;
    CDUnknownBlockType destinationFilePathDecryptor;
}

@property(copy, nonatomic) CDUnknownBlockType destinationFilePathDecryptor; // @synthesize destinationFilePathDecryptor;
@property(copy, nonatomic) CDUnknownBlockType destinationFilePathEncryptor; // @synthesize destinationFilePathEncryptor;
@property(retain, nonatomic) YapWhitelistBlacklist *allowedCollections; // @synthesize allowedCollections;
@property(nonatomic) _Bool disableYapDatabaseRelationshipNodeProtocol; // @synthesize disableYapDatabaseRelationshipNodeProtocol;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface YDBCKChangeRecord : NSObject <NSCoding, NSCopying>
{
    CKRecordID *recordID;
    NSArray *changedKeys;
    NSSet *changedKeysSet;
    _Bool needsStoreFullRecord;
    CKRecord *record;
    NSDictionary *originalValues;
}

@property(retain, nonatomic) NSDictionary *originalValues; // @synthesize originalValues;
@property(nonatomic) _Bool needsStoreFullRecord; // @synthesize needsStoreFullRecord;
@property(retain, nonatomic) CKRecord *record; // @synthesize record;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *changedKeysSet; // @dynamic changedKeysSet;
@property(readonly, nonatomic) NSArray *changedKeys; // @dynamic changedKeys;
@property(readonly, nonatomic) CKRecordID *recordID; // @dynamic recordID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRecord:(id)arg1;

@end

@interface YDBCKRecord : NSObject <NSCoding>
{
    CKRecord *record;
}

+ (id)deserializeRecord:(id)arg1;
+ (id)serializeRecord:(id)arg1;
@property(readonly, nonatomic) CKRecord *record; // @synthesize record;
- (void).cxx_destruct;
- (Class)classForCoder;
- (Class)classForKeyedArchiver;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecord:(id)arg1;

@end

@interface SQLInjectionArticlesViewController : UITableViewController
{
    NSMutableArray *articleTitles;
}

@property(retain, nonatomic) NSMutableArray *articleTitles; // @synthesize articleTitles;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 articleTitles:(id)arg3;

@end

@interface AssetStore : NSObject
{
    NSMutableArray *categories;
}

@property(retain, nonatomic) NSMutableArray *categories; // @synthesize categories;
- (void).cxx_destruct;
- (id)init;

@end

@interface YapDatabaseViewTransaction : YapDatabaseExtensionTransaction
{
    YapMemoryTableTransaction *mapTableTransaction;
    YapMemoryTableTransaction *pageTableTransaction;
    YapMemoryTableTransaction *pageMetadataTableTransaction;
    YapDatabaseViewConnection *viewConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    NSString *lastHandledGroup;
    _Bool isRepopulate;
}

- (void).cxx_destruct;
- (id)mutationDuringEnumerationException:(id)arg1;
- (void)didRemoveAllRowids;
- (void)didRemoveRowids:(id)arg1 collectionKeys:(id)arg2;
- (void)didRemoveRowid:(long long)arg1 collectionKey:(id)arg2;
- (void)didInsertRowid:(long long)arg1 collectionKey:(id)arg2;
- (_Bool)containsRowid:(long long)arg1;
- (void)enumerateRowidsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateRowidsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowidsInGroup:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateKeysInGroup:(id)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysInGroup:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateGroupsUsingBlock:(CDUnknownBlockType)arg1;
- (struct _NSRange)findRangeInGroup:(id)arg1 usingBlock:(id)arg2 blockType:(long long)arg3;
- (id)versionTag;
- (_Bool)getGroup:(id *)arg1 index:(unsigned long long *)arg2 forKey:(id)arg3 inCollection:(id)arg4;
- (id)groupForKey:(id)arg1 inCollection:(id)arg2;
- (id)keyAtIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (id)collectionAtIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (_Bool)getLastKey:(id *)arg1 collection:(id *)arg2 inGroup:(id)arg3;
- (_Bool)getFirstKey:(id *)arg1 collection:(id *)arg2 inGroup:(id)arg3;
- (_Bool)getKey:(id *)arg1 collection:(id *)arg2 atIndex:(unsigned long long)arg3 inGroup:(id)arg4;
- (_Bool)isEmpty;
- (_Bool)isEmptyGroup:(id)arg1;
- (unsigned long long)numberOfItemsInAllGroups;
- (unsigned long long)numberOfItemsInGroup:(id)arg1;
- (_Bool)hasGroup:(id)arg1;
- (id)allGroups;
- (unsigned long long)numberOfGroups;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)flushPendingChangesToExtensionTables;
- (void)cleanupPages;
- (void)dropEmptyPage:(id)arg1 withPageKey:(id)arg2;
- (void)splitOversizedPage:(id)arg1 withPageKey:(id)arg2 toSize:(unsigned long long)arg3;
- (void)removeAllRowids;
- (void)removeAllRowidsInGroup:(id)arg1;
- (void)removeRowidsWithKeyMappings:(id)arg1 pageKey:(id)arg2 inGroup:(id)arg3;
- (void)removeRowid:(long long)arg1 collectionKey:(id)arg2;
- (void)removeRowid:(long long)arg1 collectionKey:(id)arg2 withPageKey:(id)arg3 inGroup:(id)arg4 skipSubclassHook:(_Bool)arg5;
- (void)removeRowid:(long long)arg1 collectionKey:(id)arg2 atIndex:(unsigned long long)arg3 inGroup:(id)arg4;
- (void)insertRowid:(long long)arg1 collectionKey:(id)arg2 object:(id)arg3 metadata:(id)arg4 inGroup:(id)arg5 withChanges:(unsigned long long)arg6 isNew:(_Bool)arg7;
- (void)insertRowid:(long long)arg1 collectionKey:(id)arg2 inGroup:(id)arg3 atIndex:(unsigned long long)arg4 withExistingPageKey:(id)arg5;
- (void)insertRowid:(long long)arg1 collectionKey:(id)arg2 inNewGroup:(id)arg3;
- (_Bool)getLastRowid:(long long *)arg1 inGroup:(id)arg2;
- (_Bool)getRowid:(long long *)arg1 atIndex:(unsigned long long)arg2 inGroup:(id)arg3;
- (unsigned long long)indexForRowid:(long long)arg1 inGroup:(id)arg2 withPageKey:(id)arg3;
- (id)pageForPageKey:(id)arg1;
- (id)pageKeysForRowids:(id *)arg1 withKeyMappings:(id)arg2;
- (id)pageKeyForRowid:(long long)arg1;
- (id)generatePageKey;
- (id)deserializePage:(id)arg1;
- (id)serializePage:(id)arg1;
- (_Bool)isPersistentView;
- (id)pageMetadataTableName;
- (id)pageTableName;
- (id)mapTableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (void)repopulateView;
- (_Bool)populateView;
- (_Bool)createTables;
- (void)dropTablesForOldClassVersion:(int)arg1;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithViewConnection:(id)arg1 databaseTransaction:(id)arg2;
- (void)setGrouping:(id)arg1 sorting:(id)arg2 versionTag:(id)arg3;
- (void)touchMetadataForKey:(id)arg1 inCollection:(id)arg2;
- (void)touchObjectForKey:(id)arg1 inCollection:(id)arg2;
- (void)touchRowForKey:(id)arg1 inCollection:(id)arg2;
- (void)enumerateRowsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 filter:(CDUnknownBlockType)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)enumerateRowsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateRowsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateRowsInGroup:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 filter:(CDUnknownBlockType)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)enumerateKeysAndObjectsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateKeysAndObjectsInGroup:(id)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndObjectsInGroup:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndMetadataInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 filter:(CDUnknownBlockType)arg4 usingBlock:(CDUnknownBlockType)arg5;
- (void)enumerateKeysAndMetadataInGroup:(id)arg1 withOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateKeysAndMetadataInGroup:(id)arg1 withOptions:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateKeysAndMetadataInGroup:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)lastObjectInGroup:(id)arg1;
- (id)firstObjectInGroup:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (id)metadataAtIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (id)metadataAtRow:(unsigned long long)arg1 inSection:(unsigned long long)arg2 withMappings:(id)arg3;
- (id)metadataAtIndexPath:(id)arg1 withMappings:(id)arg2;
- (id)objectAtRow:(unsigned long long)arg1 inSection:(unsigned long long)arg2 withMappings:(id)arg3;
- (id)objectAtIndexPath:(id)arg1 withMappings:(id)arg2;
- (_Bool)getRow:(unsigned long long *)arg1 section:(unsigned long long *)arg2 forKey:(id)arg3 inCollection:(id)arg4 withMappings:(id)arg5;
- (id)indexPathForKey:(id)arg1 inCollection:(id)arg2 withMappings:(id)arg3;
- (_Bool)getKey:(id *)arg1 collection:(id *)arg2 forRow:(unsigned long long)arg3 inSection:(unsigned long long)arg4 withMappings:(id)arg5;
- (_Bool)getKey:(id *)arg1 collection:(id *)arg2 atIndexPath:(id)arg3 withMappings:(id)arg4;
- (_Bool)getRowid:(long long *)arg1 collectionKey:(id *)arg2 forRow:(unsigned long long)arg3 inSection:(unsigned long long)arg4 withMappings:(id)arg5;

@end

@interface CyrptoChallengeVC : ExerciseViewController
{
}

- (void)failedWithError:(id)arg1;
- (void)showMessageFromResponseString:(id)arg1 isSuccessful:(_Bool)arg2;
- (_Bool)isSuccessfulResponseString:(id)arg1;
- (void)buyItemPressed:(id)arg1;
- (void)viewDidLoad;

@end

@interface URLSchemeAttackExerciseVC : ExerciseViewController
{
    UITextField *_mobileNumberTxtField;
    UITextField *_messageTxtField;
}

@property(nonatomic) __weak UITextField *messageTxtField; // @synthesize messageTxtField=_messageTxtField;
@property(nonatomic) __weak UITextField *mobileNumberTxtField; // @synthesize mobileNumberTxtField=_mobileNumberTxtField;
- (void).cxx_destruct;
- (void)sendMessageItemPressed:(id)arg1;
- (void)viewDidLoad;

@end

@interface YapDatabaseSecondaryIndexOptions : NSObject <NSCopying>
{
    YapWhitelistBlacklist *allowedCollections;
}

@property(retain, nonatomic) YapWhitelistBlacklist *allowedCollections; // @synthesize allowedCollections;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ExerciseContainerViewController : UIViewController
{
    ExerciseViewController *currentVC;
    UIBarButtonItem *hintsButton;
    UIView *container;
    Exercise *_exercise;
}

@property(retain, nonatomic) Exercise *exercise; // @synthesize exercise=_exercise;
@property(nonatomic) __weak UIView *container; // @synthesize container;
@property(nonatomic) __weak UIBarButtonItem *hintsButton; // @synthesize hintsButton;
@property(retain, nonatomic) ExerciseViewController *currentVC; // @synthesize currentVC;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)switchToViewController:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface Utils : NSObject
{
}

+ (id)generateRandomString;

@end

@interface RemoteAuthenticationExerciseController : ExerciseViewController
{
    UITextField *usernameField;
    UITextField *passwordField;
}

@property(nonatomic) __weak UITextField *passwordField; // @synthesize passwordField;
@property(nonatomic) __weak UITextField *usernameField; // @synthesize usernameField;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)submit:(id)arg1;

@end

@interface YDBCKChangeQueue : NSObject
{
    _Bool isMasterQueue;
    NSLock *masterQueueLock;
    NSMutableArray *oldChangeSets;
    NSArray *newChangeSets;
    NSMutableDictionary *newChangeSetsDict;
    NSString *lockUUID;
}

@property(retain) NSString *lockUUID; // @synthesize lockUUID;
- (void).cxx_destruct;
- (void)updatePendingQueue:(id)arg1 withSavedDeletedRecordID:(id)arg2 databaseIdentifier:(id)arg3;
- (void)updatePendingQueue:(id)arg1 withSavedRecord:(id)arg2 databaseIdentifier:(id)arg3 isOpPartialCompletion:(_Bool)arg4;
- (void)updatePendingQueue:(id)arg1 withRemoteDeletedRecordID:(id)arg2 databaseIdentifier:(id)arg3;
- (void)updatePendingQueue:(id)arg1 withMergedRecord:(id)arg2 databaseIdentifier:(id)arg3;
- (void)updatePendingQueue:(id)arg1 withDeletedRecordID:(id)arg2 databaseIdentifier:(id)arg3;
- (void)updatePendingQueue:(id)arg1 withDetachedRecordID:(id)arg2 databaseIdentifier:(id)arg3;
- (void)updatePendingQueue:(id)arg1 withModifiedRecord:(id)arg2 databaseIdentifier:(id)arg3 originalValues:(id)arg4;
- (void)updatePendingQueue:(id)arg1 withInsertedRecord:(id)arg2 databaseIdentifier:(id)arg3;
- (_Bool)mergeChangesForRecordID:(id)arg1 databaseIdentifier:(id)arg2 into:(id)arg3;
- (void)getHasPendingModification:(_Bool *)arg1 hasPendingDelete:(_Bool *)arg2 forRecordID:(id)arg3 databaseIdentifier:(id)arg4;
- (id)keyForDatabaseIdentifier:(id)arg1;
- (void)getNumberOfInFlightChangeSets:(unsigned long long *)arg1 queuedChangeSets:(unsigned long long *)arg2;
@property(readonly) unsigned long long numberOfPendingChangeSets;
@property(readonly) unsigned long long numberOfQueuedChangeSets;
@property(readonly) unsigned long long numberOfInFlightChangeSets;
- (id)changeSetsFromCurrentCommit;
- (id)changeSetsFromPreviousCommits;
- (id)currentChangeSetUUID;
@property(readonly, nonatomic) _Bool isPendingQueue; // @dynamic isPendingQueue;
@property(readonly, nonatomic) _Bool isMasterQueue; // @dynamic isMasterQueue;
- (void)mergePendingQueue:(id)arg1;
- (id)newPendingQueue;
- (void)resetFailedInFlightChangeSet;
- (void)removeCompletedInFlightChangeSet;
- (id)makeInFlightChangeSet:(_Bool *)arg1;
- (void)restoreOldChangeSets:(id)arg1;
- (id)initMasterQueue;

@end

@interface PlistStorageExerciseViewController : ExerciseViewController <UITextFieldDelegate>
{
    UITextField *_txt_pwd;
    UITextField *_txt_user;
}

@property(nonatomic) __weak UITextField *txt_user; // @synthesize txt_user=_txt_user;
@property(nonatomic) __weak UITextField *txt_pwd; // @synthesize txt_pwd=_txt_pwd;
- (void).cxx_destruct;
- (void)login:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BinaryPatchingVC : ExerciseViewController
{
    NSString *_pw;
    UILabel *_Hint;
    UITextField *_theTextField;
    UIButton *_bVerify;
}

@property(nonatomic) __weak UIButton *bVerify; // @synthesize bVerify=_bVerify;
@property(nonatomic) __weak UITextField *theTextField; // @synthesize theTextField=_theTextField;
@property(nonatomic) __weak UILabel *Hint; // @synthesize Hint=_Hint;
- (void).cxx_destruct;
- (void)buttonClick:(id)arg1;
- (void)viewDidLoad;

@end

@interface CocoaSecurity : NSObject
{
}

+ (id)hmacSha512WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha512:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha384WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha384:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha256WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha256:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha224WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha224:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha1WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacSha1:(id)arg1 hmacKey:(id)arg2;
+ (id)sha512WithData:(id)arg1;
+ (id)sha512:(id)arg1;
+ (id)sha384WithData:(id)arg1;
+ (id)sha384:(id)arg1;
+ (id)sha256WithData:(id)arg1;
+ (id)sha256:(id)arg1;
+ (id)sha224WithData:(id)arg1;
+ (id)sha224:(id)arg1;
+ (id)sha1WithData:(id)arg1;
+ (id)sha1:(id)arg1;
+ (id)hmacMd5WithData:(id)arg1 hmacKey:(id)arg2;
+ (id)hmacMd5:(id)arg1 hmacKey:(id)arg2;
+ (id)md5WithData:(id)arg1;
+ (id)md5:(id)arg1;
+ (id)aesDecryptWithData:(id)arg1 key:(id)arg2 iv:(id)arg3;
+ (id)aesDecryptWithBase64:(id)arg1 key:(id)arg2 iv:(id)arg3;
+ (id)aesDecryptWithBase64:(id)arg1 hexKey:(id)arg2 hexIv:(id)arg3;
+ (id)aesDecryptWithBase64:(id)arg1 key:(id)arg2;
+ (id)aesEncryptWithData:(id)arg1 key:(id)arg2 iv:(id)arg3;
+ (id)aesEncrypt:(id)arg1 key:(id)arg2 iv:(id)arg3;
+ (id)aesEncrypt:(id)arg1 hexKey:(id)arg2 hexIv:(id)arg3;
+ (id)aesEncrypt:(id)arg1 key:(id)arg2;

@end

@interface CocoaSecurityResult : NSObject
{
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *base64;
@property(readonly, nonatomic) NSString *hexLower;
@property(readonly, nonatomic) NSString *hex;
@property(readonly, nonatomic) NSString *utf8String;
- (id)initWithBytes:(char *)arg1 length:(unsigned long long)arg2;

@end

@interface CocoaSecurityEncoder : NSObject
{
}

- (id)hex:(id)arg1 useLower:(_Bool)arg2;
- (id)base64:(id)arg1;

@end

@interface CocoaSecurityDecoder : NSObject
{
}

- (id)hex:(id)arg1;
- (id)base64:(id)arg1;

@end

@interface SBJsonParser : SBJsonBase
{
    const char *c;
}

+ (void)initialize;
- (_Bool)scanIsAtEnd;
- (_Bool)scanNumber:(id *)arg1;
- (_Bool)scanHexQuad:(unsigned short *)arg1;
- (_Bool)scanUnicodeChar:(unsigned short *)arg1;
- (_Bool)scanRestOfString:(id *)arg1;
- (_Bool)scanRestOfDictionary:(id *)arg1;
- (_Bool)scanRestOfArray:(id *)arg1;
- (_Bool)scanRestOfNull:(id *)arg1;
- (_Bool)scanRestOfFalse:(id *)arg1;
- (_Bool)scanRestOfTrue:(id *)arg1;
- (_Bool)scanValue:(id *)arg1;
- (id)objectWithString:(id)arg1 error:(id *)arg2;
- (id)objectWithString:(id)arg1;

@end

@interface YapDatabaseCloudKitConnection : YapDatabaseExtensionConnection
{
    id sharedKeySetForInternalChangeset;
    YapDatabaseCloudKit *parent;
    YapDatabaseConnection *databaseConnection;
    YapCache *cleanMappingTableInfoCache;
    YapCache *cleanRecordTableInfoCache;
    NSMutableDictionary *dirtyMappingTableInfoDict;
    NSMutableDictionary *dirtyRecordTableInfoDict;
    YapCache *recordKeysCache;
    _Bool reset;
    _Bool isOperationCompletionTransaction;
    _Bool isOperationPartialCompletionTransaction;
    NSMutableDictionary *pendingAttachRequests;
    NSMutableSet *changeset_deletedRowids;
    NSMutableSet *changeset_deletedHashes;
    NSMutableDictionary *changeset_mappingTableInfo;
    NSMutableDictionary *changeset_recordTableInfo;
    struct sqlite3_stmt *mappingTable_insertStatement;
    struct sqlite3_stmt *mappingTable_updateForRowidStatement;
    struct sqlite3_stmt *mappingTable_getInfoForRowidStatement;
    struct sqlite3_stmt *mappingTable_enumerateForHashStatement;
    struct sqlite3_stmt *mappingTable_removeForRowidStatement;
    struct sqlite3_stmt *mappingTable_removeAllStatement;
    struct sqlite3_stmt *recordTable_insertStatement;
    struct sqlite3_stmt *recordTable_updateOwnerCountStatement;
    struct sqlite3_stmt *recordTable_updateMetadataStatement;
    struct sqlite3_stmt *recordTable_updateRecordStatement;
    struct sqlite3_stmt *recordTable_getInfoForHashStatement;
    struct sqlite3_stmt *recordTable_getOwnerCountForHashStatement;
    struct sqlite3_stmt *recordTable_getCountForHashStatement;
    struct sqlite3_stmt *recordTable_enumerateStatement;
    struct sqlite3_stmt *recordTable_removeForHashStatement;
    struct sqlite3_stmt *recordTable_removeAllStatement;
    struct sqlite3_stmt *queueTable_insertStatement;
    struct sqlite3_stmt *queueTable_updateDeletedRecordIDsStatement;
    struct sqlite3_stmt *queueTable_updateModifiedRecordsStatement;
    struct sqlite3_stmt *queueTable_updateBothStatement;
    struct sqlite3_stmt *queueTable_removeForUuidStatement;
    struct sqlite3_stmt *queueTable_removeAllStatement;
}

@property(readonly, nonatomic) YapDatabaseCloudKit *cloudKit; // @synthesize cloudKit=parent;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)queueTable_removeAllStatement;
- (struct sqlite3_stmt *)queueTable_removeForUuidStatement;
- (struct sqlite3_stmt *)queueTable_updateModifiedRecordsStatement;
- (struct sqlite3_stmt *)queueTable_updateBothStatement;
- (struct sqlite3_stmt *)queueTable_updateDeletedRecordIDsStatement;
- (struct sqlite3_stmt *)queueTable_insertStatement;
- (struct sqlite3_stmt *)recordTable_removeAllStatement;
- (struct sqlite3_stmt *)recordTable_removeForHashStatement;
- (struct sqlite3_stmt *)recordTable_enumerateStatement;
- (struct sqlite3_stmt *)recordTable_getCountForHashStatement;
- (struct sqlite3_stmt *)recordTable_getOwnerCountForHashStatement;
- (struct sqlite3_stmt *)recordTable_getInfoForHashStatement;
- (struct sqlite3_stmt *)recordTable_updateRecordStatement;
- (struct sqlite3_stmt *)recordTable_updateMetadataStatement;
- (struct sqlite3_stmt *)recordTable_updateOwnerCountStatement;
- (struct sqlite3_stmt *)recordTable_insertStatement;
- (struct sqlite3_stmt *)mappingTable_removeAllStatement;
- (struct sqlite3_stmt *)mappingTable_removeForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_enumerateForHashStatement;
- (struct sqlite3_stmt *)mappingTable_getInfoForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_updateForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_insertStatement;
- (void)prepareStatement:(struct sqlite3_stmt **)arg1 withString:(id)arg2 caller:(SEL)arg3;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)internalChangesetKeys;
- (void)postRollbackCleanup;
- (void)postCommitCleanup;
- (void)prepareForReadWriteTransaction;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithParent:(id)arg1 databaseConnection:(id)arg2;

@end

@interface YapDebugDictionary : NSObject <NSCopying>
{
    NSMutableDictionary *dict;
    Class keyClass;
    Class objectClass;
}

- (void).cxx_destruct;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)objectEnumerator;
@property(readonly, copy, nonatomic) NSArray *allValues;
@property(readonly, copy, nonatomic) NSArray *allKeys;
@property(readonly, nonatomic) unsigned long long count;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1 copyItems:(_Bool)arg2;
- (id)initWithKeyClass:(Class)arg1 objectClass:(Class)arg2 capacity:(unsigned long long)arg3;
- (id)initWithKeyClass:(Class)arg1 objectClass:(Class)arg2;

@end

@interface YapDatabaseViewMappings : NSObject <NSCopying>
{
    NSString *registeredViewName;
    NSArray *allGroups;
    _Bool viewGroupsAreDynamic;
    CDUnknownBlockType groupFilterBlock;
    CDUnknownBlockType groupSortBlock;
    NSMutableArray *visibleGroups;
    NSMutableDictionary *counts;
    _Bool isUsingConsolidatedGroup;
    _Bool autoConsolidationDisabled;
    NSMutableDictionary *dynamicSections;
    NSMutableSet *reverse;
    NSMutableDictionary *rangeOptions;
    NSMutableDictionary *dependencies;
    unsigned long long autoConsolidateGroupsThreshold;
    NSString *consolidatedGroupName;
    unsigned long long snapshotOfLastUpdate;
}

+ (id)mappingsWithGroups:(id)arg1 view:(id)arg2;
@property(readonly, nonatomic) unsigned long long snapshotOfLastUpdate; // @synthesize snapshotOfLastUpdate;
@property(readonly, copy, nonatomic) NSString *view; // @synthesize view=registeredViewName;
@property(readonly, copy, nonatomic) NSArray *allGroups; // @synthesize allGroups;
- (void).cxx_destruct;
- (id)description;
- (id)nearestIndexPathForRow:(unsigned long long)arg1 inGroup:(id)arg2;
- (unsigned long long)rowOffsetForGroup:(id)arg1;
- (unsigned long long)numberOfItemsInAllGroups;
- (_Bool)isUsingConsolidatedGroup;
- (struct YapDatabaseViewRangePosition)rangePositionForGroup:(id)arg1;
- (_Bool)getConsolidatedRow:(unsigned long long *)arg1 forIndex:(unsigned long long)arg2 inGroup:(id)arg3;
- (unsigned long long)rowForIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (id)indexPathForIndex:(unsigned long long)arg1 inGroup:(id)arg2;
- (_Bool)getRow:(unsigned long long *)arg1 section:(unsigned long long *)arg2 forIndex:(unsigned long long)arg3 inGroup:(id)arg4;
- (unsigned long long)sectionForGroup:(id)arg1;
- (_Bool)getGroup:(id *)arg1 index:(unsigned long long *)arg2 forConsolidatedRow:(unsigned long long)arg3;
- (unsigned long long)indexForRow:(unsigned long long)arg1 inGroup:(id)arg2;
- (unsigned long long)indexForRow:(unsigned long long)arg1 inSection:(unsigned long long)arg2;
- (_Bool)getGroup:(id *)arg1 index:(unsigned long long *)arg2 forRow:(unsigned long long)arg3 inSection:(unsigned long long)arg4;
- (_Bool)getGroup:(id *)arg1 index:(unsigned long long *)arg2 forIndexPath:(id)arg3;
- (id)groupForSection:(unsigned long long)arg1;
- (_Bool)isEmpty;
- (id)visibleGroups;
- (unsigned long long)numberOfItemsInGroup:(id)arg1;
- (unsigned long long)numberOfItemsInSection:(unsigned long long)arg1;
- (unsigned long long)numberOfSections;
- (id)reverse;
- (id)dependencies;
- (id)_rangeOptionsForGroup:(id)arg1;
- (_Bool)hasRangeOptionsForGroup:(id)arg1;
- (_Bool)hasRangeOptions;
- (unsigned long long)visibleCountForGroup:(id)arg1;
- (unsigned long long)fullCountForGroup:(id)arg1;
- (id)counts;
- (void)setAutoConsolidatingDisabled:(_Bool)arg1;
- (_Bool)isGroupDynamic:(id)arg1;
- (void)updateVisibility;
- (void)updateRangeOptionsForGroup:(id)arg1 withNewLength:(unsigned long long)arg2 newOffset:(unsigned long long)arg3;
- (void)updateRangeOptions:(id)arg1 forGroup:(id)arg2;
- (void)updateRangeOptionsLength;
- (void)updateWithCounts:(id)arg1 forceUpdateRangeOptions:(_Bool)arg2;
- (_Bool)shouldUpdateAllGroupsWithNewGroups:(id)arg1;
- (id)filterAndSortGroups:(id)arg1 withTransaction:(id)arg2;
- (void)validateAutoConsolidation;
- (void)updateMappingsWithNewGroups:(id)arg1;
- (void)updateWithTransaction:(id)arg1 forceUpdateRangeOptions:(_Bool)arg2;
- (void)updateWithTransaction:(id)arg1;
- (id)consolidatedGroupName;
- (unsigned long long)autoConsolidateGroupsThreshold;
- (void)setAutoConsolidateGroupsThreshold:(unsigned long long)arg1 withName:(id)arg2;
- (_Bool)isReversedForGroup:(id)arg1;
- (void)setIsReversed:(_Bool)arg1 forGroup:(id)arg2;
- (id)cellDrawingDependencyOffsetsForGroup:(id)arg1;
- (void)setCellDrawingDependencyOffsets:(id)arg1 forGroup:(id)arg2;
- (void)setCellDrawingDependencyForNeighboringCellWithOffset:(long long)arg1 forGroup:(id)arg2;
- (void)removeRangeOptionsForGroup:(id)arg1;
- (id)rangeOptionsForGroup:(id)arg1;
- (void)setRangeOptions:(id)arg1 forGroup:(id)arg2;
- (_Bool)isDynamicSectionForAllGroups;
- (void)setIsDynamicSectionForAllGroups:(_Bool)arg1;
- (_Bool)isDynamicSectionForGroup:(id)arg1;
- (void)setIsDynamicSection:(_Bool)arg1 forGroup:(id)arg2;
- (_Bool)isGroupNameValid:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)commonInit:(id)arg1;
- (id)initWithGroupFilterBlock:(CDUnknownBlockType)arg1 sortBlock:(CDUnknownBlockType)arg2 view:(id)arg3;
- (id)initWithGroups:(id)arg1 view:(id)arg2;

@end

@interface YapDatabaseViewFiltering : NSObject
{
    id filteringBlock;
    long long filteringBlockType;
}

+ (id)withRowBlock:(CDUnknownBlockType)arg1;
+ (id)withMetadataBlock:(CDUnknownBlockType)arg1;
+ (id)withObjectBlock:(CDUnknownBlockType)arg1;
+ (id)withKeyBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long filteringBlockType; // @synthesize filteringBlockType;
@property(readonly, nonatomic) id filteringBlock; // @synthesize filteringBlock;
- (void).cxx_destruct;

@end

@interface BrokenCryptographyExerciseViewController : ExerciseViewController
{
    NSString *encryptionKey;
    UITextField *_textField;
}

@property(nonatomic) __weak UITextField *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (void)showData:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)getPathForFilename:(id)arg1;

@end

@interface CBL_Body : NSObject <NSCopying>
{
    NSData *_json;
    NSDictionary *_object;
    _Bool _error;
}

+ (id)bodyWithJSON:(id)arg1;
+ (id)bodyWithProperties:(id)arg1;
@property(readonly) _Bool error; // @synthesize error=_error;
- (void).cxx_destruct;
- (_Bool)compact;
- (id)objectForKeyedSubscript:(id)arg1;
@property(readonly) NSDictionary *properties;
@property(readonly) id asObject;
@property(readonly) NSString *asJSONString;
@property(readonly) NSData *asPrettyJSON;
@property(readonly) NSData *asJSON;
@property(readonly) _Bool isValidJSON;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithJSON:(id)arg1 addingDocID:(id)arg2 revID:(id)arg3 deleted:(_Bool)arg4;
- (id)initWithJSON:(id)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithProperties:(id)arg1;

@end

@interface CBLBlipReplicator : NSObject <CBL_Replicator>
{
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSObject<OS_dispatch_queue> *_dbQueue;
    _Bool _started;
    int _retryCount;
    BLIPPocketSocketConnection *_conn;
    CBLReachability *_reachability;
    _Bool _reachable;
    _Bool _suspended;
    CBLSyncConnection *_sync;
    NSProgress *_progress;
    CDUnknownBlockType _updateProgressSoon;
    unsigned int _status;
    CBLDatabase *_db;
    CBL_ReplicatorSettings *_settings;
    NSError *_error;
    NSString *_sessionID;
    struct __SecCertificate *_serverCert;
    unsigned long long _changesProcessed;
    unsigned long long _changesTotal;
    NSString *_remoteCheckpointDocID;
    id _lastSequence;
}

+ (_Bool)needsRunLoop;
@property(readonly) id lastSequence; // @synthesize lastSequence=_lastSequence;
@property(readonly) NSString *remoteCheckpointDocID; // @synthesize remoteCheckpointDocID=_remoteCheckpointDocID;
@property(readonly, nonatomic) unsigned long long changesTotal; // @synthesize changesTotal=_changesTotal;
@property(readonly, nonatomic) unsigned long long changesProcessed; // @synthesize changesProcessed=_changesProcessed;
@property unsigned int status; // @synthesize status=_status;
@property(retain) CBLSyncConnection *sync; // @synthesize sync=_sync;
@property(readonly) struct __SecCertificate *serverCert; // @synthesize serverCert=_serverCert;
@property(copy, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) CBL_ReplicatorSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) CBLDatabase *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)syncProgressChanged;
- (void)syncStateChanged;
- (void)gotError:(id)arg1;
- (_Bool)validateServerTrust:(struct __SecTrust *)arg1;
- (void)forgetSync;
- (void)reachabilityChanged;
- (void)retry;
- (void)disconnect;
- (void)connect;
- (void)databaseClosing;
@property(nonatomic) _Bool suspended;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithDB:(id)arg1 settings:(id)arg2;

// Remaining properties
@property(readonly) NSArray *activeTasksInfo;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBL_Revision : NSObject <NSMutableCopying>
{
    CBL_Body *_body;
    NSString *_docID;
    CBL_RevID *_revID;
    long long _sequence;
    _Bool _deleted;
    _Bool _missing;
}

+ (id)asCanonicalJSON:(id)arg1 error:(id *)arg2;
+ (id)revisionWithProperties:(id)arg1;
@property(readonly) CBL_Body *body; // @synthesize body=_body;
@property(readonly) _Bool missing; // @synthesize missing=_missing;
@property(readonly) _Bool deleted; // @synthesize deleted=_deleted;
@property(readonly) CBL_RevID *revID; // @synthesize revID=_revID;
@property(readonly) NSString *docID; // @synthesize docID=_docID;
- (void).cxx_destruct;
@property(readonly) NSData *asCanonicalJSON;
- (id)revisionByAddingBasicMetadata;
- (id)mutableCopyWithDocID:(id)arg1 revID:(id)arg2;
- (long long)compareSequencesDescending:(id)arg1;
- (long long)compareSequences:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
@property(readonly, copy) NSData *asJSON;
@property(readonly) NSDictionary *attachments;
- (id)objectForKeyedSubscript:(id)arg1;
@property(readonly, copy) NSDictionary *properties;
@property(readonly) unsigned int generation;
- (void)forgetSequence;
@property long long sequence;
@property(readonly) long long sequenceIfKnown;
@property(readonly) NSString *revIDString;
- (id)copyWithoutBody;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithProperties:(id)arg1;
- (id)initWithBody:(id)arg1;
- (id)initWithDocID:(id)arg1 revID:(id)arg2 deleted:(_Bool)arg3 body:(id)arg4;
- (id)initWithDocID:(id)arg1 revID:(id)arg2 deleted:(_Bool)arg3;

@end

@interface CBL_MutableRevision : CBL_Revision
{
}

- (_Bool)mutateAttachments:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property _Bool missing; // @dynamic missing;
- (void)setSequence:(long long)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
@property(copy) NSData *asJSON; // @dynamic asJSON;
@property(copy) NSDictionary *properties; // @dynamic properties;
- (void)setDocID:(id)arg1 revID:(id)arg2;
@property(retain) CBL_Body *body; // @dynamic body;

@end

@interface CBL_RevisionList : NSObject <NSFastEnumeration, NSMutableCopying>
{
    NSMutableArray *_revs;
}

@property(readonly) NSArray *allRevisions; // @synthesize allRevisions=_revs;
- (void).cxx_destruct;
- (void)sortByDocID;
- (void)sortBySequenceAscending:(_Bool)arg1;
- (void)limit:(unsigned long long)arg1;
@property(readonly) NSArray *allRevIDs;
@property(readonly) NSArray *allDocIDs;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumerator;
- (id)revWithDocID:(id)arg1 revID:(id)arg2;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (id)revWithDocID:(id)arg1;
- (id)removeAndReturnRev:(id)arg1;
- (void)removeRevIdenticalTo:(id)arg1;
- (void)removeRev:(id)arg1;
- (void)addRev:(id)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
@property(readonly) unsigned long long count;
- (id)description;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)initWithArray:(id)arg1;
- (id)init;

@end

@interface CBL_Server : NSObject
{
    CBLManager *_manager;
}

- (void).cxx_destruct;
- (void)close;
- (id)waitForDatabaseNamed:(id)arg1 to:(CDUnknownBlockType)arg2;
- (void)tellDatabaseManager:(CDUnknownBlockType)arg1;
- (void)tellDatabaseNamed:(id)arg1 to:(CDUnknownBlockType)arg2;
- (id)waitForDatabaseManager:(CDUnknownBlockType)arg1;
- (void)queue:(CDUnknownBlockType)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithManager:(id)arg1;
@property(readonly) NSDictionary *customHTTPHeaders;

@end

@interface CBL_DispatchServer : CBL_Server
{
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)close;
- (id)waitForDatabaseManager:(CDUnknownBlockType)arg1;
- (void)queue:(CDUnknownBlockType)arg1;
- (id)initWithManager:(id)arg1;

@end

@interface CBL_RunLoopServer : CBL_Server
{
    NSThread *_serverThread;
    _Bool _stopRunLoop;
}

- (void).cxx_destruct;
- (id)waitForDatabaseManager:(CDUnknownBlockType)arg1;
- (void)queue:(CDUnknownBlockType)arg1;
- (void)close;
- (void)runServerThread;
- (void)dealloc;
- (id)initWithManager:(id)arg1;

@end

@interface CBLRestReplicator : NSObject <CBLRemoteRequestDelegate, CBL_Replicator>
{
    _Bool _running;
    _Bool _online;
    _Bool _active;
    CBL_ReplicatorSettings *_settings;
    CBLDatabase *_db;
    NSString *_lastSequence;
    CBLBatcher *_batcher;
    CBLRemoteSession *_remoteSession;
    MYBackgroundMonitor *_bgMonitor;
    _Bool _deepBackground;
    _Bool _filesystemUnavailable;
    _Bool _lastSequenceChanged;
    NSString *_sessionID;
    unsigned int _revisionsFailed;
    NSError *_error;
    NSThread *_thread;
    NSString *_remoteCheckpointDocID;
    NSDictionary *_remoteCheckpoint;
    _Bool _savingCheckpoint;
    _Bool _overdueForSave;
    int _asyncTaskCount;
    unsigned long long _changesProcessed;
    unsigned long long _changesTotal;
    double _startTime;
    CBLReachability *_host;
    CBLRemoteRequest *_checkRequest;
    _Bool _suspended;
    struct __SecCertificate *_serverCert;
    NSData *_pinnedCertData;
    NSString *_serverType;
    unsigned int _status;
}

+ (_Bool)needsRunLoop;
@property(copy) NSDictionary *remoteCheckpoint; // @synthesize remoteCheckpoint=_remoteCheckpoint;
@property(nonatomic) unsigned long long changesTotal; // @synthesize changesTotal=_changesTotal;
@property(nonatomic) unsigned long long changesProcessed; // @synthesize changesProcessed=_changesProcessed;
@property(copy, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property unsigned int status; // @synthesize status=_status;
@property(readonly) struct __SecCertificate *serverCert; // @synthesize serverCert=_serverCert;
@property(readonly, nonatomic) CBL_ReplicatorSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) __weak CBLDatabase *db; // @synthesize db=_db;
- (void).cxx_destruct;
- (void)saveLastSequence;
- (void)refreshRemoteCheckpointDoc;
- (void)fetchRemoteCheckpointDoc;
- (id)getLastSequenceFromLocalCheckpointDocument;
@property(readonly) NSString *remoteCheckpointDocID;
- (void)maybeCreateRemoteDB;
- (_Bool)checkSSLServerTrust:(id)arg1;
- (_Bool)checkSSLServerTrust:(struct __SecTrust *)arg1 forHost:(id)arg2 port:(unsigned short)arg3;
- (void)stopRemoteRequests;
- (void)remoteRequestReceivedResponse:(id)arg1;
@property(readonly) _Bool canSendCompressedRequests;
- (_Bool)serverIsSyncGatewayVersion:(id)arg1;
- (void)receivedResponseHeaders:(id)arg1;
- (void)login;
- (void)revisionFailed;
- (void)processInbox:(id)arg1;
- (void)addRevsToInbox:(id)arg1;
- (void)addToInbox:(id)arg1;
- (void)asyncTasksFinished:(unsigned long long)arg1;
- (void)asyncTaskStarted;
- (void)updateStatus;
- (void)updateActive;
@property(nonatomic) _Bool suspended;
- (void)stopCheckRequest;
- (void)checkIfOffline;
- (void)reachabilityChanged:(id)arg1;
- (_Bool)goOnline;
- (_Bool)goOffline;
- (void)retryIfReady;
- (void)retry;
- (void)stopped;
- (void)stop;
- (void)beginReplicating;
- (void)start;
@property(readonly) NSArray *activeTasksInfo;
- (void)postProgressChanged;
@property(retain) id lastSequence;
- (_Bool)hasSameSettingsAs:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)databaseClosing;
- (void)clearDbRef;
- (void)dealloc;
- (id)initWithDB:(id)arg1 settings:(id)arg2;
- (void)updateSuspended;
- (void)fileAccessChanged:(id)arg1;
- (void)backgroundTaskExpired;
- (void)appForegrounding;
- (void)appBackgrounding;
- (void)okToEndBackgrounding;
- (void)endBackgrounding;
- (void)setupBackgrounding;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLRestPuller : CBLRestReplicator <CBLChangeTrackerClient>
{
    CBLChangeTracker *_changeTracker;
    _Bool _canBulkGet;
    _Bool _caughtUp;
    CBLSequenceMap *_pendingSequences;
    NSMutableArray *_revsToPull;
    NSMutableArray *_deletedRevsToPull;
    NSMutableArray *_bulkRevsToPull;
    unsigned long long _httpConnectionCount;
    CBLBatcher *_downloadsToInsert;
    NSMutableArray *_waitingAttachments;
    NSMutableDictionary *_attachmentDownloads;
}

- (void).cxx_destruct;
- (void)downloadWaitingAttachments;
- (void)addToWaitingAttachments:(id)arg1;
- (void)downloadAttachment:(id)arg1;
- (void)insertDownloads:(id)arg1;
- (void)queueDownloadedRevision:(id)arg1;
- (void)revision:(id)arg1 failedWithError:(id)arg2;
- (void)pullBulkWithAllDocs:(id)arg1;
- (void)pullBulkRevisions:(id)arg1;
- (void)pullRemoteRevision:(id)arg1;
- (void)pullRemoteRevisions;
- (void)queueRemoteRevision:(id)arg1;
- (void)processInbox:(id)arg1;
- (void)changeTrackerStopped:(id)arg1;
- (void)changeTrackerFinished;
- (void)changeTrackerCaughtUp;
- (void)changeTrackerReceivedSequence:(id)arg1 docID:(id)arg2 revIDs:(id)arg3 deleted:(_Bool)arg4;
- (void)changeTrackerReceivedHTTPHeaders:(id)arg1;
- (_Bool)changeTrackerApproveSSLTrust:(struct __SecTrust *)arg1 forHost:(id)arg2 port:(unsigned short)arg3;
- (void)pauseOrResume;
- (_Bool)goOffline;
- (_Bool)goOnline;
- (void)stopped;
- (void)retry;
- (void)stop;
- (_Bool)canUseWebSockets;
- (void)startChangeTracker;
- (void)beginReplicating;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLPulledRevision : CBL_Revision
{
    id _remoteSequenceID;
    _Bool _conflicted;
}

@property _Bool conflicted; // @synthesize conflicted=_conflicted;
@property(copy) id remoteSequenceID; // @synthesize remoteSequenceID=_remoteSequenceID;
- (void).cxx_destruct;

@end

@interface CBLDynamicObject : NSObject
{
}

+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (CDUnknownFunctionPointerType)impForSetterOfProperty:(id)arg1 ofType:(const char *)arg2;
+ (CDUnknownFunctionPointerType)impForGetterOfProperty:(id)arg1 ofType:(const char *)arg2;
+ (CDUnknownFunctionPointerType)impForSetterOfProperty:(id)arg1 ofProtocol:(id)arg2;
+ (CDUnknownFunctionPointerType)impForGetterOfProperty:(id)arg1 ofProtocol:(id)arg2;
+ (CDUnknownFunctionPointerType)impForSetterOfProperty:(id)arg1 ofClass:(Class)arg2;
+ (CDUnknownFunctionPointerType)impForGetterOfProperty:(id)arg1 ofClass:(Class)arg2;
+ (Class)classOfProperty:(id)arg1;
+ (id)propertyNames;
+ (id)setterKey:(SEL)arg1;
+ (id)getterKey:(SEL)arg1;
- (_Bool)setValue:(id)arg1 ofProperty:(id)arg2;
- (id)getValueOfProperty:(id)arg1;

@end

@interface MYZip : NSObject <MYCodec>
{
    struct z_stream_s _strm;
    _Bool _open;
    _Bool _compressing;
    unsigned char _buffer[8192];
    int _status;
}

+ (id)dataByDecompressingData:(id)arg1;
+ (id)dataByCompressingData:(id)arg1;
+ (id)processData:(id)arg1 compress:(_Bool)arg2;
@property(readonly) int status; // @synthesize status=_status;
- (_Bool)addBytes:(const void *)arg1 length:(unsigned long long)arg2 onOutput:(CDUnknownBlockType)arg3;
- (_Bool)close;
- (void)dealloc;
- (id)initForCompressing:(_Bool)arg1;

@end

@interface CBLRestPusher : CBLRestReplicator
{
    _Bool _createTarget;
    _Bool _creatingTarget;
    _Bool _observing;
    _Bool _uploading;
    NSMutableArray *_uploaderQueue;
    _Bool _dontSendMultipart;
    NSMutableIndexSet *_pendingSequences;
    long long _maxPendingSequence;
    CBLBatcher *_purgeQueue;
}

@property _Bool createTarget; // @synthesize createTarget=_createTarget;
- (void).cxx_destruct;
- (void)stopRemoteRequests;
- (void)startNextUpload;
- (void)uploadJSONRevision:(id)arg1;
- (_Bool)uploadMultipartRevision:(id)arg1;
- (id)multipartWriterForRevision:(id)arg1 boundary:(id)arg2 error:(id *)arg3;
- (void)uploadBulkDocs:(id)arg1 changes:(id)arg2;
- (void)uploadChanges:(id)arg1 fromDiffs:(id)arg2;
- (void)processInbox:(id)arg1;
- (void)dbChanged:(id)arg1;
- (void)skipSequence:(long long)arg1;
- (void)removePending:(id)arg1;
- (void)addPending:(id)arg1;
- (void)stop;
- (_Bool)goOffline;
- (void)stopObserving;
- (void)beginReplicating;
@property(readonly) CBL_RevisionList *unpushedRevisions;
- (void)maybeCreateRemoteDB;
- (_Bool)isPush;

@end

@interface CBL_ReplicatorSettings : NSObject
{
    _Bool _isPush;
    _Bool _continuous;
    _Bool _createTarget;
    _Bool _downloadAttachments;
    NSURL *_remote;
    NSString *_filterName;
    CDUnknownBlockType _filterBlock;
    NSDictionary *_filterParameters;
    NSArray *_docIDs;
    NSDictionary *_options;
    NSDictionary *_requestHeaders;
    CDUnknownBlockType _revisionBodyTransformationBlock;
    id <CBLAuthorizer> _authorizer;
}

+ (id)userAgentHeader;
@property _Bool downloadAttachments; // @synthesize downloadAttachments=_downloadAttachments;
@property(retain) id <CBLAuthorizer> authorizer; // @synthesize authorizer=_authorizer;
@property(copy, nonatomic) CDUnknownBlockType revisionBodyTransformationBlock; // @synthesize revisionBodyTransformationBlock=_revisionBodyTransformationBlock;
@property(copy) NSDictionary *requestHeaders; // @synthesize requestHeaders=_requestHeaders;
@property(copy) NSDictionary *options; // @synthesize options=_options;
@property(copy) NSArray *docIDs; // @synthesize docIDs=_docIDs;
@property(copy) NSDictionary *filterParameters; // @synthesize filterParameters=_filterParameters;
@property(copy) CDUnknownBlockType filterBlock; // @synthesize filterBlock=_filterBlock;
@property(copy) NSString *filterName; // @synthesize filterName=_filterName;
@property _Bool createTarget; // @synthesize createTarget=_createTarget;
@property _Bool continuous; // @synthesize continuous=_continuous;
@property(readonly) _Bool isPush; // @synthesize isPush=_isPush;
@property(readonly) NSURL *remote; // @synthesize remote=_remote;
- (void).cxx_destruct;
- (_Bool)compilePushFilterForDatabase:(id)arg1 status:(int *)arg2;
- (id)transformRevision:(id)arg1;
- (_Bool)checkSSLServerTrust:(struct __SecTrust *)arg1 forHost:(id)arg2 port:(unsigned short)arg3;
@property(readonly) _Bool trustReachability;
- (_Bool)isHostReachable:(id)arg1;
@property(readonly) _Bool canUseCellNetwork;
@property(readonly) double pollInterval;
@property(readonly) double requestTimeout;
- (_Bool)isEqual:(id)arg1;
- (id)remoteCheckpointDocIDForLocalUUID:(id)arg1;
- (id)initWithRemote:(id)arg1 push:(_Bool)arg2;

@end

@interface CBLChangeTracker : NSObject <NSStreamDelegate>
{
    NSURL *_databaseURL;
    id <CBLChangeTrackerClient> _client;
    int _mode;
    id _lastSequenceID;
    unsigned int _limit;
    NSError *_error;
    _Bool _continuous;
    double _pollInterval;
    _Bool _includeConflicts;
    NSString *_filterName;
    NSDictionary *_filterParameters;
    double _heartbeat;
    NSDictionary *_requestHeaders;
    id <CBLAuthorizer> _authorizer;
    CBLCookieStorage *_cookieStorage;
    unsigned int _retryCount;
    _Bool _caughtUp;
    BLIPHTTPLogic *_http;
    _Bool _usePOST;
    CBLJSONReader *_parser;
    long long _parsedChangeCount;
    _Bool _paused;
    _Bool _activeOnly;
    NSArray *_docIDs;
}

@property(nonatomic) _Bool activeOnly; // @synthesize activeOnly=_activeOnly;
@property(nonatomic) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) double pollInterval; // @synthesize pollInterval=_pollInterval;
@property(retain, nonatomic) NSArray *docIDs; // @synthesize docIDs=_docIDs;
@property(retain, nonatomic) CBLCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property(retain, nonatomic) id <CBLAuthorizer> authorizer; // @synthesize authorizer=_authorizer;
@property(retain, nonatomic) NSDictionary *requestHeaders; // @synthesize requestHeaders=_requestHeaders;
@property(copy) NSDictionary *filterParameters; // @synthesize filterParameters=_filterParameters;
@property(copy) NSString *filterName; // @synthesize filterName=_filterName;
@property(nonatomic) __weak id <CBLChangeTrackerClient> client; // @synthesize client=_client;
@property(nonatomic) _Bool continuous; // @synthesize continuous=_continuous;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) double heartbeat; // @synthesize heartbeat=_heartbeat;
@property(nonatomic) unsigned int limit; // @synthesize limit=_limit;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(readonly, nonatomic) NSURL *databaseURL; // @synthesize databaseURL=_databaseURL;
@property(copy, nonatomic) id lastSequenceID; // @synthesize lastSequenceID=_lastSequenceID;
- (void).cxx_destruct;
- (long long)endParsingData;
- (_Bool)parseBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)retry;
- (void)retryAfterDelay:(double)arg1;
- (void)failedWithError:(id)arg1;
- (void)failedWithErrorDomain:(id)arg1 code:(long long)arg2 message:(id)arg3;
- (void)stopped;
- (void)stop;
- (_Bool)start;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (_Bool)checkServerTrust:(struct __SecTrust *)arg1 forURL:(id)arg2;
@property(readonly) NSDictionary *TLSSettings;
@property(readonly) NSData *changesFeedPOSTBody;
@property(readonly) NSURL *changesFeedURL;
@property(readonly) NSString *changesFeedPath;
@property(readonly) NSString *feed;
@property(readonly, nonatomic) NSString *databaseName;
- (id)initWithDatabaseURL:(id)arg1 mode:(int)arg2 conflicts:(_Bool)arg3 lastSequence:(id)arg4 client:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLBase64 : NSObject
{
}

+ (id)decodeURLSafe:(id)arg1;
+ (id)decode:(id)arg1;
+ (id)decodeURLSafe:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)decode:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)encode:(id)arg1;
+ (id)encode:(const void *)arg1 length:(unsigned long long)arg2;
+ (void)initialize;

@end

@interface CBL_BlobStore : NSObject
{
    NSString *_tempDir;
    NSString *_path;
    CBLSymmetricKey *_encryptionKey;
}

+ (_Bool)getKey:(struct CBLBlobKey *)arg1 forFilename:(id)arg2;
+ (id)keyDataForBlob:(id)arg1;
+ (struct CBLBlobKey)keyForBlob:(id)arg1;
@property(readonly) CBLSymmetricKey *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(readonly) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)createTempDir:(id *)arg1;
@property(readonly, nonatomic) NSString *tempDir;
- (_Bool)changeEncryptionKey:(id)arg1 error:(id *)arg2;
- (id)actionToChangeEncryptionKey:(id)arg1;
- (_Bool)markEncrypted:(_Bool)arg1 error:(id *)arg2;
- (long long)deleteBlobsExceptMatching:(CDUnknownBlockType)arg1 error:(id *)arg2;
@property(readonly) unsigned long long totalDataSize;
@property(readonly) unsigned long long count;
@property(readonly) NSArray *allKeys;
- (_Bool)deleteBlobForKey:(struct CBLBlobKey)arg1;
- (_Bool)storeBlob:(id)arg1 creatingKey:(struct CBLBlobKey *)arg2;
- (id)blobInputStreamForKey:(struct CBLBlobKey)arg1 length:(unsigned long long *)arg2;
- (id)blobForKey:(struct CBLBlobKey)arg1;
- (unsigned long long)lengthOfBlobForKey:(struct CBLBlobKey)arg1;
- (_Bool)hasBlobForKey:(struct CBLBlobKey)arg1;
- (id)blobPathForKey:(struct CBLBlobKey)arg1;
- (id)rawPathForKey:(struct CBLBlobKey)arg1;
- (void)dealloc;
- (_Bool)verifyExistingStore:(id *)arg1;
- (id)initWithPath:(id)arg1 encryptionKey:(id)arg2 error:(id *)arg3;
- (id)initInternalWithPath:(id)arg1 encryptionKey:(id)arg2;

@end

@interface CBLOpenIDConnectAuthorizer : CBLAuthorizer <CBLLoginAuthorizer, CBLCustomHeadersAuthorizer, CBLSessionCookieAuthorizer>
{
    CDUnknownBlockType _loginCallback;
    _Bool _checkedTokens;
    NSURL *_remoteURL;
    NSURL *_authURL;
    NSString *_IDToken;
    NSString *_refreshToken;
    _Bool _haveSessionCookie;
    NSString *_username;
}

+ (_Bool)forgetIDTokensForServer:(id)arg1 error:(id *)arg2;
@property(retain) NSString *username; // @synthesize username=_username;
- (void).cxx_destruct;
- (_Bool)deleteTokens:(id *)arg1;
- (int)_deleteTokens;
- (_Bool)saveTokens:(id)arg1 error:(id *)arg2;
- (_Bool)loadTokens;
- (id)keychainAttributes;
- (_Bool)removeStoredCredentials:(id *)arg1;
- (_Bool)authorizeURLRequest:(id)arg1;
- (void)continueAsyncLoginWithURL:(id)arg1 continuation:(CDUnknownBlockType)arg2;
- (void)loginResponse:(id)arg1 headers:(id)arg2 error:(id)arg3 continuation:(CDUnknownBlockType)arg4;
- (id)loginRequest;
- (_Bool)parseTokensFrom:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithCallback:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;

@end

@interface CBLGZip : NSObject <CBLCodec>
{
    struct z_stream_s _strm;
    _Bool _open;
    _Bool _compressing;
    unsigned char _buffer[8192];
    int _status;
}

+ (id)dataByDecompressingData:(id)arg1;
+ (id)dataByCompressingData:(id)arg1;
+ (id)processData:(id)arg1 compress:(_Bool)arg2;
@property(readonly) int status; // @synthesize status=_status;
- (_Bool)flush:(CDUnknownBlockType)arg1;
- (_Bool)addBytes:(const void *)arg1 length:(unsigned long long)arg2 onOutput:(CDUnknownBlockType)arg3;
- (_Bool)close;
- (void)dealloc;
- (id)initForCompressing:(_Bool)arg1;

@end

@interface CBLQueryOptions : NSObject
{
    const struct CBLGeoRect *bbox;
    unsigned int prefixMatchLevel;
    unsigned int skip;
    unsigned int limit;
    unsigned int groupLevel;
    _Bool descending;
    _Bool includeDocs;
    _Bool updateSeq;
    _Bool localSeq;
    _Bool inclusiveStart;
    _Bool inclusiveEnd;
    _Bool reduceSpecified;
    _Bool reduce;
    _Bool group;
    _Bool fullTextSnippets;
    _Bool fullTextRanking;
    unsigned int indexUpdateMode;
    unsigned int allDocsMode;
    id startKey;
    id endKey;
    NSString *startKeyDocID;
    NSString *endKeyDocID;
    NSArray *keys;
    CDUnknownBlockType filter;
    NSString *fullTextQuery;
}

@property(copy, nonatomic) NSString *fullTextQuery; // @synthesize fullTextQuery;
@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter;
@property(copy, nonatomic) NSArray *keys; // @synthesize keys;
@property(copy, nonatomic) NSString *endKeyDocID; // @synthesize endKeyDocID;
@property(copy, nonatomic) NSString *startKeyDocID; // @synthesize startKeyDocID;
@property(copy, nonatomic) id endKey; // @synthesize endKey;
@property(copy, nonatomic) id startKey; // @synthesize startKey;
- (void).cxx_destruct;
@property(readonly) id maxKey;
@property(readonly) id minKey;
@property(readonly) _Bool isEmpty;
- (id)init;

@end

@interface CBLView : NSObject <CBL_ViewStorageDelegate>
{
    CBLDatabase *_weakDB;
    id <CBL_ViewStorage> _storage;
    NSString *_name;
    int _collation;
}

+ (id)totalValues:(id)arg1;
+ (id)compiler;
+ (void)setCompiler:(id)arg1;
@property(nonatomic) int collation; // @synthesize collation=_collation;
@property(readonly) id <CBL_ViewStorage> storage; // @synthesize storage=_storage;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)_queryWithOptions:(id)arg1 status:(int *)arg2;
- (id)createQuery;
@property(readonly) _Bool stale;
@property(readonly) long long lastSequenceChangedAt;
@property(readonly) long long lastSequenceIndexed;
@property(readonly) unsigned long long totalRows;
@property(readonly) unsigned long long currentTotalRows;
- (void)postPublicChangeNotification;
- (int)updateIndexes:(id)arg1;
- (int)updateIndexAlone;
- (void)updateIndexAsync:(CDUnknownBlockType)arg1;
- (void)updateIndex;
- (int)_updateIndex;
@property(readonly) NSArray *viewsInGroup;
@property(copy) NSString *documentType;
- (_Bool)setMapBlock:(CDUnknownBlockType)arg1 version:(id)arg2;
- (_Bool)setMapBlock:(CDUnknownBlockType)arg1 reduceBlock:(CDUnknownBlockType)arg2 version:(id)arg3;
@property(readonly) NSString *mapVersion;
@property(readonly) CDUnknownBlockType reduceBlock;
@property(readonly) CDUnknownBlockType mapBlock;
@property(readonly) CDUnknownBlockType registeredMapBlock;
- (void)deleteView;
- (void)deleteIndex;
- (void)close;
@property(readonly) CBLDatabase *database;
@property(readonly, copy) NSString *description;
- (id)initWithDatabase:(id)arg1 name:(id)arg2 create:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLRemoteRequest : NSObject
{
    NSMutableURLRequest *_request;
    id <CBLAuthorizer> _authorizer;
    CBLCookieStorage *_cookieStorage;
    id <CBLRemoteRequestDelegate> _delegate;
    CDUnknownBlockType _onCompletion;
    NSURLSessionTask *_task;
    int _status;
    NSDictionary *_responseHeaders;
    unsigned char _retryCount;
    _Bool _dontLog404;
    _Bool _challenged;
    _Bool _autoRetry;
    _Bool _followRedirects;
    int _authPhase;
    NSMutableData *_jsonBuffer;
    _Bool _dontStop;
    CBLRemoteSession *_session;
}

@property(readonly) NSURLSessionTask *task; // @synthesize task=_task;
@property __weak CBLRemoteSession *session; // @synthesize session=_session;
@property(nonatomic) _Bool dontStop; // @synthesize dontStop=_dontStop;
@property(nonatomic) _Bool autoRetry; // @synthesize autoRetry=_autoRetry;
@property(retain, nonatomic) CBLCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property(readonly) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain, nonatomic) id <CBLRemoteRequestDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didFinishLoading;
- (void)_didFinishLoading;
- (void)didFailWithStatus:(int)arg1 message:(id)arg2 extra:(id)arg3;
- (void)didFailWithError:(id)arg1;
- (id)parseJSONResponse:(id *)arg1;
- (void)appendJSON:(id)arg1;
- (void)didReceiveData:(id)arg1;
- (void)_didReceiveData:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (id)needNewBodyStream;
- (id)willSendRequest:(id)arg1 redirectResponse:(id)arg2;
- (struct __SecTrust *)checkServerTrust:(id)arg1;
- (id)credentialForClientCertChallenge:(id)arg1 disposition:(long long *)arg2;
- (id)credentialForHTTPAuthChallenge:(id)arg1 disposition:(long long *)arg2;
- (id)nextCredentialToTry:(id)arg1;
- (_Bool)retryWithCredential;
- (_Bool)retry;
- (void)cancelWithStatus:(int)arg1 message:(id)arg2;
- (void)stop;
- (void)startAfterDelay:(double)arg1;
- (void)respondWithResult:(id)arg1 error:(id)arg2;
@property(readonly) _Bool running;
@property(readonly) NSMutableDictionary *statusInfo;
- (id)description;
- (void)dealloc;
- (void)clearConnection;
- (id)createTaskInURLSession:(id)arg1;
- (void)dontRedirect;
- (void)dontLog404;
- (_Bool)compressBody;
@property(retain, nonatomic) id <CBLAuthorizer> authorizer;
@property double timeoutInterval;
- (id)initWithMethod:(id)arg1 URL:(id)arg2 body:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;

@end

@interface CBLRemoteJSONRequest : CBLRemoteRequest
{
}

- (void)didFinishLoading;
- (void)didReceiveData:(id)arg1;
- (id)initWithMethod:(id)arg1 URL:(id)arg2 body:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;

@end

@interface CBLBatcher : NSObject
{
    unsigned long long _capacity;
    double _delay;
    NSMutableArray *_inbox;
    _Bool _scheduled;
    double _scheduledDelay;
    double _lastProcessedTime;
    CDUnknownBlockType _processor;
}

- (void).cxx_destruct;
@property(readonly) unsigned long long count;
- (void)clear;
- (void)flushAll;
- (void)flush;
- (void)queueObject:(id)arg1;
- (void)queueObjects:(id)arg1;
- (void)processNow;
- (void)scheduleWithDelay:(double)arg1;
- (void)unschedule;
- (id)initWithCapacity:(unsigned long long)arg1 delay:(double)arg2 processor:(CDUnknownBlockType)arg3;

@end

@interface MYZipReader : NSObject <MYReader>
{
    id <MYReader> _reader;
    MYZip *_zipper;
    NSMutableData *_zippedBuf;
    CDStruct_6dcf026d _zipped;
}

- (void).cxx_destruct;
@property(readonly) _Bool atEnd;
@property(readonly) _Bool hasBytesAvailable;
- (CDStruct_6dcf026d)readSliceOfMaxLength:(unsigned long long)arg1;
- (long long)readBytes:(void *)arg1 maxLength:(unsigned long long)arg2;
- (void)appendToBuf:(CDStruct_6dcf026d)arg1;
- (id)initWithReader:(id)arg1 compressing:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MYZipWriter : NSObject <MYWriter>
{
    id <MYWriter> _writer;
    MYZip *_zipper;
    NSMutableData *_zippedBuf;
    CDStruct_6dcf026d _zipped;
}

- (void).cxx_destruct;
- (_Bool)writeContentsOfStream:(id)arg1;
- (_Bool)writeData:(id)arg1;
- (_Bool)writeSlice:(CDStruct_6dcf026d)arg1;
- (id)initWithWriter:(id)arg1 compressing:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLMultipartReader : NSObject
{
    id <CBLMultipartReaderDelegate> _delegate;
    NSData *_boundary;
    CBLByteBuffer *_buffer;
    NSMutableDictionary *_headers;
    int _state;
    NSString *_error;
}

+ (void)initialize;
@property(readonly) NSData *boundary; // @synthesize boundary=_boundary;
@property(readonly) NSDictionary *headers; // @synthesize headers=_headers;
- (void).cxx_destruct;
@property(readonly) _Bool finished;
- (void)appendData:(id)arg1;
- (void)stop;
- (void)setError:(id)arg1;
@property(readonly) NSString *error;
- (_Bool)appendAndTrimBuffer;
- (void)deleteUpThrough:(struct _NSRange)arg1;
- (_Bool)parseHeaders:(id)arg1;
- (_Bool)parseContentType:(id)arg1;
- (void)close;
- (id)initWithContentType:(id)arg1 delegate:(id)arg2;

@end

@interface CBLClientCertAuthorizer : CBLAuthorizer <CBLCredentialAuthorizer>
{
    NSURLCredential *_credential;
    NSArray *_certificateChain;
}

@property(readonly) NSArray *certificateChain; // @synthesize certificateChain=_certificateChain;
@property(readonly) NSURLCredential *credential; // @synthesize credential=_credential;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)initWithIdentity:(struct __SecIdentity *)arg1 supportingCerts:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface CBLMultipartDownloader : CBLRemoteRequest
{
    CBLDatabase *_db;
    CBLMultipartDocumentReader *_reader;
}

- (void).cxx_destruct;
- (void)didFinishLoading;
- (void)didReceiveData:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
@property(readonly) NSDictionary *document;
- (id)description;
- (id)initWithURL:(id)arg1 database:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;

@end

@interface CBLAuthenticator : NSObject
{
}

+ (id)SSLClientCertAuthenticatorWithAnonymousIdentity:(id)arg1;
+ (id)SSLClientCertAuthenticatorWithIdentity:(struct __SecIdentity *)arg1 supportingCerts:(id)arg2;
+ (id)OpenIDConnectAuthenticator:(CDUnknownBlockType)arg1;
+ (id)OAuth1AuthenticatorWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 token:(id)arg3 tokenSecret:(id)arg4 signatureMethod:(id)arg5;
+ (id)personaAuthenticatorWithAssertion:(id)arg1;
+ (id)facebookAuthenticatorWithToken:(id)arg1;
+ (id)basicAuthenticatorWithName:(id)arg1 password:(id)arg2;

@end

@interface MYBuffer : NSObject <MYReader, MYWriter>
{
    NSMutableArray *_chunks;
    NSMutableData *_writingChunk;
    unsigned long long _chunkReadOffset;
}

- (void).cxx_destruct;
@property(readonly) _Bool atEnd;
@property(readonly) _Bool hasBytesAvailable;
- (id)flattened;
- (CDStruct_6dcf026d)readSliceOfMaxLength:(unsigned long long)arg1;
- (long long)readBytes:(void *)arg1 maxLength:(unsigned long long)arg2;
- (_Bool)writeContentsOfStream:(id)arg1;
- (_Bool)writeData:(id)arg1;
- (_Bool)writeSlice:(CDStruct_6dcf026d)arg1;
@property(readonly) unsigned long long maxLength;
@property(readonly) unsigned long long minLength;
- (_Bool)lengthKnown;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MYBackgroundMonitor : NSObject
{
    NSString *_name;
    unsigned long long _bgTask;
    CDUnknownBlockType _onAppBackgrounding;
    CDUnknownBlockType _onAppForegrounding;
    CDUnknownBlockType _onBackgroundTaskExpired;
}

@property(copy) CDUnknownBlockType onBackgroundTaskExpired; // @synthesize onBackgroundTaskExpired=_onBackgroundTaskExpired;
@property(copy) CDUnknownBlockType onAppForegrounding; // @synthesize onAppForegrounding=_onAppForegrounding;
@property(copy) CDUnknownBlockType onAppBackgrounding; // @synthesize onAppBackgrounding=_onAppBackgrounding;
- (void).cxx_destruct;
- (void)appForegrounding:(id)arg1;
- (void)appBackgrounding:(id)arg1;
@property(readonly) _Bool hasBackgroundTask;
- (_Bool)beginBackgroundTaskNamed:(id)arg1;
- (_Bool)endBackgroundTask;
- (void)dealloc;
- (void)stop;
- (void)start;
- (id)init;

@end

@interface CBLMultipartWriter : CBLMultiStreamWriter
{
    NSString *_boundary;
    NSString *_contentType;
    NSData *_finalBoundary;
    NSDictionary *_nextPartsHeaders;
}

@property(readonly) NSString *boundary; // @synthesize boundary=_boundary;
- (void).cxx_destruct;
- (void)openForURLRequest:(id)arg1;
- (void)opened;
- (int)addAttachment:(id)arg1;
- (void)addGZippedData:(id)arg1;
- (void)addInput:(id)arg1 length:(unsigned long long)arg2;
- (void)setValue:(id)arg1 forNextPartsHeader:(id)arg2;
- (void)setNextPartsHeaders:(id)arg1;
@property(readonly) NSString *contentType;
- (id)initWithContentType:(id)arg1 boundary:(id)arg2;

@end

@interface CBLMultiStreamWriter : NSObject <NSStreamDelegate>
{
    NSMutableArray *_inputs;
    unsigned long long _nextInputIndex;
    NSInputStream *_currentInput;
    char *_buffer;
    unsigned long long _bufferSize;
    unsigned long long _bufferLength;
    NSOutputStream *_output;
    NSInputStream *_input;
    NSError *_error;
    long long _length;
    long long _totalBytesWritten;
}

@property(readonly) long long length; // @synthesize length=_length;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)allOutput;
- (void)retryWrite:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (_Bool)writeToOutput;
- (_Bool)refillBuffer;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)setErrorFrom:(id)arg1;
- (_Bool)openNextInput;
- (id)streamForInput:(id)arg1;
- (void)close;
- (void)openForOutputTo:(id)arg1;
- (id)openForInputStream;
- (void)opened;
@property(readonly) _Bool isOpen;
- (_Bool)addFile:(id)arg1;
- (_Bool)addFileURL:(id)arg1;
- (void)addData:(id)arg1;
- (void)addStream:(id)arg1;
- (void)addStream:(id)arg1 length:(unsigned long long)arg2;
- (void)addInput:(id)arg1 length:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithBufferSize:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PendingRev : NSObject
{
    NSData *body;
    NSDictionary *attachments;
    NSArray *history;
    id sequenceID;
}

@property(retain) id sequenceID; // @synthesize sequenceID;
@property(retain) NSArray *history; // @synthesize history;
@property(retain) NSDictionary *attachments; // @synthesize attachments;
@property(retain) NSData *body; // @synthesize body;
- (void).cxx_destruct;

@end

@interface CBLMultipartUploader : CBLRemoteRequest
{
    CDUnknownBlockType _writer;
    CBLMultipartWriter *_currentWriter;
}

- (void).cxx_destruct;
- (void)didFailWithError:(id)arg1;
- (id)needNewBodyStream;
- (id)createTaskInURLSession:(id)arg1;
- (id)initWithURL:(id)arg1 multipartWriter:(CDUnknownBlockType)arg2 onCompletion:(CDUnknownBlockType)arg3;

@end

@interface CBLJSONMatcher : NSObject
{
}

- (id)end;
- (id)startDictionary;
- (id)startArray;
- (_Bool)matchValue:(id)arg1;

@end

@interface CBLJSONArrayMatcher : CBLJSONMatcher
{
}

@end

@interface CBLJSONDictMatcher : CBLJSONMatcher
{
    NSString *_key;
}

@property(retain) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (_Bool)matchValue:(id)arg1 forKey:(id)arg2;
- (_Bool)matchValue:(id)arg1;

@end

@interface CBLGenericArrayMatcher : CBLJSONArrayMatcher
{
    NSMutableArray *_array;
}

- (void).cxx_destruct;
- (id)end;
- (_Bool)matchValue:(id)arg1;
- (id)init;

@end

@interface CBLGenericDictMatcher : CBLJSONDictMatcher
{
    NSMutableDictionary *_dict;
}

- (void).cxx_destruct;
- (id)end;
- (_Bool)matchValue:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface CBLTemplateMatcher : CBLJSONDictMatcher
{
    id _template;
}

- (void).cxx_destruct;
- (id)startDictionary;
- (id)startArray;
- (id)nestedTemplate;
- (_Bool)matchValue:(id)arg1 forKey:(id)arg2;
- (id)initWithTemplate:(id)arg1;

@end

@interface CBLJSONReader : NSObject
{
    struct yajl_handle_t *_yajl;
    NSMutableArray *_stack;
    CBLJSONMatcher *_matcher;
}

- (void).cxx_destruct;
- (_Bool)endArrayOrMap:(_Bool)arg1;
- (_Bool)matchMapKey:(const char *)arg1 length:(unsigned long long)arg2;
- (_Bool)startMap;
- (_Bool)startArray;
- (id)matcher;
- (void)pop;
- (void)push:(id)arg1;
- (_Bool)finish;
- (_Bool)parseData:(id)arg1;
- (_Bool)parseBytes:(const void *)arg1 length:(unsigned long long)arg2;
@property(readonly) NSString *errorString;
- (void)dealloc;
- (id)initWithMatcher:(id)arg1;

@end

@interface CBLRemoteLogin : NSObject
{
    NSURL *_remoteURL;
    NSString *_localUUID;
    CBLRemoteSession *_remoteSession;
    id <CBLRemoteRequestDelegate> _requestDelegate;
    CDUnknownBlockType _continuation;
}

- (void).cxx_destruct;
- (void)finishedWithError:(id)arg1;
- (void)login;
- (void)checkSessionAtPath:(id)arg1;
- (void)start;
- (void)dealloc;
- (id)description;
- (id)initWithURL:(id)arg1 localUUID:(id)arg2 authorizer:(id)arg3 continuation:(CDUnknownBlockType)arg4;
- (id)initWithURL:(id)arg1 localUUID:(id)arg2 session:(id)arg3 requestDelegate:(id)arg4 continuation:(CDUnknownBlockType)arg5;

@end

@interface CBLReachability : NSObject
{
    NSString *_hostName;
    struct __SCNetworkReachability *_ref;
    struct __CFRunLoop *_runLoop;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned int _reachabilityFlags;
    _Bool _reachabilityKnown;
    _Bool _usingProxy;
    CDUnknownBlockType _onChange;
}

+ (id)keyPathsForValuesAffectingReachableByWiFi;
+ (id)keyPathsForValuesAffectingReachable;
+ (_Bool)usingProxyForURL:(id)arg1;
@property(nonatomic) unsigned int reachabilityFlags; // @synthesize reachabilityFlags=_reachabilityFlags;
@property(nonatomic) _Bool reachabilityKnown; // @synthesize reachabilityKnown=_reachabilityKnown;
@property(copy) CDUnknownBlockType onChange; // @synthesize onChange=_onChange;
@property(readonly, nonatomic) NSString *hostName; // @synthesize hostName=_hostName;
- (void).cxx_destruct;
- (void)flagsChanged:(unsigned int)arg1;
@property(readonly) _Bool reachableByWiFi;
@property(readonly) _Bool reachable;
- (id)description;
- (id)status;
- (void)dealloc;
- (void)stop;
- (_Bool)started;
- (_Bool)startOnQueue:(id)arg1;
- (_Bool)startOnRunLoop:(struct __CFRunLoop *)arg1;
- (id)initWithURL:(id)arg1;
- (id)init;
- (id)initWithReachabilityRef:(struct __SCNetworkReachability *)arg1;

@end

@interface CBLSequenceMap : NSObject
{
    NSMutableIndexSet *_sequences;
    unsigned long long _lastSequence;
    NSMutableArray *_values;
    unsigned long long _firstValueSequence;
}

- (void).cxx_destruct;
- (id)checkpointedValue;
- (long long)checkpointedSequence;
@property(readonly) _Bool isEmpty;
- (void)removeSequence:(long long)arg1;
- (long long)addValue:(id)arg1;
@property(readonly) unsigned long long count;
- (id)init;

@end

@interface CBLMultipartDocumentReader : NSObject <CBLMultipartReaderDelegate, NSStreamDelegate>
{
    CBLDatabase *_database;
    _Bool _attachments;
    int _status;
    CBLMultipartReader *_multipartReader;
    NSMutableData *_jsonBuffer;
    _Bool _jsonCompressed;
    CBL_BlobStoreWriter *_curAttachment;
    NSMutableDictionary *_attachmentsByName;
    NSMutableDictionary *_attachmentsByDigest;
    NSMutableDictionary *_document;
    CDUnknownBlockType _completionBlock;
    id _retainSelf;
}

+ (int)readStream:(id)arg1 headers:(id)arg2 toDatabase:(id)arg3 then:(CDUnknownBlockType)arg4;
+ (id)readData:(id)arg1 headers:(id)arg2 toDatabase:(id)arg3 status:(int *)arg4;
@property(readonly, nonatomic) NSDictionary *document; // @synthesize document=_document;
@property(readonly, nonatomic) int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (_Bool)registerAttachments;
- (_Bool)parseJSONBuffer;
- (_Bool)finishedPart;
- (_Bool)appendToPart:(id)arg1;
- (_Bool)startedPart:(id)arg1;
- (void)finishAsync:(id)arg1;
- (_Bool)readFromStream:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (int)readStream:(id)arg1 headers:(id)arg2 then:(CDUnknownBlockType)arg3;
- (_Bool)finish;
- (_Bool)appendData:(id)arg1;
- (void)startJSONBufferWithHeaders:(id)arg1;
- (_Bool)setHeaders:(id)arg1;
@property(readonly, nonatomic) unsigned long long attachmentCount;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBL_Attachment : NSObject
{
    unsigned long long length;
    unsigned long long encodedLength;
    int encoding;
    unsigned int revpos;
    struct CBLBlobKey _blobKey;
    NSString *_digest;
    NSData *_data;
    NSString *_name;
    NSString *_contentType;
    CBLDatabase *_database;
}

+ (_Bool)digest:(id)arg1 toBlobKey:(struct CBLBlobKey *)arg2;
@property __weak CBLDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURL *contentURL;
- (id)getContentStreamDecoded:(_Bool)arg1 andLength:(unsigned long long *)arg2;
@property(readonly, nonatomic) NSData *content;
@property(readonly, nonatomic) NSData *encodedContent;
@property(readonly, nonatomic) _Bool hasContent;
@property(readonly, nonatomic) NSString *encodingName;
@property(readonly) NSDictionary *asStubDictionary;
@property(readonly) _Bool isValid;
@property(readonly, nonatomic) NSString *digest;
@property struct CBLBlobKey blobKey;
@property(readonly) _Bool hasBlobKey;
@property unsigned long long possiblyEncodedLength;
- (id)initWithName:(id)arg1 info:(id)arg2 status:(int *)arg3;
- (id)initWithName:(id)arg1 contentType:(id)arg2;

@end

@interface CBLFTSMatch : NSObject
{
    unsigned long long term;
    struct _NSRange textRange;
}

- (long long)compare:(id)arg1;

@end

@interface CBLFullTextQueryRow : CBLQueryRow
{
    unsigned long long _fullTextID;
    NSString *_snippet;
    NSMutableArray *_matches;
    float _relevance;
}

@property float relevance; // @synthesize relevance=_relevance;
@property(copy) NSString *snippet; // @synthesize snippet=_snippet;
- (void).cxx_destruct;
- (id)snippetWithWordStart:(id)arg1 wordEnd:(id)arg2;
- (struct _NSRange)textRangeOfMatch:(unsigned long long)arg1;
- (unsigned long long)termIndexOfMatch:(unsigned long long)arg1;
@property(readonly) unsigned long long matchCount;
@property(readonly) NSString *fullText;
- (id)fullTextUTF8Data;
- (_Bool)containsAllTerms:(unsigned long long)arg1;
- (void)addTerm:(unsigned long long)arg1 atRange:(struct _NSRange)arg2;
- (id)initWithDocID:(id)arg1 sequence:(long long)arg2 fullTextID:(unsigned long long)arg3 value:(id)arg4;

@end

@interface CBLFacebookAuthorizer : CBLAuthorizer <CBLSessionCookieAuthorizer>
{
    NSString *_email;
}

+ (_Bool)registerToken:(id)arg1 forEmailAddress:(id)arg2 forSite:(id)arg3;
- (void).cxx_destruct;
- (id)loginRequest;
- (id)token;
- (id)initWithEmailAddress:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface CBLOAuth1Authorizer : CBLAuthorizer <CBLCustomHeadersAuthorizer>
{
    CBL_OAConsumer *_consumer;
    CBL_OAToken *_token;
    id <OASignatureProviding> _signatureProvider;
}

- (void).cxx_destruct;
- (_Bool)authorizeURLRequest:(id)arg1;
- (id)initWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 token:(id)arg3 tokenSecret:(id)arg4 signatureMethod:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface OAHMAC_SHA1SignatureProvider : NSObject <OASignatureProviding>
{
}

- (id)signClearText:(id)arg1 withSecret:(id)arg2;
- (id)name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLAuthorizer : NSObject <CBLAuthorizer>
{
    NSURL *_remoteURL;
    NSString *_localUUID;
}

@property(retain) NSString *localUUID; // @synthesize localUUID=_localUUID;
@property(retain) NSURL *remoteURL; // @synthesize remoteURL=_remoteURL;
- (void).cxx_destruct;
- (_Bool)removeStoredCredentials:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface CBLPasswordAuthorizer : CBLAuthorizer <CBLCredentialAuthorizer, CBLCustomHeadersAuthorizer>
{
    NSString *_basicAuthorization;
    NSURLCredential *_credential;
}

@property(readonly) NSURLCredential *credential; // @synthesize credential=_credential;
- (void).cxx_destruct;
- (_Bool)removeStoredCredentials:(id *)arg1;
- (_Bool)authorizeURLRequest:(id)arg1;
- (id)basicAuthorization;
@property(readonly) NSString *username;
@property(readonly, copy) NSString *description;
- (id)initWithURL:(id)arg1;
- (id)initWithUser:(id)arg1 password:(id)arg2;
- (id)initWithCredential:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;

@end

@interface CBL_AttachmentID : NSObject <NSCopying>
{
    NSString *_docID;
    NSString *_revID;
    NSString *_name;
    NSDictionary *_metadata;
}

@property(readonly, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *revID; // @synthesize revID=_revID;
@property(readonly, nonatomic) NSString *docID; // @synthesize docID=_docID;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDocID:(id)arg1 revID:(id)arg2 name:(id)arg3 metadata:(id)arg4;

@end

@interface CBL_AttachmentTask : NSObject
{
    CBL_BlobStoreWriter *_writer;
    CBLProgressGroup *_progress;
    CBL_AttachmentID *_ID;
}

@property(readonly, nonatomic) CBLProgressGroup *progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) CBL_AttachmentID *ID; // @synthesize ID=_ID;
- (void).cxx_destruct;
@property(retain, nonatomic) CBL_BlobStoreWriter *writer;
- (id)initWithID:(id)arg1 progress:(id)arg2;

@end

@interface CBLDocument : NSObject <CBLCacheable>
{
    CBLDatabase *_database;
    NSString *_docID;
    CBLSavedRevision *_currentRevision;
    _Bool _currentRevisionKnown;
    id <CBLDocumentModel> _modelObject;
}

@property __weak id <CBLDocumentModel> modelObject; // @synthesize modelObject=_modelObject;
@property(readonly) NSString *documentID; // @synthesize documentID=_docID;
@property(readonly) CBLDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (_Bool)putExistingRevisionWithProperties:(struct NSDictionary *)arg1 attachments:(id)arg2 revisionHistory:(id)arg3 fromURL:(id)arg4 error:(id *)arg5;
- (id)update:(CDUnknownBlockType)arg1 error:(id *)arg2;
- (id)putProperties:(id)arg1 error:(id *)arg2;
- (id)putProperties:(id)arg1 prevRevID:(id)arg2 allowConflict:(_Bool)arg3 error:(id *)arg4;
- (id)propertiesToInsert:(id)arg1 error:(id *)arg2;
@property(readonly, copy) NSDictionary *userProperties;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)propertyForKey:(id)arg1;
@property(readonly, copy) NSDictionary *properties;
- (id)getLeafRevisions:(id *)arg1;
- (id)getConflictingRevisions:(id *)arg1;
- (id)getLeafRevisions:(id *)arg1 includeDeleted:(_Bool)arg2;
- (id)getRevisionHistory:(id *)arg1;
- (void)loadCurrentRevisionFrom:(id)arg1;
- (void)revisionAdded:(id)arg1 notify:(_Bool)arg2;
- (id)newRevision;
- (id)revisionWithRevID:(id)arg1 withBody:(_Bool)arg2;
- (id)revisionWithID:(id)arg1;
- (id)revisionFromRev:(id)arg1;
@property(readonly, copy) NSString *currentRevisionID;
- (void)forgetCurrentRevision;
@property(readonly) CBLSavedRevision *currentRevision;
@property(retain) NSDate *expirationDate;
@property(readonly) _Bool isGone;
@property(readonly) _Bool isDeleted;
- (_Bool)purgeDocument:(id *)arg1;
- (_Bool)deleteDocument:(id *)arg1;
@property(readonly) NSString *cacheKey;
@property(readonly) NSString *abbreviatedID;
- (id)debugQuickLookObject;
@property(readonly, copy) NSString *description;
- (id)initWithDatabase:(id)arg1 documentID:(id)arg2 exists:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLCookieStorage : NSObject
{
    NSMutableArray *_cookies;
    CBLDatabase *_db;
    NSString *_storageKey;
    unsigned long long _cookieAcceptPolicy;
}

- (void).cxx_destruct;
- (void)notifyCookiesChanged;
- (id)cookiePropertiesFromJSONDocument:(id)arg1;
- (id)JSONDocumentFromCookieProperties:(id)arg1;
- (_Bool)isPathMatchedBetweenCookie:(id)arg1 andUrl:(id)arg2;
- (_Bool)isDomainMatchedBetweenCookie:(id)arg1 andUrl:(id)arg2;
- (_Bool)isSessionOnlyCookie:(id)arg1;
- (_Bool)isExpiredCookie:(id)arg1;
- (void)pruneExpiredCookies;
- (void)saveCookies;
- (_Bool)saveCookies:(id *)arg1;
- (void)loadCookieFromJSON:(id)arg1;
- (_Bool)loadCookies:(id *)arg1;
- (_Bool)migrateOldCookieStorage;
- (_Bool)deleteCookie:(id)arg1 outIndex:(unsigned long long *)arg2;
- (void)reset;
- (void)deleteCookiesForURL:(id)arg1;
- (void)deleteCookiesNamed:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (void)setCookie:(id)arg1;
- (id)sortedCookiesUsingDescriptors:(id)arg1;
- (id)cookiesForURL:(id)arg1;
@property(readonly, copy) NSArray *cookies;
@property unsigned long long cookieAcceptPolicy; // @synthesize cookieAcceptPolicy=_cookieAcceptPolicy;
- (void)setup;
- (id)initWithDB:(id)arg1;
- (void)setCookieFromResponse:(id)arg1;
- (void)addCookieHeaderToRequest:(id)arg1;

@end

@interface CBLRevision : NSObject
{
    CBLDocument *_document;
}

@property(readonly) __weak CBLDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
@property(readonly) NSArray *attachments;
- (id)attachmentNamed:(id)arg1;
@property(readonly) NSArray *attachmentNames;
- (id)attachmentMetadataFor:(id)arg1;
@property(readonly) NSDictionary *attachmentMetadata;
- (id)debugQuickLookObject;
- (id)description;
@property(readonly) _Bool isGone;
@property(readonly) _Bool isDeletion;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)propertyForKey:(id)arg1;
@property(readonly, copy) NSDictionary *userProperties;
@property(readonly) long long sequence;
@property(readonly) NSDictionary *properties;
- (id)getRevisionHistory:(id *)arg1;
@property(readonly) CBLSavedRevision *parentRevision;
@property(readonly) NSString *parentRevisionID;
@property(readonly) NSString *revisionID;
@property(readonly) CBLDatabase *database;
- (id)initWithDocument:(id)arg1;

@end

@interface CBLSavedRevision : CBLRevision
{
    CBL_Revision *_rev;
    _Bool _checkedProperties;
    NSString *_parentRevID;
}

@property(readonly) CBL_Revision *rev; // @synthesize rev=_rev;
- (void).cxx_destruct;
- (id)deleteDocument:(id *)arg1;
- (id)createRevisionWithProperties:(id)arg1 error:(id *)arg2;
- (id)createRevision;
- (id)getRevisionHistoryBackToRevisionIDs:(id)arg1 error:(id *)arg2;
- (id)getRevisionHistory:(id *)arg1;
@property(readonly) NSData *JSONData;
@property(readonly) _Bool propertiesAreLoaded;
- (id)properties;
- (long long)sequence;
- (_Bool)loadProperties;
- (id)parentRevision;
- (id)parentRevisionID;
@property(readonly) _Bool propertiesAvailable;
- (_Bool)isDeletion;
- (id)revisionID;
- (_Bool)isEqual:(id)arg1;
- (id)debugQuickLookObject;
- (id)initForValidationWithDatabase:(id)arg1 revision:(id)arg2 parentRevisionID:(id)arg3;
- (id)initWithDatabase:(id)arg1 revision:(id)arg2;
- (id)initWithDocument:(id)arg1 revision:(id)arg2;

@end

@interface CBLUnsavedRevision : CBLRevision
{
    NSString *_parentRevID;
    NSMutableDictionary *_properties;
}

- (id)parentRevisionID;
- (void).cxx_destruct;
- (void)removeAttachmentNamed:(id)arg1;
- (void)_addAttachment:(id)arg1 named:(id)arg2;
- (void)setAttachmentNamed:(id)arg1 withContentType:(id)arg2 contentURL:(id)arg3;
- (void)setAttachmentNamed:(id)arg1 withContentType:(id)arg2 content:(id)arg3;
- (id)saveAllowingConflict:(id *)arg1;
- (id)save:(id *)arg1;
@property _Bool isDeletion; // @dynamic isDeletion;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
@property(copy) NSDictionary *userProperties; // @dynamic userProperties;
- (id)getRevisionHistory:(id *)arg1;
@property(copy) NSMutableDictionary *properties;
- (id)parentRevision;
- (id)initWithDocument:(id)arg1 parent:(id)arg2;

@end

@interface CBLQueryEnumerator : NSEnumerator <NSCopying>
{
    CBLDatabase *_database;
    CBLView *_view;
    NSArray *_rows;
    unsigned long long _nextRowIndex;
    unsigned long long _sequenceNumber;
    _Bool _generating;
    id _enumerationBuffer[16];
}

+ (id)asNSSortDescriptor:(id)arg1;
@property(readonly) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
- (void).cxx_destruct;
- (void)clearEnumBuffer;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)reset;
- (id)rowAtIndex:(unsigned long long)arg1;
@property(readonly) unsigned long long count;
- (id)allObjects;
- (id)generateNextRow;
- (id)nextObject;
- (id)nextRow;
- (void)sortUsingDescriptors:(id)arg1 skip:(unsigned long long)arg2 limit:(unsigned long long)arg3;
- (void)sortUsingDescriptors:(id)arg1;
@property(readonly) _Bool stale;
- (_Bool)isEqual:(id)arg1;
- (void)setDatabase:(id)arg1 view:(id)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDatabase:(id)arg1 view:(id)arg2 sequenceNumber:(long long)arg3 rows:(id)arg4;
- (id)initWithSequenceNumber:(long long)arg1 rows:(id)arg2;

@end

@interface CBLDatabase : NSObject <CBL_StorageDelegate>
{
    NSString *_dir;
    NSString *_name;
    CBLManager *_manager;
    id <CBL_Storage> _storage;
    _Bool _readOnly;
    _Bool _isOpen;
    NSThread *_thread;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableDictionary *_views;
    CBL_BlobStore *_attachments;
    NSMutableDictionary *_pendingAttachmentsByDigest;
    NSMutableArray *_activeReplicators;
    NSMutableArray *_changesToNotify;
    _Bool _postingChangeNotifications;
    NSDate *_startTime;
    CBLModelFactory *_modelFactory;
    NSMutableSet *_unsavedModelsMutable;
    CBLCookieStorage *_cookieStorage;
    CBLCache *_docCache;
    NSMutableSet *_allReplications;
}

+ (id)filterCompiler;
+ (void)setFilterCompiler:(id)arg1;
+ (id)parseCouchDBRevisionHistory:(id)arg1;
+ (id)generateDocumentID;
+ (_Bool)isValidDocumentID:(id)arg1;
+ (id)blobKeyToDigest:(struct CBLBlobKey)arg1;
+ (void)setAutoCompact:(_Bool)arg1;
+ (_Bool)deleteDatabaseFilesAtPath:(id)arg1 error:(id *)arg2;
+ (void)initialize;
@property(readonly, nonatomic) _Bool isOpen; // @synthesize isOpen=_isOpen;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *dir; // @synthesize dir=_dir;
@property(readonly, nonatomic) NSMutableSet *unsavedModelsMutable; // @synthesize unsavedModelsMutable=_unsavedModelsMutable;
@property(readonly) CBLManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (id)existingReplicationWithURL:(id)arg1 pull:(_Bool)arg2;
- (id)createPullReplication:(id)arg1;
- (id)createPushReplication:(id)arg1;
- (void)forgetReplication:(id)arg1;
- (void)addReplication:(id)arg1;
- (id)allReplications;
- (CDUnknownBlockType)filterNamed:(id)arg1;
- (void)setFilterNamed:(id)arg1 asBlock:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)validationNamed:(id)arg1;
- (void)setValidationNamed:(id)arg1 asBlock:(CDUnknownBlockType)arg2;
- (id)slowQueryWithMap:(CDUnknownBlockType)arg1;
- (id)viewNamed:(id)arg1;
- (id)existingViewNamed:(id)arg1;
- (id)registerView:(id)arg1;
- (_Bool)deleteLocalDocumentWithID:(id)arg1 error:(id *)arg2;
- (_Bool)putLocalDocument:(id)arg1 withID:(id)arg2 error:(id *)arg3;
- (id)existingLocalDocumentWithID:(id)arg1;
- (id)createAllDocumentsQuery;
- (void)removeDocumentFromCache:(id)arg1;
- (void)_pruneDocumentCache;
- (void)_clearDocumentCache;
- (id)_cachedDocumentWithID:(id)arg1;
- (id)createDocument;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)existingDocumentWithID:(id)arg1;
- (id)documentWithID:(id)arg1;
- (id)documentWithID:(id)arg1 mustExist:(_Bool)arg2 isNew:(_Bool)arg3;
- (_Bool)changeEncryptionKey:(id)arg1 error:(id *)arg2;
- (_Bool)replaceUUIDs:(id *)arg1;
@property unsigned long long maxRevTreeDepth;
- (_Bool)compact:(id *)arg1;
- (_Bool)deleteDatabase:(id *)arg1;
- (_Bool)close:(id *)arg1;
- (_Bool)inTransaction:(CDUnknownBlockType)arg1;
- (_Bool)waitFor:(CDUnknownBlockType)arg1;
- (void)doAsyncAfterDelay:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)doSync:(CDUnknownBlockType)arg1;
- (void)doAsync:(CDUnknownBlockType)arg1;
@property(readonly) NSURL *internalURL;
- (void)appBackgrounding:(id)arg1;
- (void)postPublicChangeNotification:(id)arg1;
@property(readonly) long long lastSequenceNumber;
@property(readonly) unsigned long long documentCount;
- (void)dealloc;
- (id)initWithDir:(id)arg1 name:(id)arg2 manager:(id)arg3 readOnly:(_Bool)arg4;
- (id)queryViewNamed:(id)arg1 options:(id)arg2 ifChangedSince:(long long)arg3 status:(int *)arg4;
- (int)validateRevision:(id)arg1 previousRevision:(id)arg2 parentRevID:(id)arg3 source:(id)arg4 error:(id *)arg5;
- (_Bool)forceInsertRevisionWithJSON:(id)arg1 revisionHistory:(id)arg2 source:(id)arg3 error:(id *)arg4;
- (int)forceInsert:(id)arg1 revisionHistory:(id)arg2 source:(id)arg3 error:(id *)arg4;
- (id)putDocID:(id)arg1 properties:(id)arg2 prevRevisionID:(id)arg3 allowConflict:(_Bool)arg4 source:(id)arg5 status:(int *)arg6 error:(id *)arg7;
- (_Bool)autosaveAllModels:(id *)arg1;
- (_Bool)saveAllModels:(id *)arg1;
@property(readonly) NSArray *unsavedModels;
@property(retain) CBLModelFactory *modelFactory;
- (_Bool)garbageCollectAttachments:(id *)arg1;
- (id)findAttachment:(id)arg1 revpos:(unsigned int)arg2 docID:(id)arg3 ancestry:(id)arg4;
- (_Bool)processAttachmentsForRevision:(id)arg1 ancestry:(id)arg2 status:(int *)arg3;
- (_Bool)expandAttachmentsIn:(id)arg1 minRevPos:(int)arg2 allowFollows:(_Bool)arg3 decode:(_Bool)arg4 status:(int *)arg5;
- (_Bool)registerAttachmentBodies:(id)arg1 forRevision:(id)arg2 error:(id *)arg3;
- (id)contentStreamOfAttachmentWithDigest:(id)arg1;
- (id)contentOfAttachmentWithDigest:(id)arg1;
- (unsigned long long)lengthOfAttachmentWithDigest:(id)arg1;
- (_Bool)hasAttachmentWithDigest:(id)arg1;
- (id)pathForPendingAttachmentWithDict:(id)arg1;
- (id)attachmentForDict:(id)arg1 named:(id)arg2 status:(int *)arg3;
- (id)attachmentsForDocID:(id)arg1 revID:(id)arg2 status:(int *)arg3;
- (int)installAttachment:(id)arg1;
- (void)rememberAttachmentWriter:(id)arg1 forDigest:(id)arg2;
- (void)rememberPendingKey:(struct CBLBlobKey)arg1 forDigest:(id)arg2;
- (void)rememberAttachmentWritersForDigests:(id)arg1;
- (void)rememberAttachmentWriter:(id)arg1;
- (id)attachmentWriter;
@property(readonly) NSString *attachmentStorePath;
- (id)unpushedRevisionsSince:(id)arg1 filter:(CDUnknownBlockType)arg2 params:(id)arg3 error:(id *)arg4;
- (id)lastSequenceForReplicator:(id)arg1;
- (id)getLocalCheckpointDocumentPropertyValueForKey:(id)arg1;
- (id)getLocalCheckpointDocument;
- (_Bool)removeLocalCheckpointDocumentWithKey:(id)arg1 outError:(id *)arg2;
- (_Bool)putLocalCheckpointDocumentWithKey:(id)arg1 value:(id)arg2 outError:(id *)arg3;
- (_Bool)saveLocalUUIDInLocalCheckpointDocument:(id *)arg1;
- (_Bool)setLastSequence:(id)arg1 withCheckpointID:(id)arg2;
- (id)lastSequenceWithCheckpointID:(id)arg1;
- (void)replicatorDidStop:(id)arg1;
- (void)stopAndForgetReplicator:(id)arg1;
- (id)activeReplicatorLike:(id)arg1;
- (void)addActiveReplicator:(id)arg1;
@property(readonly) NSArray *activeReplicators;
@property(readonly, nonatomic) CBLCookieStorage *cookieStorage;
- (void)postNotification:(id)arg1;
- (id)getAllDocs:(id)arg1 status:(int *)arg2;
- (id)makeAnonymousView;
- (void)forgetViewNamed:(id)arg1;
@property(readonly) NSArray *allViews;
- (_Bool)runFilter:(CDUnknownBlockType)arg1 params:(id)arg2 onRevision:(id)arg3;
- (CDUnknownBlockType)loadFilterNamed:(id)arg1 status:(int *)arg2;
- (id)getRevisionHistory:(id)arg1 backToRevIDs:(id)arg2;
- (id)getPossibleAncestorsOfDocID:(id)arg1 revID:(id)arg2 limit:(unsigned long long)arg3;
- (id)changesSinceSequence:(long long)arg1 options:(const struct CBLChangesOptions *)arg2 filter:(CDUnknownBlockType)arg3 params:(id)arg4 status:(int *)arg5;
- (long long)getRevisionSequence:(id)arg1;
- (id)revisionByLoadingBody:(id)arg1 status:(int *)arg2;
- (int)loadRevisionBody:(id)arg1;
- (id)getDocumentWithID:(id)arg1 revisionID:(id)arg2 withBody:(_Bool)arg3 status:(int *)arg4;
- (void)lowMemory:(id)arg1;
- (void)dbChanged:(id)arg1;
- (void)storageExitedTransaction:(_Bool)arg1;
- (_Bool)postChangeNotifications;
- (void)notifyChanges:(id)arg1;
- (void)databaseStorageChanged:(id)arg1;
- (void)purgeExpiredDocuments;
- (void)scheduleDocumentExpiration:(double)arg1;
- (void)setExpirationDate:(id)arg1 ofDocument:(id)arg2;
@property(readonly, nonatomic) NSString *publicUUID;
@property(readonly, nonatomic) NSString *privateUUID;
@property(readonly, nonatomic) unsigned long long totalDataSize;
- (void)_close;
- (_Bool)openWithOptions:(id)arg1 error:(id *)arg2;
- (_Bool)open:(id *)arg1;
@property(readonly, nonatomic) NSString *fileProtection;
@property(readonly, nonatomic) _Bool exists;
@property(readonly, copy) NSString *description;
- (id)_initWithDir:(id)arg1 name:(id)arg2 manager:(id)arg3 readOnly:(_Bool)arg4;
@property(readonly, nonatomic) CBL_Shared *shared;
@property(readonly, nonatomic) NSDate *startTime;
@property(readonly, nonatomic) CBL_BlobStore *attachmentStore;
@property(readonly, nonatomic) id <CBL_Storage> storage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLCache : NSObject
{
    NSMapTable *_map;
    NSMutableArray *_recents;
    unsigned long long _retainLimit;
}

- (void).cxx_destruct;
- (void)forgetAllResources;
- (void)unretainResources;
- (void)forgetResource:(id)arg1;
- (id)resourceWithCacheKeyDontRecache:(id)arg1;
- (id)resourceWithCacheKey:(id)arg1;
- (void)addResource:(id)arg1;
- (id)initWithRetainLimit:(unsigned long long)arg1;
- (id)init;

@end

@interface CBLQuery : NSObject
{
    NSString *_fullTextQuery;
    _Bool _fullTextSnippets;
    _Bool _fullTextRanking;
    struct CBLGeoRect _boundingBox;
    _Bool _isGeoQuery;
    CBLDatabase *_database;
    _Bool _temporaryView;
    unsigned long long _limit;
    unsigned long long _skip;
    id _startKey;
    id _endKey;
    NSString *_startKeyDocID;
    NSString *_endKeyDocID;
    unsigned int _indexUpdateMode;
    _Bool _descending;
    _Bool _inclusiveStart;
    _Bool _inclusiveEnd;
    _Bool _prefetch;
    _Bool _mapOnly;
    unsigned int _allDocsMode;
    NSArray *_keys;
    unsigned long long _prefixMatchLevel;
    unsigned long long _groupLevel;
    CBLView *_view;
    NSArray *_sortDescriptors;
    NSPredicate *_postFilter;
    CDUnknownBlockType _filterBlock;
}

@property(readonly) CBLView *view; // @synthesize view=_view;
@property unsigned long long prefixMatchLevel; // @synthesize prefixMatchLevel=_prefixMatchLevel;
@property(copy, nonatomic) CDUnknownBlockType filterBlock; // @synthesize filterBlock=_filterBlock;
@property(retain) NSPredicate *postFilter; // @synthesize postFilter=_postFilter;
@property _Bool inclusiveEnd; // @synthesize inclusiveEnd=_inclusiveEnd;
@property _Bool inclusiveStart; // @synthesize inclusiveStart=_inclusiveStart;
@property(copy) NSArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property unsigned int allDocsMode; // @synthesize allDocsMode=_allDocsMode;
@property(readonly) CBLDatabase *database; // @synthesize database=_database;
@property _Bool mapOnly; // @synthesize mapOnly=_mapOnly;
@property unsigned int indexUpdateMode; // @synthesize indexUpdateMode=_indexUpdateMode;
@property(copy) NSString *endKeyDocID; // @synthesize endKeyDocID=_endKeyDocID;
@property(copy) NSString *startKeyDocID; // @synthesize startKeyDocID=_startKeyDocID;
@property unsigned long long groupLevel; // @synthesize groupLevel=_groupLevel;
@property(copy) NSArray *keys; // @synthesize keys=_keys;
@property _Bool prefetch; // @synthesize prefetch=_prefetch;
@property(copy) id endKey; // @synthesize endKey=_endKey;
@property(copy) id startKey; // @synthesize startKey=_startKey;
@property _Bool descending; // @synthesize descending=_descending;
@property unsigned long long skip; // @synthesize skip=_skip;
@property unsigned long long limit; // @synthesize limit=_limit;
- (void).cxx_destruct;
- (void)runAsyncIfChangedSince:(long long)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)runAsync:(CDUnknownBlockType)arg1;
- (id)run:(id *)arg1;
- (id)queryOptions;
@property(readonly) _Bool isAggregate;
- (id)asLiveQuery;
- (id)description;
- (void)dealloc;
- (id)initWithQuery:(id)arg1;
- (id)initWithDatabase:(id)arg1 mapBlock:(CDUnknownBlockType)arg2;
- (id)initWithDatabase:(id)arg1 view:(id)arg2;
@property _Bool fullTextRanking;
@property _Bool fullTextSnippets;
@property(copy) NSString *fullTextQuery;
@property struct CBLGeoRect boundingBox;

@end

@interface CBLLiveQuery : CBLQuery
{
    _Bool _observing;
    _Bool _willUpdate;
    _Bool _updateAgain;
    long long _lastSequence;
    long long _isUpdatingAtSequence;
    double _lastUpdatedAt;
    CBLQueryEnumerator *_rows;
    NSError *_lastError;
    double _updateInterval;
}

@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
@property(readonly) NSError *lastError; // @synthesize lastError=_lastError;
- (void).cxx_destruct;
- (void)queryOptionsChanged;
- (_Bool)waitForRows;
- (void)update;
- (void)viewChanged:(id)arg1;
- (void)databaseChanged:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)setRows:(id)arg1;
@property(readonly) CBLQueryEnumerator *rows;
- (id)run:(id *)arg1;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 view:(id)arg2;

@end

@interface CBLUITableSource : NSObject <UITableViewDataSource, UIDataSourceModelAssociation>
{
    UITableView *_tableView;
    CBLLiveQuery *_query;
    NSMutableArray *_rows;
    NSString *_labelProperty;
    _Bool _deletionAllowed;
    long long _rowInsertAnimation;
    long long _rowDeleteAnimation;
    long long _rowReplaceAnimation;
}

@property(nonatomic) _Bool deletionAllowed; // @synthesize deletionAllowed=_deletionAllowed;
@property(copy) NSString *labelProperty; // @synthesize labelProperty=_labelProperty;
@property(nonatomic) long long rowReplaceAnimation; // @synthesize rowReplaceAnimation=_rowReplaceAnimation;
@property(nonatomic) long long rowDeleteAnimation; // @synthesize rowDeleteAnimation=_rowDeleteAnimation;
@property(nonatomic) long long rowInsertAnimation; // @synthesize rowInsertAnimation=_rowInsertAnimation;
@property(readonly, nonatomic) NSArray *rows; // @synthesize rows=_rows;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (id)indexPathForElementWithModelIdentifier:(id)arg1 inView:(id)arg2;
- (id)modelIdentifierForElementAtIndexPath:(id)arg1 inView:(id)arg2;
- (_Bool)deleteDocuments:(id)arg1 error:(id *)arg2;
- (_Bool)deleteDocumentsAtIndexes:(id)arg1 error:(id *)arg2;
- (_Bool)deleteDocuments:(id)arg1 atIndexes:(id)arg2 error:(id *)arg3;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)labelForRow:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)reloadFromQuery;
@property(retain) CBLLiveQuery *query;
- (id)documentAtIndexPath:(id)arg1;
- (id)rowAtIndexPath:(id)arg1;
- (id)indexPathForDocument:(id)arg1;
- (id)rowAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLRemoteSession : NSObject <NSURLSessionDataDelegate>
{
    NSURL *_baseURL;
    NSURLSession *_session;
    NSRunLoop *_runLoop;
    NSThread *_thread;
    id <CBLRemoteRequestDelegate> _requestDelegate;
    NSMutableDictionary *_requestIDs;
    NSMutableSet *_allRequests;
    CBLCookieStorage *_cookieStorage;
    id <CBLAuthorizer> _authorizer;
}

+ (id)defaultConfiguration;
@property(readonly) id <CBLAuthorizer> authorizer; // @synthesize authorizer=_authorizer;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)requestForTask:(id)arg1 do:(CDUnknownBlockType)arg2;
- (void)forgetTask:(id)arg1;
- (void)doAsync:(CDUnknownBlockType)arg1;
- (void)stopActiveRequests;
@property(readonly) NSArray *activeRequests;
- (id)startRequest:(id)arg1 path:(id)arg2 body:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)startRequest:(id)arg1;
- (void)close;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)initWithConfiguration:(id)arg1 baseURL:(id)arg2 delegate:(id)arg3 authorizer:(id)arg4 cookieStorage:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLRevInfoMatcher : CBLJSONDictMatcher
{
    NSMutableArray *_revIDs;
}

- (void).cxx_destruct;
- (_Bool)matchValue:(id)arg1 forKey:(id)arg2;
- (id)initWithArray:(id)arg1;

@end

@interface CBLChangeMatcher : CBLJSONDictMatcher
{
    id _sequence;
    NSString *_docID;
    NSMutableArray *_revs;
    _Bool _deleted;
    CBLTemplateMatcher *_revsMatcher;
    CDUnknownBlockType _client;
}

+ (id)changesFeedMatcherWithClient:(CDUnknownBlockType)arg1 expectWrapperDict:(_Bool)arg2;
- (void).cxx_destruct;
- (id)end;
- (id)startArray;
- (_Bool)matchValue:(id)arg1 forKey:(id)arg2;
- (id)initWithClient:(CDUnknownBlockType)arg1;

@end

@interface CBLDatabaseOptions : NSObject
{
    _Bool create;
    _Bool readOnly;
    NSString *storageType;
    id encryptionKey;
}

@property(retain, nonatomic) id encryptionKey; // @synthesize encryptionKey;
@property(copy, nonatomic) NSString *storageType; // @synthesize storageType;
@property(nonatomic) _Bool readOnly; // @synthesize readOnly;
@property(nonatomic) _Bool create; // @synthesize create;
- (void).cxx_destruct;

@end

@interface CBLManager : NSObject <NSCopying>
{
    NSString *_dir;
    struct CBLManagerOptions _options;
    NSThread *_thread;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableDictionary *_databases;
    NSURL *_internalURL;
    Class _replicatorClass;
    NSMutableArray *_replications;
    CBL_Shared *_shared;
    id _strongShared;
    NSMutableDictionary *_customHTTPHeaders;
    NSString *_storageType;
    NSString *_replicatorClassName;
    unsigned long long _defaultMaxRevTreeDepth;
}

+ (_Bool)isValidDatabaseName:(id)arg1;
+ (id)sharedInstance;
+ (id)defaultDirectory;
+ (void)setWarningsRaiseExceptions:(_Bool)arg1;
+ (void)redirectLogging:(CDUnknownBlockType)arg1;
+ (void)enableLogging:(id)arg1;
+ (void)initialize;
@property unsigned long long defaultMaxRevTreeDepth; // @synthesize defaultMaxRevTreeDepth=_defaultMaxRevTreeDepth;
@property(copy, nonatomic) NSString *replicatorClassName; // @synthesize replicatorClassName=_replicatorClassName;
@property(copy, nonatomic) NSString *storageType; // @synthesize storageType=_storageType;
@property(retain, nonatomic) NSMutableDictionary *customHTTPHeaders; // @synthesize customHTTPHeaders=_customHTTPHeaders;
@property(readonly) NSString *directory; // @synthesize directory=_dir;
@property(retain) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void).cxx_destruct;
- (id)replicatorSettingsWithProperties:(id)arg1 toDatabase:(id *)arg2 status:(int *)arg3;
- (id)replicatorWithProperties:(id)arg1 status:(int *)arg2;
@property(readonly) Class replicatorClass;
- (int)validateReplicatorProperties:(id)arg1;
- (int)parseReplicatorProperties:(id)arg1 toDatabase:(id *)arg2 remote:(id *)arg3 isPush:(_Bool *)arg4 createTarget:(_Bool *)arg5 headers:(id *)arg6 authorizer:(id *)arg7;
- (_Bool)_closeDatabaseNamed:(id)arg1 error:(id *)arg2;
- (void)_forgetDatabase:(id)arg1;
- (id)_databaseNamed:(id)arg1 mustExist:(_Bool)arg2 error:(id *)arg3;
- (id)pathForV1DatabaseNamed:(id)arg1;
- (id)pathForDatabaseNamed:(id)arg1;
- (id)nameOfDatabaseAtPath:(id)arg1;
- (_Bool)replaceDatabaseNamed:(id)arg1 withDatabaseDir:(id)arg2 error:(id *)arg3;
- (_Bool)replaceDatabaseNamed:(id)arg1 withDatabaseFile:(id)arg2 withAttachments:(id)arg3 error:(id *)arg4;
- (_Bool)registerEncryptionKey:(id)arg1 forDatabaseNamed:(id)arg2;
- (id)defaultOptionsForDatabaseNamed:(id)arg1;
- (id)openDatabaseNamed:(id)arg1 withOptions:(id)arg2 error:(id *)arg3;
- (id)databaseNamed:(id)arg1 error:(id *)arg2;
- (id)existingDatabaseNamed:(id)arg1 error:(id *)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (_Bool)databaseExistsNamed:(id)arg1;
@property(readonly) NSArray *allOpenDatabases;
@property(readonly) NSArray *allDatabaseNames;
@property(readonly) NSURL *internalURL;
- (void)backgroundTellDatabaseNamed:(id)arg1 to:(CDUnknownBlockType)arg2;
@property(readonly) CBL_Server *backgroundServer;
@property(readonly) CBL_Shared *shared;
- (void)doAsync:(CDUnknownBlockType)arg1;
@property _Bool excludedFromBackup;
- (id)description;
- (_Bool)upgradeV1DatabaseNamed:(id)arg1 atPath:(id)arg2 error:(id *)arg3;
- (_Bool)upgradeDatabaseNamed:(id)arg1 atPath:(id)arg2 andClose:(_Bool)arg3 error:(id *)arg4;
- (void)upgradeOldDatabaseFiles;
- (Class)databaseUpgradeClass;
- (void)dealloc;
- (void)close;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDirectory:(id)arg1 options:(const struct CBLManagerOptions *)arg2 shared:(id)arg3;
- (id)initWithDirectory:(id)arg1 options:(const struct CBLManagerOptions *)arg2 error:(id *)arg3;
- (id)init;

@end

@interface CBLModel : CBLDynamicObject <CBLDocumentModel>
{
    CBLDocument *_document;
    double _changedTime;
    unsigned int _autosaves:1;
    unsigned int _isNew:1;
    unsigned int _needsSave:1;
    unsigned int _saving:1;
    NSMutableDictionary *_properties;
    NSMutableSet *_changedNames;
    NSMutableDictionary *_changedAttachments;
}

+ (id)inverseRelationForArrayProperty:(id)arg1;
+ (Class)itemClassForArrayProperty:(id)arg1;
+ (id)propertyNames;
+ (_Bool)saveModels:(id)arg1 error:(id *)arg2;
+ (id)modelForDocument:(id)arg1;
+ (id)modelForNewDocumentInDatabase:(id)arg1;
+ (CDUnknownFunctionPointerType)impForSetterOfProperty:(id)arg1 ofClass:(Class)arg2;
+ (CDUnknownFunctionPointerType)impForGetterOfProperty:(id)arg1 ofClass:(Class)arg2;
+ (_Bool)hasRelation:(id)arg1;
@property(nonatomic) _Bool autosaves; // @synthesize autosaves=_autosaves;
@property(readonly) _Bool isNew; // @synthesize isNew=_isNew;
- (void).cxx_destruct;
- (id)attachmentDataToSave;
- (void)removeAttachmentNamed:(id)arg1;
- (void)_addAttachment:(id)arg1 named:(id)arg2;
- (void)setAttachmentNamed:(id)arg1 withContentType:(id)arg2 contentURL:(id)arg3;
- (void)setAttachmentNamed:(id)arg1 withContentType:(id)arg2 content:(id)arg3;
- (id)attachmentNamed:(id)arg1;
@property(readonly) NSArray *attachmentNames;
- (id)findInverseOfRelation:(id)arg1 fromClass:(Class)arg2;
- (id)modelWithDocID:(id)arg1 forProperty:(id)arg2 ofClass:(Class)arg3;
- (id)databaseForModelProperty:(id)arg1;
- (_Bool)setValue:(id)arg1 ofProperty:(id)arg2;
- (id)getValueOfProperty:(id)arg1 ofClass:(Class)arg2;
- (id)getValueOfProperty:(id)arg1;
- (void)markPropertyNeedsSave:(id)arg1;
- (void)cacheValue:(id)arg1 ofProperty:(id)arg2 changed:(_Bool)arg3;
- (id)propertiesToSave;
- (id)externalizePropertyValue:(id)arg1;
@property(readonly) NSDictionary *currentProperties;
- (_Bool)save:(id *)arg1;
- (_Bool)justSave:(id *)arg1;
- (void)didSave;
- (void)willSave:(id)arg1;
@property _Bool needsSave;
- (void)markNeedsSave;
- (void)scheduleAutosave;
@property(readonly) double autosaveDelay;
- (void)revertChanges;
- (void)markExternallyChanged;
@property(readonly) double timeSinceExternallyChanged;
- (void)document:(id)arg1 didChange:(id)arg2;
- (void)didLoadFromDocument;
- (void)awakeFromInitializer;
- (id)propertiesToSaveForDeletion;
- (_Bool)deleteDocument:(id *)arg1;
@property(retain) CBLDatabase *database;
- (id)idForNewDocumentInDatabase:(id)arg1;
@property(retain) CBLDocument *document;
- (id)debugQuickLookObject;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithDocument:(id)arg1 orDatabase:(id)arg2;
- (void)setArray:(id)arg1 forProperty:(id)arg2 ofModelClass:(Class)arg3;
- (id)getArrayRelationProperty:(id)arg1 withModelClass:(Class)arg2;
- (void)setModel:(id)arg1 forProperty:(id)arg2;
- (id)getModelProperty:(id)arg1;
- (id)getProperty:(id)arg1 withConverter:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface CBLModelFactory : NSObject
{
    NSMutableDictionary *_typeDict;
    NSMutableDictionary *_queryBuilders;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)queryBuilderForClass:(Class)arg1 property:(id)arg2;
- (void)setQueryBuilder:(id)arg1 forClass:(Class)arg2 property:(id)arg3;
- (id)modelForDocument:(id)arg1;
- (Class)classForDocument:(id)arg1;
- (id)documentTypeForClass:(Class)arg1;
- (id)documentTypesForClass:(Class)arg1;
- (Class)classForDocumentType:(id)arg1;
- (void)registerClass:(id)arg1 forDocumentType:(id)arg2;
- (id)init;

@end

@interface CBLAttachment : NSObject
{
    CBLRevision *_rev;
    NSString *_name;
    NSDictionary *_metadata;
    id _body;
}

@property(readonly) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(copy) NSString *name; // @synthesize name=_name;
@property(retain) CBLRevision *revision; // @synthesize revision=_rev;
- (void).cxx_destruct;
- (_Bool)saveToDatabase:(id)arg1 error:(id *)arg2;
- (_Bool)purge;
- (id)openContentStream;
@property(readonly) NSURL *contentURL;
- (id)getContent:(id *)arg1;
@property(readonly) NSData *content;
@property(readonly) _Bool contentAvailable;
- (id)bodyIfNew;
- (id)_internalAttachment;
@property(readonly) unsigned long long encodedLength;
@property(readonly) unsigned long long length;
@property(readonly) NSString *contentType;
@property(readonly) CBLDocument *document;
- (id)description;
- (id)_initWithContentType:(id)arg1 body:(id)arg2;
- (id)initWithRevision:(id)arg1 name:(id)arg2 metadata:(id)arg3;

@end

@interface CBLReplication : NSObject
{
    CDUnknownBlockType _propertiesTransformationBlock;
    _Bool _started;
    long long _lastSequencePushed;
    NSSet *_pendingDocIDs;
    long long _pendingDocIDsSequence;
    id <CBL_Replicator> _bg_replicator;
    NSMutableArray *_bg_pendingActions;
    NSConditionLock *_bg_stopLock;
    _Bool _createTarget;
    _Bool _continuous;
    _Bool _pull;
    _Bool _running;
    _Bool _downloadsAttachments;
    unsigned int _completedChangesCount;
    unsigned int _changesCount;
    unsigned int _status;
    CBLDatabase *_database;
    NSString *_filter;
    struct NSDictionary *_filterParams;
    NSArray *_documentIDs;
    NSString *_network;
    NSURL *_remoteURL;
    NSDictionary *_headers;
    struct NSDictionary *_OAuth;
    struct NSDictionary *_customProperties;
    NSError *_lastError;
    id <CBLAuthenticator> _authenticator;
    struct __SecCertificate *_serverCertificate;
    NSString *_username;
}

+ (void)setAnchorCerts:(id)arg1 onlyThese:(_Bool)arg2;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) _Bool downloadsAttachments; // @synthesize downloadsAttachments=_downloadsAttachments;
@property(readonly) struct __SecCertificate *serverCertificate; // @synthesize serverCertificate=_serverCertificate;
@property(retain, nonatomic) id <CBLAuthenticator> authenticator; // @synthesize authenticator=_authenticator;
@property(nonatomic) unsigned int status; // @synthesize status=_status;
@property(retain, nonatomic) NSError *lastError; // @synthesize lastError=_lastError;
@property(nonatomic) unsigned int changesCount; // @synthesize changesCount=_changesCount;
@property(nonatomic) unsigned int completedChangesCount; // @synthesize completedChangesCount=_completedChangesCount;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(copy, nonatomic) NSDictionary *customProperties; // @synthesize customProperties=_customProperties;
@property(copy, nonatomic) NSDictionary *OAuth; // @synthesize OAuth=_OAuth;
@property(copy, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(readonly, nonatomic) _Bool pull; // @synthesize pull=_pull;
@property(readonly, nonatomic) NSURL *remoteURL; // @synthesize remoteURL=_remoteURL;
@property(copy, nonatomic) NSString *network; // @synthesize network=_network;
@property(copy) NSArray *documentIDs; // @synthesize documentIDs=_documentIDs;
@property(copy, nonatomic) NSDictionary *filterParams; // @synthesize filterParams=_filterParams;
@property(copy, nonatomic) NSString *filter; // @synthesize filter=_filter;
@property(nonatomic) _Bool continuous; // @synthesize continuous=_continuous;
@property(nonatomic) _Bool createTarget; // @synthesize createTarget=_createTarget;
@property(readonly, nonatomic) CBLDatabase *localDatabase; // @synthesize localDatabase=_database;
- (void).cxx_destruct;
- (void)bg_updateProgress;
- (void)bg_replicationProgressChanged:(id)arg1;
- (void)bg_startReplicator:(id)arg1 properties:(id)arg2 auth:(id)arg3;
- (void)bg_setReplicator:(id)arg1;
- (id)tellCookieStorageAndWait:(CDUnknownBlockType)arg1;
- (void)tellCookieStorage:(CDUnknownBlockType)arg1;
- (void)tellReplicatorWhileRunning:(CDUnknownBlockType)arg1;
- (id)tellReplicatorAndWait:(CDUnknownBlockType)arg1;
- (void)tellReplicator:(CDUnknownBlockType)arg1;
- (id)downloadAttachment:(id)arg1;
@property(readonly, nonatomic) long long lastSequencePushed;
- (id)replicatorSettings;
- (_Bool)isDocumentPending:(id)arg1;
@property(readonly) NSSet *pendingDocumentIDs;
- (void)updateStatus:(unsigned int)arg1 error:(id)arg2 processed:(unsigned long long)arg3 ofTotal:(unsigned long long)arg4 lastSeqPushed:(long long)arg5 serverCert:(struct __SecCertificate *)arg6;
@property _Bool suspended;
- (void)restart;
- (void)stop;
- (void)start;
@property(readonly, nonatomic) NSDictionary *properties;
- (_Bool)clearAuthenticationStores:(id *)arg1;
@property(readonly, nonatomic) NSArray *cookies;
- (void)deleteAllCookies;
- (void)deleteCookieNamed:(id)arg1;
- (void)setCookieNamed:(id)arg1 withValue:(id)arg2 path:(id)arg3 expirationDate:(id)arg4 secure:(_Bool)arg5;
@property(readonly) NSURL *personaOrigin;
@property(retain, nonatomic) NSURLCredential *credential;
@property(copy, nonatomic) NSArray *channels;
- (id)description;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 remote:(id)arg2 pull:(_Bool)arg3;
@property(copy) CDUnknownBlockType propertiesTransformationBlock;

@end

@interface CBLSyncConnection : NSObject <BLIPConnectionDelegate>
{
    CBLDatabase *_db;
    NSObject<OS_dispatch_queue> *_dbQueue;
    NSObject<OS_dispatch_queue> *_syncQueue;
    BLIPConnection *_connection;
    NSURL *_peerURL;
    _Bool _connected;
    unsigned int _state;
    CDUnknownBlockType _updateStateSoon;
    NSProgress *_pullProgress;
    NSProgress *_pushProgress;
    _Bool _pushing;
    _Bool _pulling;
    _Bool _pushContinuousChanges;
    _Bool _pullContinuousChanges;
    _Bool _pullCatchingUp;
    id _remoteCheckpointSequence;
    unsigned long long _localCheckpointSequence;
    _Bool _lastSequenceChanged;
    _Bool _savingCheckpoint;
    _Bool _overdueForSave;
    _Bool _closeAfterSave;
    NSString *_remoteCheckpointRevID;
    long long _changesBatchSize;
    unsigned long long _changeListsInFlight;
    unsigned long long _awaitingRevs;
    NSMutableArray *_revsToInsert;
    unsigned long long _insertingRevs;
    CDUnknownBlockType _pushFilter;
    NSDictionary *_pushFilterParams;
    NSString *_pullFilterName;
    NSDictionary *_pullFilterParams;
    CBLDatabase *_insertDB;
    NSObject<OS_dispatch_queue> *_insertDBQueue;
    NSError *_error;
    NSArray *_nestedPullProgress;
    NSArray *_nestedPushProgress;
    NSString *_remoteCheckpointDocID;
    CBLBlipReplicator *_replicator;
    CDUnknownBlockType _onSyncAccessCheck;
}

@property(copy) CDUnknownBlockType onSyncAccessCheck; // @synthesize onSyncAccessCheck=_onSyncAccessCheck;
@property __weak CBLBlipReplicator *replicator; // @synthesize replicator=_replicator;
@property(copy) NSString *remoteCheckpointDocID; // @synthesize remoteCheckpointDocID=_remoteCheckpointDocID;
@property(copy) NSArray *nestedPushProgress; // @synthesize nestedPushProgress=_nestedPushProgress;
@property(readonly) NSProgress *pushProgress; // @synthesize pushProgress=_pushProgress;
@property(copy) NSArray *nestedPullProgress; // @synthesize nestedPullProgress=_nestedPullProgress;
@property(readonly) NSProgress *pullProgress; // @synthesize pullProgress=_pullProgress;
@property(retain) NSError *error; // @synthesize error=_error;
@property unsigned int state; // @synthesize state=_state;
@property(readonly) NSURL *peerURL; // @synthesize peerURL=_peerURL;
@property(readonly) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
- (void).cxx_destruct;
- (void)closed;
- (void)blipConnection:(id)arg1 didCloseWithError:(id)arg2;
- (void)blipConnection:(id)arg1 didFailWithError:(id)arg2;
- (void)blipConnectionDidOpen:(id)arg1;
- (_Bool)blipConnection:(id)arg1 validateServerTrust:(struct __SecTrust *)arg2;
- (_Bool)accessCheckForRequest:(id)arg1;
- (void)removeAttachmentProgress:(id)arg1 pulling:(_Bool)arg2;
- (id)addAttachmentProgressWithName:(id)arg1 length:(unsigned long long)arg2 pulling:(_Bool)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateState:(unsigned int)arg1;
- (void)updateState;
- (void)onDatabaseQueue:(CDUnknownBlockType)arg1;
- (void)onSyncQueue:(CDUnknownBlockType)arg1;
- (_Bool)gotError:(id)arg1;
- (void)close;
- (void)setPullFilter:(id)arg1 params:(id)arg2;
- (void)setPushFilter:(CDUnknownBlockType)arg1 params:(id)arg2;
- (void)push:(_Bool)arg1 pull:(_Bool)arg2 continuously:(_Bool)arg3;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 connection:(id)arg2 queue:(id)arg3;
- (void)insertRevisions;
- (void)queueInsertPendingRev:(id)arg1;
- (void)queueRevisionToInsert:(id)arg1 withAttachments:(id)arg2;
- (void)failedToGetRevision:(id)arg1;
- (void)requestAttachment:(id)arg1 named:(id)arg2 onComplete:(CDUnknownBlockType)arg3;
- (void)handleIncomingRevision:(id)arg1;
- (void)handleIncomingChanges:(id)arg1;
- (void)requestChangesSince:(id)arg1 inBatchesOf:(unsigned long long)arg2 continuous:(_Bool)arg3;
- (void)handleProveAttachment:(id)arg1;
- (void)handleGetAttachment:(id)arg1;
- (void)sendDoc:(id)arg1 revID:(id)arg2 sequence:(id)arg3 knownAncestors:(id)arg4 maxHistory:(unsigned long long)arg5 to:(id)arg6;
- (void)_dbChanged:(id)arg1;
- (void)sendChanges:(id)arg1 onSent:(CDUnknownBlockType)arg2 onComplete:(CDUnknownBlockType)arg3;
- (void)sendChangesSince:(unsigned long long)arg1;
- (id)pendingDocuments;
- (id)pendingDocumentsSince:(unsigned long long)arg1 limit:(unsigned long long)arg2;
- (void)handleSubscribeToChanges:(id)arg1;
- (void)handleSetCheckpoint:(id)arg1;
- (void)handleGetCheckpoint:(id)arg1;
- (void)noteLocalSequenceIDPushed:(id)arg1;
- (void)noteLastSequenceChanged;
- (_Bool)updateCheckpoint;
- (void)getCheckpoint;
- (id)effectiveRemoteCheckpointDocID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLModelArray : NSArray
{
    CBLModel *_owner;
    NSString *_property;
    Class _itemClass;
    NSArray *_docIDs;
}

@property(readonly) NSArray *docIDs; // @synthesize docIDs=_docIDs;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithOwner:(id)arg1 property:(id)arg2 itemClass:(Class)arg3 models:(id)arg4;
- (id)initWithOwner:(id)arg1 property:(id)arg2 itemClass:(Class)arg3 docIDs:(id)arg4;

@end

@interface CBLSyncListenerImpl : BLIPPocketSocketListener <NSNetServiceDelegate>
{
    CBLManager *_manager;
    CBLSyncListener *_facade;
    NSMutableSet *_handlers;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_bonjourName;
    NSString *_bonjourType;
    NSNetService *_netService;
    NSData *_txtData;
}

- (void).cxx_destruct;
- (void)netService:(id)arg1 didNotPublish:(id)arg2;
- (void)netServiceDidPublish:(id)arg1;
- (void)listenerDidStop;
- (void)listenerDidStart;
- (void)setTXTRecordDictionary:(id)arg1;
- (id)TXTRecordDictionary;
- (void)setBonjourName:(id)arg1 type:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)blipConnectionDidOpen:(id)arg1;
- (_Bool)checkClientCertificateAuthentication:(struct __SecTrust *)arg1 fromAddress:(id)arg2;
- (void)dealloc;
- (id)initWithManager:(id)arg1 facade:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLSyncListener : CBLListener
{
    CBLSyncListenerImpl *_impl;
    unsigned short _desiredPort;
    unsigned short _port;
    unsigned long long _connectionCount;
    NSString *_bonjourName;
}

@property(copy) NSString *bonjourName; // @synthesize bonjourName=_bonjourName;
@property unsigned long long connectionCount; // @synthesize connectionCount=_connectionCount;
@property unsigned short port; // @synthesize port=_port;
- (void).cxx_destruct;
- (void)stop;
- (_Bool)start:(id *)arg1;
- (void)setPasswords:(id)arg1;
- (void)setTXTRecordDictionary:(id)arg1;
- (id)TXTRecordDictionary;
- (void)setBonjourName:(id)arg1 type:(id)arg2;
- (id)initWithManager:(id)arg1 port:(unsigned short)arg2;

@end

@interface CBLRemoteLogging : CBLTimeSeries
{
}

+ (id)sharedInstance;
- (void)onQuit:(id)arg1;
- (void)logType:(id)arg1 message:(id)arg2;
- (void)stop;
- (void)enableLogging:(id)arg1;
- (id)initWithDatabase:(id)arg1 docType:(id)arg2 error:(id *)arg3;

@end

@interface CBLSocketChangeTracker : CBLChangeTracker
{
    NSInputStream *_trackingInput;
    double _startTime;
    CBLGZip *_gzip;
    _Bool _gotResponseHeaders;
    _Bool _readyToRead;
    NSString *_serverName;
}

- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (_Bool)isCloudantAuthError:(id)arg1;
- (void)failedWithError:(id)arg1;
- (void)handleEOF;
- (void)readFromInput;
- (_Bool)readGzippedBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)setPaused:(_Bool)arg1;
- (_Bool)readResponseHeader;
- (_Bool)checkSSLCert;
- (void)stop;
- (void)clearConnection;
- (_Bool)start;

@end

@interface CBLBulkDownloader : CBLRemoteRequest <CBLMultipartReaderDelegate>
{
    CBLDatabase *_db;
    _Bool _attachments;
    CBLMultipartReader *_topReader;
    CBLMultipartDocumentReader *_docReader;
    unsigned int _docCount;
    CDUnknownBlockType _onDocument;
}

- (void).cxx_destruct;
- (_Bool)finishedPart;
- (_Bool)appendToPart:(id)arg1;
- (_Bool)startedPart:(id)arg1;
- (void)connectionDidFinishLoading;
- (void)didReceiveData:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (_Bool)retry;
@property(readonly, copy) NSString *description;
- (id)initWithDbURL:(id)arg1 database:(id)arg2 revisions:(id)arg3 attachments:(_Bool)arg4 onDocument:(CDUnknownBlockType)arg5 onCompletion:(CDUnknownBlockType)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MYReadWriteLock : NSObject <NSLocking>
{
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } _lock;
    NSString *_name;
}

@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)_check:(int)arg1;
- (void)withWriteLock:(CDUnknownBlockType)arg1;
- (void)withLock:(CDUnknownBlockType)arg1;
- (_Bool)tryLockForWriting;
- (_Bool)tryLock;
- (void)lockForWriting;
- (void)unlock;
- (void)lock;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CBLGeoQueryRow : CBLQueryRow
{
    struct CBLGeoRect _boundingBox;
    NSData *_geoJSONData;
}

@property(readonly, nonatomic) struct CBLGeoRect boundingBox; // @synthesize boundingBox=_boundingBox;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *geometryType;
@property(readonly) NSDictionary *geometry;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDocID:(id)arg1 sequence:(long long)arg2 boundingBox:(struct CBLGeoRect)arg3 geoJSONData:(id)arg4 value:(id)arg5 docRevision:(id)arg6;

@end

@interface CBLPersonaAuthorizer : CBLAuthorizer <CBLSessionCookieAuthorizer>
{
    NSString *_emailAddress;
}

+ (id)assertionForEmailAddress:(id)arg1 site:(id)arg2;
+ (id)registerAssertion:(id)arg1;
@property(readonly) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
- (void).cxx_destruct;
- (id)loginRequest;
- (id)assertion;
- (id)initWithEmailAddress:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface CBLDatabaseChange : NSObject <NSCopying>
{
    _Bool _inConflict;
    _Bool _echoed;
    NSString *_documentID;
    CBL_Revision *_addedRevision;
    CBL_RevID *_winningRevisionID;
    NSURL *_source;
}

@property(readonly, nonatomic) _Bool echoed; // @synthesize echoed=_echoed;
@property(readonly) NSURL *source; // @synthesize source=_source;
@property(readonly) _Bool inConflict; // @synthesize inConflict=_inConflict;
@property(readonly, nonatomic) CBL_RevID *winningRevisionID; // @synthesize winningRevisionID=_winningRevisionID;
@property(readonly, nonatomic) CBL_Revision *addedRevision; // @synthesize addedRevision=_addedRevision;
@property(readonly) NSString *documentID; // @synthesize documentID=_documentID;
- (void).cxx_destruct;
- (void)reduceMemoryUsage;
- (id)description;
@property(readonly, nonatomic) CBL_Revision *winningRevisionIfKnown;
@property(readonly) _Bool isCurrentRevision;
@property(readonly) _Bool isDeletion;
@property(readonly) unsigned long long sequenceNumber;
@property(readonly) NSString *revisionID;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPurgedDocument:(id)arg1;
- (id)initWithAddedRevision:(id)arg1 winningRevisionID:(id)arg2 inConflict:(_Bool)arg3 source:(id)arg4;

@end

@interface CBL_Shared : NSObject
{
    NSMutableDictionary *_databases;
    NSCountedSet *_openDatabaseNames;
    CBL_Server *_backgroundServer;
}

@property(retain) CBL_Server *backgroundServer; // @synthesize backgroundServer=_backgroundServer;
- (void).cxx_destruct;
- (void)forgetDatabaseNamed:(id)arg1;
- (id)docIDCacheForDatabaseNamed:(id)arg1;
- (id)lockForDatabaseNamed:(id)arg1;
- (id)valuesOfType:(id)arg1 inDatabaseNamed:(id)arg2;
- (_Bool)hasValuesOfType:(id)arg1 inDatabaseNamed:(id)arg2;
- (id)valueForType:(id)arg1 name:(id)arg2 inDatabaseNamed:(id)arg3;
- (void)setValue:(id)arg1 forType:(id)arg2 name:(id)arg3 inDatabaseNamed:(id)arg4;
- (void)closedDatabase:(id)arg1;
- (void)openedDatabase:(id)arg1;
- (unsigned long long)countForOpenedDatabase:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CBLDatabaseUpgrade : NSObject
{
    CBLDatabase *_db;
    NSString *_path;
    struct sqlite3 *_sqlite;
    struct sqlite3_stmt *_docQuery;
    struct sqlite3_stmt *_revQuery;
    struct sqlite3_stmt *_attQuery;
    _Bool _canRemoveOldAttachmentsDir;
    unsigned long long _numDocs;
    unsigned long long _numRevs;
}

@property _Bool canRemoveOldAttachmentsDir; // @synthesize canRemoveOldAttachmentsDir=_canRemoveOldAttachmentsDir;
@property(readonly) unsigned long long numRevs; // @synthesize numRevs=_numRevs;
@property(readonly) unsigned long long numDocs; // @synthesize numDocs=_numDocs;
- (void).cxx_destruct;
- (int)prepare:(struct sqlite3_stmt **)arg1 fromSQL:(const char *)arg2;
- (int)importInfo;
- (int)importLocalDocs;
- (int)attachmentsTableExists:(_Bool *)arg1;
- (int)addAttachmentsToSequence:(long long)arg1 json:(id)arg2;
- (int)updateAttachmentFollowsInJson:(id)arg1;
- (int)importDoc:(id)arg1 numericID:(long long)arg2;
- (int)renameAttachmentFileNamesInDir:(id)arg1;
- (int)moveAttachmentsDir;
- (void)deleteSQLiteFiles;
- (void)backOut;
- (void)close;
- (int)import;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 sqliteFile:(id)arg2;

@end

@interface CBLSymmetricKey : NSObject
{
    NSData *_keyData;
}

+ (_Bool)deleteKeychainItemNamed:(id)arg1 error:(id *)arg2;
@property(readonly) NSData *keyData; // @synthesize keyData=_keyData;
- (void).cxx_destruct;
- (id)decryptStream:(id)arg1;
- (id)decryptData:(id)arg1;
- (id)encryptData:(id)arg1;
- (CDUnknownBlockType)createEncryptor;
- (_Bool)saveKeychainItemNamed:(id)arg1 error:(id *)arg2;
@property(readonly) NSString *hexData;
- (id)initWithKeychainItemNamed:(id)arg1 error:(id *)arg2;
- (id)initWithKeyOrPassword:(id)arg1;
- (id)initWithPassword:(id)arg1;
- (id)initWithPassword:(id)arg1 salt:(id)arg2 rounds:(unsigned int)arg3;
- (id)initWithKeyData:(id)arg1;
- (id)init;

@end

@interface CBLByteBuffer : NSObject
{
    NSMutableData *_data;
    unsigned long long _offset;
    unsigned long long _capacity;
}

- (void).cxx_destruct;
- (struct _NSRange)searchFor:(id)arg1 from:(unsigned long long)arg2;
- (id)subdataWithRangeNoCopy:(struct _NSRange)arg1;
@property(readonly) NSData *data;
@property(readonly) void *mutableBytes;
@property(readonly) const void *bytes;
- (void)reset;
- (void)makeRoom:(unsigned long long)arg1;
- (void)compact;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)appendData:(id)arg1;
@property(readonly) unsigned long long bytesAvailable;
@property(readonly) _Bool hasBytesAvailable;
- (void)advance:(unsigned long long)arg1;
- (id)init;

@end

@interface CBLQueryBuilder : NSObject
{
    NSComparisonPredicate *_equalityKey;
    NSComparisonPredicate *_otherKey;
    NSArray *_keyPredicates;
    NSString *_docType;
    NSArray *_valueTemplate;
    NSArray *_reduceFunctions;
    NSMutableArray *_filterPredicates;
    NSError *_error;
    NSExpression *_queryStartKey;
    NSExpression *_queryEndKey;
    NSExpression *_queryKeys;
    _Bool _queryInclusiveStart;
    _Bool _queryInclusiveEnd;
    _Bool _queryDescending;
    unsigned char _queryPrefixMatchLevel;
    NSPredicate *_queryFilter;
    NSArray *_querySort;
    _Bool _explodeKey;
    NSPredicate *_mapPredicate;
    CBLView *_view;
}

+ (CDUnknownBlockType)defineReduceBlockForFunctions:(id)arg1;
+ (id)defineView:(id)arg1 inDatabase:(id)arg2 withMapPredicate:(id)arg3 keyExpression:(id)arg4 explodeKey:(_Bool)arg5 documentType:(id)arg6 valueExpression:(id)arg7 reduceFunctions:(id)arg8;
@property(readonly, nonatomic) CBLView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)fail:(id)arg1;
- (id)runQueryWithContext:(id)arg1 error:(id *)arg2;
- (id)createQueryWithContext:(id)arg1;
- (_Bool)precomputeQuery;
- (id)valueExpression;
- (id)keyExpression;
- (id)createQuerySortDescriptors;
- (id)createKeyPredicates;
- (id)rewriteKeyPath:(id)arg1;
- (id)rewriteKeyPathsInExpressions:(id)arg1;
- (id)rewriteKeyPathsInExpression:(id)arg1;
- (id)createQueryFilter;
- (_Bool)lookForDocTypeEqualityTest:(id)arg1;
- (void)scanValueTemplate:(id)arg1;
- (unsigned int)expressionAttributes:(id)arg1;
- (_Bool)addKeyPredicate:(id)arg1;
- (id)scanPredicate:(id)arg1 anyVariables:(_Bool *)arg2;
@property(readonly, nonatomic) NSString *explanation;
- (id)initWithDatabase:(id)arg1 select:(id)arg2 where:(id)arg3 orderBy:(id)arg4 error:(id *)arg5;
- (id)initWithView:(id)arg1 select:(id)arg2 wherePredicate:(id)arg3 orderBy:(id)arg4 error:(id *)arg5;
- (id)initWithDatabase:(id)arg1 select:(id)arg2 wherePredicate:(id)arg3 orderBy:(id)arg4 error:(id *)arg5;
- (id)initWithView:(id)arg1 inDatabase:(id)arg2 select:(id)arg3 wherePredicate:(id)arg4 orderBy:(id)arg5 error:(id *)arg6;

@end

@interface CBL_OAConsumer : NSObject
{
    NSString *key;
    NSString *secret;
}

@property(copy) NSString *secret; // @synthesize secret;
@property(copy) NSString *key; // @synthesize key;
- (_Bool)isEqualToConsumer:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithKey:(id)arg1 secret:(id)arg2;

@end

@interface CBLValidationContext : NSObject <CBLValidationContext>
{
    CBLDatabase *_db;
    CBL_Revision *_currentRevision;
    CBL_Revision *_newRevision;
    NSURL *_source;
    int _errorType;
    NSString *_errorMessage;
    NSArray *_changedKeys;
    NSString *_rejectionMessage;
}

@property(readonly, nonatomic) NSURL *source; // @synthesize source=_source;
@property(readonly) NSString *rejectionMessage; // @synthesize rejectionMessage=_rejectionMessage;
- (void).cxx_destruct;
- (_Bool)validateChanges:(CDUnknownBlockType)arg1;
@property(readonly) NSArray *changedKeys;
- (void)rejectWithMessage:(id)arg1;
- (void)reject;
@property(readonly) CBLSavedRevision *currentRevision;
- (id)current_Revision;
- (id)initWithDatabase:(id)arg1 revision:(id)arg2 newRevision:(id)arg3 source:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLListener : NSObject
{
    unsigned short _explicitPort;
    NSDictionary *_passwords;
    struct __SecIdentity *_SSLIdentity;
    _Bool _readOnly;
    _Bool _requiresAuth;
    NSString *_realm;
    NSArray *_SSLExtraCertificates;
    id <CBLListenerDelegate> _delegate;
}

@property __weak id <CBLListenerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *SSLExtraCertificates; // @synthesize SSLExtraCertificates=_SSLExtraCertificates;
@property(copy) NSString *realm; // @synthesize realm=_realm;
@property _Bool requiresAuth; // @synthesize requiresAuth=_requiresAuth;
@property _Bool readOnly; // @synthesize readOnly=_readOnly;
- (void).cxx_destruct;
@property(readonly) NSArray *SSLIdentityAndCertificates;
@property(readonly) NSData *SSLIdentityDigest;
- (_Bool)setAnonymousSSLIdentityWithLabel:(id)arg1 error:(id *)arg2;
@property(nonatomic) struct __SecIdentity *SSLIdentity;
- (id)passwordForUser:(id)arg1;
- (void)setPasswords:(id)arg1;
@property(readonly) NSURL *URL;
- (void)stop;
- (_Bool)start:(id *)arg1;
@property(readonly) unsigned short port;
@property(copy) NSDictionary *TXTRecordDictionary;
@property(readonly) NSString *bonjourName;
- (void)setBonjourName:(id)arg1 type:(id)arg2;
- (void)dealloc;
- (id)initWithManager:(id)arg1 port:(unsigned short)arg2;

@end

@interface CBJSONEncoder : NSObject
{
    NSMutableData *_encoded;
    struct yajl_gen_t *_gen;
    int _status;
    NSError *_error;
    _Bool _canonical;
    CDUnknownBlockType _keyFilter;
}

+ (id)orderedKeys:(id)arg1;
+ (id)canonicalEncoding:(id)arg1 error:(id *)arg2;
+ (id)encode:(id)arg1 error:(id *)arg2;
@property(copy) CDUnknownBlockType keyFilter; // @synthesize keyFilter=_keyFilter;
@property _Bool canonical; // @synthesize canonical=_canonical;
- (void).cxx_destruct;
@property(retain, nonatomic) NSError *error;
@property(readonly, nonatomic) NSMutableData *output;
@property(readonly, nonatomic) NSData *encodedData;
- (_Bool)encode:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CBL_RevID : NSObject <NSCopying>
{
}

+ (id)fromData:(id)arg1;
+ (id)fromString:(id)arg1;
- (long long)compare:(id)arg1;
@property(readonly) NSString *suffix;
@property(readonly) unsigned int generation;
@property(readonly) NSData *asData;
@property(readonly) NSString *asString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;

@end

@interface CBL_TreeRevID : CBL_RevID
{
    NSData *_data;
}

+ (id)parseRevisionHistoryDict:(id)arg1;
+ (id)makeRevisionHistoryDict:(id)arg1;
+ (id)revIDForJSON:(id)arg1 deleted:(_Bool)arg2 prevRevID:(id)arg3;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)suffix;
- (unsigned int)generation;
- (id)asData;
- (id)initWithData:(id)arg1;

@end

@interface CBL_OAMutableURLRequest : NSMutableURLRequest
{
    CBL_OAConsumer *consumer;
    CBL_OAToken *token;
    NSString *realm;
    NSString *signature;
    id <OASignatureProviding> signatureProvider;
    NSString *nonce;
    NSString *timestamp;
}

@property(readonly) NSString *nonce; // @synthesize nonce;
@property(readonly) NSString *signature; // @synthesize signature;
- (void)dealloc;
- (id)_signatureBaseString;
- (void)_generateNonce;
- (void)_generateTimestamp;
- (void)prepare;
- (id)initWithURL:(id)arg1 consumer:(id)arg2 token:(id)arg3 realm:(id)arg4 signatureProvider:(id)arg5 nonce:(id)arg6 timestamp:(id)arg7;
- (id)initWithURL:(id)arg1 consumer:(id)arg2 token:(id)arg3 realm:(id)arg4 signatureProvider:(id)arg5;

@end

@interface CBLArrayDiff : NSObject
{
    CDUnknownBlockType _comparator;
    struct vector<CBLMovedRange, std::__1::allocator<CBLMovedRange>> _moves;
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _modifiedIndexes;
    NSIndexSet *_deletedIndexes;
    NSIndexSet *_insertedIndexes;
    NSIndexSet *_changedIndexesBefore;
    NSIndexSet *_changedIndexesAfter;
}

+ (id)indexPathsForSet:(id)arg1 withSection:(unsigned long long)arg2;
@property(readonly, nonatomic) NSIndexSet *changedIndexesAfter; // @synthesize changedIndexesAfter=_changedIndexesAfter;
@property(readonly, nonatomic) NSIndexSet *changedIndexesBefore; // @synthesize changedIndexesBefore=_changedIndexesBefore;
@property(readonly, nonatomic) NSIndexSet *insertedIndexes; // @synthesize insertedIndexes=_insertedIndexes;
@property(readonly, nonatomic) NSIndexSet *deletedIndexes; // @synthesize deletedIndexes=_deletedIndexes;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)forEachMove:(CDUnknownBlockType)arg1;
- (void)forEachModification:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) const CDStruct_477d7e2c *movedRanges;
@property(readonly, nonatomic) unsigned long long moveCount;
- (id)initWithBeforeArray:(id)arg1 afterArray:(id)arg2 detectMoves:(_Bool)arg3 itemComparator:(CDUnknownBlockType)arg4;
- (void)animateTableView:(id)arg1 deletionAnimation:(long long)arg2 replaceAnimation:(long long)arg3 insertionAnimation:(long long)arg4;

@end

@interface CBL_OAPlaintextSignatureProvider : NSObject <OASignatureProviding>
{
}

- (id)signClearText:(id)arg1 withSecret:(id)arg2;
- (id)name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLSpecialKey : NSObject
{
    NSString *_text;
    struct CBLGeoRect _rect;
    NSData *_geoJSONData;
}

@property(readonly, nonatomic) NSData *geoJSONData; // @synthesize geoJSONData=_geoJSONData;
@property(readonly, nonatomic) struct CBLGeoRect rect; // @synthesize rect=_rect;
@property(readonly, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)description;
- (id)initWithGeoJSON:(id)arg1;
- (id)initWithRect:(struct CBLGeoRect)arg1;
- (id)initWithPoint:(struct CBLGeoPoint)arg1;
- (id)initWithText:(id)arg1;

@end

@interface CBL_OARequestParameter : NSObject
{
    NSString *name;
    NSString *value;
}

+ (id)requestParameter:(id)arg1 value:(id)arg2;
@property(copy) NSString *value; // @synthesize value;
@property(copy) NSString *name; // @synthesize name;
- (_Bool)isEqualToRequestParameter:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)URLEncodedNameValuePair;
- (id)URLEncodedValue;
- (id)URLEncodedName;
- (void)dealloc;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface CBL_OAToken : NSObject <NSCoding>
{
    NSString *key;
    NSString *secret;
    NSString *session;
    NSNumber *duration;
    NSString *verifier;
    NSMutableDictionary *attributes;
    NSDate *created;
    _Bool renewable;
    _Bool forRenewal;
}

+ (id)attributesWithString:(id)arg1;
+ (id)durationWithString:(id)arg1;
+ (void)removeFromUserDefaultsWithServiceProviderName:(id)arg1 prefix:(id)arg2;
+ (void)saveSetting:(id)arg1 object:(id)arg2 provider:(id)arg3 prefix:(id)arg4;
+ (id)loadSetting:(id)arg1 provider:(id)arg2 prefix:(id)arg3;
+ (id)settingsKey:(id)arg1 provider:(id)arg2 prefix:(id)arg3;
@property(getter=isForRenewal) _Bool forRenewal; // @synthesize forRenewal;
@property(retain, nonatomic) NSDictionary *attributes; // @synthesize attributes;
@property(retain) NSString *verifier; // @synthesize verifier;
@property(retain) NSNumber *duration; // @synthesize duration;
@property(retain) NSString *session; // @synthesize session;
@property(retain) NSString *secret; // @synthesize secret;
@property(retain) NSString *key; // @synthesize key;
- (id)description;
- (_Bool)isEqualToToken:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)parameters;
- (void)setAttributesWithString:(id)arg1;
- (id)attribute:(id)arg1;
- (id)attributeString;
- (_Bool)hasAttributes;
- (void)setAttribute:(id)arg1 value:(id)arg2;
- (_Bool)isRenewable;
- (_Bool)hasExpired;
- (void)setDurationWithString:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (int)storeInUserDefaultsWithServiceProviderName:(id)arg1 prefix:(id)arg2;
- (_Bool)isValid;
- (void)dealloc;
- (id)initWithUserDefaultsUsingServiceProviderName:(id)arg1 prefix:(id)arg2;
- (id)initWithHTTPResponseBody:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKey:(id)arg1 secret:(id)arg2 session:(id)arg3 duration:(id)arg4 attributes:(id)arg5 created:(id)arg6 renewable:(_Bool)arg7;
- (id)initWithKey:(id)arg1 secret:(id)arg2;
- (id)init;

@end

@interface CBLQueryRow : NSObject
{
    id _key;
    id _value;
    id _parsedKey;
    id _parsedValue;
    unsigned long long _sequence;
    NSString *_sourceDocID;
    CBL_Revision *_documentRevision;
    CBLDatabase *_database;
    id <CBL_QueryRowStorage> _storage;
}

@property(readonly) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequence;
@property(readonly, nonatomic) __weak id <CBL_QueryRowStorage> storage; // @synthesize storage=_storage;
@property(readonly) CBLDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) CBL_Revision *documentRevision; // @synthesize documentRevision=_documentRevision;
@property(readonly) NSString *sourceDocumentID; // @synthesize sourceDocumentID=_sourceDocID;
- (void).cxx_destruct;
- (id)debugQuickLookObject;
- (id)description;
@property(readonly) NSArray *conflictingRevisions;
@property(readonly) CBLDocument *document;
- (id)value3;
- (id)value2;
- (id)value1;
- (id)value0;
- (id)valueAtIndex:(unsigned long long)arg1;
@property(readonly) id key3;
@property(readonly) id key2;
@property(readonly) id key1;
@property(readonly) id key0;
- (id)keyAtIndex:(unsigned long long)arg1;
@property(readonly) NSString *documentRevisionID;
@property(readonly) CBL_RevID *_documentRevisionID;
@property(readonly) NSString *documentID;
@property(readonly) NSDictionary *documentProperties;
@property(readonly) id value;
@property(readonly) id key;
- (unsigned char)compareForArrayDiff:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isValueEqual:(id)arg1;
- (_Bool)isNonMagicValue;
- (void)moveToDatabase:(id)arg1 view:(id)arg2;
- (void)_clearDatabase;
- (id)initWithDocID:(id)arg1 sequence:(long long)arg2 key:(id)arg3 value:(id)arg4 docRevision:(id)arg5;

@end

@interface CBL_BlobStoreWriter : NSObject
{
    CBL_BlobStore *_store;
    NSString *_tempPath;
    NSFileHandle *_out;
    unsigned long long _contentLength;
    struct CC_SHA1state_st _shaCtx;
    struct CC_MD5state_st _md5Ctx;
    struct {
        unsigned char bytes[16];
    } _MD5Digest;
    CDUnknownBlockType _encryptor;
    CBLProgressGroup *_progress;
    NSString *_name;
    unsigned long long _bytesWritten;
    NSString *_eTag;
    struct CBLBlobKey _blobKey;
}

@property(copy, nonatomic) NSString *eTag; // @synthesize eTag=_eTag;
@property(readonly) struct CBLBlobKey blobKey; // @synthesize blobKey=_blobKey;
@property(nonatomic) unsigned long long contentLength; // @synthesize contentLength=_contentLength;
@property(readonly, nonatomic) unsigned long long bytesWritten; // @synthesize bytesWritten=_bytesWritten;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)dealloc;
- (void)cancel;
- (_Bool)install;
@property(readonly) NSString *filePath;
- (id)blobInputStream;
@property(readonly) NSData *blobData;
- (_Bool)verifyDigest:(id)arg1;
@property(readonly) NSString *SHA1DigestString;
@property(readonly) NSString *MD5DigestString;
- (void)finish;
- (void)reset;
- (_Bool)openFile;
- (void)closeFile;
- (_Bool)appendInputStream:(id)arg1 error:(id *)arg2;
- (void)appendData:(id)arg1;
@property(retain) CBLProgressGroup *progress;
- (id)initWithStore:(id)arg1;

@end

@interface MYAction : NSObject <MYAction>
{
    NSMutableArray *_performs;
    NSMutableArray *_backOuts;
    NSMutableArray *_cleanUps;
    unsigned long long _nextStep;
    NSError *_error;
    unsigned long long _failedStep;
}

+ (id)cleanUpTemporaryFile:(id)arg1;
+ (id)moveFile:(id)arg1 toPath:(id)arg2;
+ (id)moveFile:(id)arg1 toEmptyPath:(id)arg2;
+ (id)deleteFile:(id)arg1;
+ (void)initialize;
@property(readonly) unsigned long long failedStep; // @synthesize failedStep=_failedStep;
@property(readonly) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)doActionFromArray:(id)arg1;
- (_Bool)run:(id *)arg1;
- (_Bool)cleanUp:(id *)arg1;
- (_Bool)backOut:(id *)arg1;
- (_Bool)perform:(id *)arg1;
- (void)addAction:(id)arg1;
- (void)addPerform:(CDUnknownBlockType)arg1 backOutOrCleanUp:(CDUnknownBlockType)arg2;
- (void)addPerform:(CDUnknownBlockType)arg1 backOut:(CDUnknownBlockType)arg2 cleanUp:(CDUnknownBlockType)arg3;
- (id)initWithPerform:(CDUnknownBlockType)arg1 backOut:(CDUnknownBlockType)arg2 cleanUp:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLAttachmentDownloader : CBLRemoteRequest
{
    NSURL *_url;
    CBLDatabase *_database;
    CBL_AttachmentTask *_task;
    CBL_BlobStoreWriter *_writer;
    NSError *_error;
}

- (void).cxx_destruct;
- (void)clearConnection;
- (_Bool)retry;
- (void)didFinishLoading;
- (void)didReceiveData:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (id)createTaskInURLSession:(id)arg1;
- (void)addTask:(id)arg1;
- (id)initWithDbURL:(id)arg1 database:(id)arg2 attachment:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;

@end

@interface CBLProgressGroup : NSObject
{
    NSMutableArray *_progresses;
    long long _completed;
    long long _total;
    CDUnknownBlockType _noteProgress;
    CDUnknownBlockType _cancellationHandler;
}

@property(copy) CDUnknownBlockType cancellationHandler; // @synthesize cancellationHandler=_cancellationHandler;
- (void).cxx_destruct;
- (void)failedWithError:(id)arg1;
- (void)finished;
- (void)setIndeterminate;
- (void)setTotalUnitCount:(long long)arg1;
- (void)setCompletedUnitCount:(long long)arg1;
- (void)_updateProgresses;
@property(readonly) _Bool isCanceled;
- (void)addProgressGroup:(id)arg1;
- (void)removeProgress:(id)arg1;
- (_Bool)addProgress:(id)arg1;
- (id)init;

@end

@interface CBLJSON : NSJSONSerialization
{
}

+ (id)valueAtPointer:(id)arg1 inObject:(id)arg2;
+ (id)dataWithBase64String:(id)arg1;
+ (id)base64StringWithData:(id)arg1;
+ (id)dateWithJSONObject:(id)arg1;
+ (double)absoluteTimeWithJSONObject:(id)arg1;
+ (id)JSONObjectWithDate:(id)arg1 timeZone:(id)arg2;
+ (id)JSONObjectWithDate:(id)arg1;
+ (unsigned long long)estimateMemorySize:(id)arg1;
+ (id)appendJSONDictionaryData:(id)arg1 toJSONDictionaryData:(id)arg2;
+ (id)appendDictionary:(id)arg1 toJSONDictionaryData:(id)arg2;
+ (id)dataWithJSONObject:(id)arg1;
+ (id)JSONObjectWithData:(id)arg1;
+ (id)stringWithJSONObject:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (id)dataWithJSONObject:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (void)initialize;

@end

@interface CBLLazyArrayOfJSON : NSArray
{
    NSMutableArray *_array;
}

- (void).cxx_destruct;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithMutableArray:(id)arg1;

@end

@interface CBLWebSocketChangeTracker : CBLChangeTracker <PSWebSocketDelegate>
{
    NSThread *_thread;
    PSWebSocket *_ws;
    _Bool _running;
    double _startTime;
    int _pendingMessageCount;
    CBLGZip *_gzip;
}

- (void).cxx_destruct;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (_Bool)webSocket:(id)arg1 validateServerTrust:(struct __SecTrust *)arg2;
- (void)setPaused:(_Bool)arg1;
- (void)stop;
- (_Bool)start;
- (id)changesFeedURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBLTokenAuthorizer : CBLAuthorizer <CBLSessionCookieAuthorizer>
{
    NSString *_loginPath;
    NSDictionary *_loginParams;
}

- (void).cxx_destruct;
- (id)loginRequest;
- (id)initWithLoginPath:(id)arg1 postParameters:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain) NSString *localUUID;
@property(retain) NSURL *remoteURL;
@property(readonly) Class superclass;
@property(readonly) NSString *username;

@end

@interface CBLTimeSeries : NSObject
{
    CBLDatabase *_db;
    NSObject<OS_dispatch_queue> *_queue;
    struct __sFILE {
        char *_field1;
        int _field2;
        int _field3;
        short _field4;
        short _field5;
        struct __sbuf _field6;
        int _field7;
        void *_field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        struct __sbuf _field13;
        struct __sFILEX *_field14;
        int _field15;
        unsigned char _field16[3];
        unsigned char _field17[1];
        struct __sbuf _field18;
        int _field19;
        long long _field20;
    } *_out;
    unsigned long long _eventsInFile;
    NSMutableArray *_docsToAdd;
    _Bool _synchronousFlushing;
    NSString *_docType;
    NSString *_docIDPrefix;
    NSError *_lastError;
}

+ (_Bool)enumerateEventsInDocument:(struct NSDictionary *)arg1 usingBlock:(CDUnknownBlockType)arg2;
@property(retain) NSError *lastError; // @synthesize lastError=_lastError;
@property(copy) NSString *docIDPrefix; // @synthesize docIDPrefix=_docIDPrefix;
@property(readonly) NSString *docType; // @synthesize docType=_docType;
- (void).cxx_destruct;
- (id)eventsFromDate:(id)arg1 toDate:(id)arg2 error:(id *)arg3;
- (struct NSArray *)eventsFromDocForTime:(double)arg1 startTime:(double *)arg2 error:(id *)arg3;
- (id)createPushReplication:(id)arg1 purgeWhenPushed:(_Bool)arg2;
- (_Bool)saveQueuedDocs;
- (void)addEventsToDB:(struct NSArray *)arg1;
- (id)docIDForTime:(double)arg1;
- (_Bool)transferToDB;
- (_Bool)flush;
- (void)flushAsync:(CDUnknownBlockType)arg1;
- (void)addEvent:(struct NSDictionary *)arg1 atTime:(double)arg2;
- (void)addEvent:(struct NSDictionary *)arg1;
- (_Bool)checkWriteError;
- (_Bool)checkError:(int)arg1;
- (void)stop;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 docType:(id)arg2 error:(id *)arg3;

@end

@interface CBLTimeSeriesEnumerator : NSEnumerator
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (struct NSDictionary *)nextObject;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface BLIPResponse : BLIPMessage
{
    CDUnknownBlockType _onComplete;
}

@property(copy) CDUnknownBlockType onComplete; // @synthesize onComplete=_onComplete;
- (void).cxx_destruct;
- (void)_connectionClosed;
- (void)setComplete:(_Bool)arg1;
- (_Bool)send;
@property(retain) NSError *error;
- (void)_setError:(id)arg1;
- (id)_initWithRequest:(id)arg1;

@end

@interface BLIPMessage : NSObject
{
    BLIPConnection *_connection;
    unsigned char _flags;
    unsigned int _number;
    NSDictionary *_properties;
    NSData *_body;
    MYBuffer *_encodedBody;
    id <MYReader> _outgoing;
    id <MYWriter> _incoming;
    NSMutableData *_mutableBody;
    NSMutableArray *_bodyStreams;
    _Bool _isMine;
    _Bool _isMutable;
    _Bool _sent;
    _Bool _propertiesAvailable;
    _Bool _complete;
    long long _bytesWritten;
    long long _bytesReceived;
    id _representedObject;
    CDUnknownBlockType _onDataReceived;
    CDUnknownBlockType _onDataSent;
    CDUnknownBlockType _onSent;
}

@property(retain) id representedObject; // @synthesize representedObject=_representedObject;
@property _Bool complete; // @synthesize complete=_complete;
@property _Bool propertiesAvailable; // @synthesize propertiesAvailable=_propertiesAvailable;
@property _Bool sent; // @synthesize sent=_sent;
@property(readonly) long long _bytesWritten; // @synthesize _bytesWritten;
@property(readonly) _Bool isMutable; // @synthesize isMutable=_isMutable;
@property(readonly) _Bool isMine; // @synthesize isMine=_isMine;
@property(readonly) unsigned int number; // @synthesize number=_number;
@property(readonly) BLIPConnection *connection; // @synthesize connection=_connection;
@property(copy) CDUnknownBlockType onSent; // @synthesize onSent=_onSent;
@property(copy) CDUnknownBlockType onDataSent; // @synthesize onDataSent=_onDataSent;
@property(copy) CDUnknownBlockType onDataReceived; // @synthesize onDataReceived=_onDataReceived;
- (void).cxx_destruct;
- (void)_connectionClosed;
- (_Bool)_receivedFrameWithFlags:(unsigned char)arg1 body:(id)arg2;
- (_Bool)_receivedAck:(unsigned long long)arg1;
@property(readonly) _Bool _needsAckToContinue;
- (id)nextFrameWithMaxSize:(unsigned short)arg1 moreComing:(_Bool *)arg2;
- (void)_assignedNumber:(unsigned int)arg1;
- (void)_encode;
@property(copy) NSString *profile;
@property(copy) NSString *contentType;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@property(readonly) NSMutableDictionary *mutableProperties;
@property(readonly) NSDictionary *properties;
@property(copy) id bodyJSON;
@property(copy) NSString *bodyString;
- (void)addStreamToBody:(id)arg1;
- (void)addToBody:(id)arg1;
- (void)_addToBody:(id)arg1;
@property(copy) NSData *body;
@property _Bool urgent;
@property _Bool compressed;
@property(readonly) _Bool isRequest;
- (unsigned char)_flags;
- (void)_setFlag:(unsigned char)arg1 value:(_Bool)arg2;
@property(readonly) NSString *descriptionWithProperties;
- (id)description;
- (id)_initWithConnection:(id)arg1 isMine:(_Bool)arg2 flags:(unsigned char)arg3 number:(unsigned int)arg4 body:(id)arg5;

@end

@interface BLIPConnection : NSObject
{
    NSObject<OS_dispatch_queue> *_transportQueue;
    _Bool _transportIsOpen;
    NSError *_error;
    id <BLIPConnectionDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSMutableArray *_outBox;
    NSMutableArray *_iceBox;
    BLIPMessage *_sendingMsg;
    unsigned int _numRequestsSent;
    unsigned int _numRequestsReceived;
    NSMutableDictionary *_pendingRequests;
    NSMutableDictionary *_pendingResponses;
    unsigned long long _pendingDelegateCalls;
    NSMutableDictionary *_registeredActions;
    _Bool _dispatchPartialMessages;
    _Bool _active;
}

@property(readonly) NSObject<OS_dispatch_queue> *transportQueue; // @synthesize transportQueue=_transportQueue;
@property(readonly) __weak id <BLIPConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property _Bool active; // @synthesize active=_active;
@property _Bool dispatchPartialMessages; // @synthesize dispatchPartialMessages=_dispatchPartialMessages;
@property(retain) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)_dispatchResponse:(id)arg1;
- (void)_dispatchRequest:(id)arg1;
- (_Bool)_dispatchMetaRequest:(id)arg1;
- (void)_messageReceivedProperties:(id)arg1;
- (_Bool)_sendRegisteredAction:(id)arg1;
- (void)registerDelegateActions:(id)arg1;
- (void)onRequestProfile:(id)arg1 sendDelegateAction:(SEL)arg2;
- (void)_receivedFrameWithFlags:(unsigned char)arg1 body:(id)arg2 complete:(_Bool)arg3 forMessage:(id)arg4;
- (void)receivedFrameWithNumber:(unsigned int)arg1 flags:(unsigned char)arg2 body:(id)arg3;
- (void)didReceiveFrame:(id)arg1;
- (void)sendFrame:(id)arg1;
- (_Bool)transportCanSend;
- (void)_sendAckWithNumber:(unsigned int)arg1 isRequest:(_Bool)arg2 bytesReceived:(unsigned long long)arg3;
- (id)outgoingMessageWithNumber:(unsigned int)arg1 isRequest:(_Bool)arg2;
- (void)feedTransport;
- (_Bool)_sendResponse:(id)arg1;
- (_Bool)_sendRequest:(id)arg1 response:(id)arg2;
- (void)_unpauseMessage:(id)arg1;
- (void)_pauseMessage:(id)arg1;
- (void)_queueMessage:(id)arg1 isNew:(_Bool)arg2 sendNow:(_Bool)arg3;
- (id)sendRequest:(id)arg1;
- (id)requestWithBody:(id)arg1 properties:(id)arg2;
- (id)request;
- (void)transportDidCloseWithError:(id)arg1;
- (void)transportDidOpen;
- (void)_closeWithError:(id)arg1;
- (void)close;
- (_Bool)connect:(id *)arg1;
- (void)updateActive;
@property(readonly) NSURL *URL;
- (void)_endDelegateCall;
- (void)_callDelegate:(SEL)arg1 block:(CDUnknownBlockType)arg2;
- (void)_onDelegateQueue:(CDUnknownBlockType)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)initWithTransportQueue:(id)arg1 isOpen:(_Bool)arg2;

@end

@interface BLIPRequest : BLIPMessage <NSMutableCopying>
{
    BLIPResponse *_response;
}

+ (id)requestWithBody:(id)arg1 properties:(id)arg2;
+ (id)requestWithBodyString:(id)arg1;
+ (id)requestWithBody:(id)arg1;
- (void).cxx_destruct;
- (void)respondWithException:(id)arg1;
- (void)respondWithErrorCode:(int)arg1 message:(id)arg2;
- (void)respondWithError:(id)arg1;
- (void)respondWithJSON:(id)arg1;
- (void)respondWithString:(id)arg1;
- (void)respondWithData:(id)arg1 contentType:(id)arg2;
@property(readonly) _Bool repliedTo;
- (void)deferResponse;
@property(readonly) BLIPResponse *response;
- (id)send;
@property(retain) BLIPConnection *connection;
@property _Bool noReply;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)_initWithConnection:(id)arg1 body:(id)arg2 properties:(id)arg3;

@end

@interface BLIPPocketSocketListener : NSObject <PSWebSocketServerDelegate>
{
    PSWebSocketServer *_server;
    NSArray *_paths;
    id <BLIPConnectionDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSMutableDictionary *_sockets;
    NSMutableDictionary *_passwords;
    NSString *_realm;
}

+ (_Bool)fromRequest:(id)arg1 getUsername:(id *)arg2 password:(id *)arg3;
@property(copy) NSString *realm; // @synthesize realm=_realm;
- (void).cxx_destruct;
- (void)blipConnectionDidOpen:(id)arg1;
- (void)server:(id)arg1 webSocket:(id)arg2 didCloseWithCode:(long long)arg3 reason:(id)arg4 wasClean:(_Bool)arg5;
- (void)server:(id)arg1 webSocket:(id)arg2 didFailWithError:(id)arg3;
- (void)server:(id)arg1 webSocketIsHungry:(id)arg2;
- (void)server:(id)arg1 webSocket:(id)arg2 didReceiveMessage:(id)arg3;
- (void)server:(id)arg1 webSocketDidOpen:(id)arg2;
- (_Bool)server:(id)arg1 acceptWebSocketFrom:(id)arg2 withRequest:(id)arg3 trust:(struct __SecTrust *)arg4 response:(id *)arg5;
- (_Bool)checkClientCertificateAuthentication:(struct __SecTrust *)arg1 fromAddress:(id)arg2;
- (_Bool)checkAuthentication:(id)arg1 user:(id *)arg2;
- (id)passwordForUser:(id)arg1;
- (void)setPasswords:(id)arg1;
@property(readonly) unsigned short port;
- (void)disconnect;
- (void)listenerDidFailWithError:(id)arg1;
- (void)listenerDidStop;
- (void)listenerDidStart;
- (void)server:(id)arg1 didFailWithError:(id)arg2;
- (void)serverDidStop:(id)arg1;
- (void)serverDidStart:(id)arg1;
- (_Bool)acceptOnInterface:(id)arg1 port:(unsigned short)arg2 SSLCertificates:(id)arg3 error:(id *)arg4;
- (id)init;
- (id)initWithPaths:(id)arg1 delegate:(id)arg2 queue:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BLIPHTTPLogic : NSObject
{
    NSMutableURLRequest *_urlRequest;
    NSString *_nonceKey;
    NSString *_authorizationHeader;
    struct __CFHTTPMessage *_responseMsg;
    NSURLCredential *_credential;
    unsigned long long _redirectCount;
    _Bool _handleRedirects;
    _Bool _shouldContinue;
    _Bool _shouldRetry;
    int _httpStatus;
    NSError *_error;
}

+ (id)parseAuthHeader:(id)arg1;
+ (id)userAgent;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) int httpStatus; // @synthesize httpStatus=_httpStatus;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(readonly) _Bool shouldRetry; // @synthesize shouldRetry=_shouldRetry;
@property(readonly) _Bool shouldContinue; // @synthesize shouldContinue=_shouldContinue;
@property _Bool handleRedirects; // @synthesize handleRedirects=_handleRedirects;
- (void).cxx_destruct;
- (void)setErrorCode:(long long)arg1 userInfo:(id)arg2;
- (id)credentialForAuthHeader:(id)arg1;
- (_Bool)redirect;
- (void)receivedResponse:(struct __CFHTTPMessage *)arg1;
- (struct __CFHTTPMessage *)newHTTPRequest;
@property(readonly) NSURLRequest *URLRequest;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly) _Bool useTLS;
@property(readonly) unsigned short port;
@property(readonly) NSURL *URL;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1;

@end

@interface BLIPPocketSocketConnection : BLIPConnection <PSWebSocketDelegate>
{
    BLIPHTTPLogic *_httpLogic;
    PSWebSocket *_webSocket;
    NSURL *_URL;
}

- (id)URL;
@property(readonly) PSWebSocket *webSocket; // @synthesize webSocket=_webSocket;
- (void).cxx_destruct;
- (void)webSocketIsHungry:(id)arg1;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (_Bool)webSocket:(id)arg1 validateServerTrust:(struct __SecTrust *)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)sendFrame:(id)arg1;
- (_Bool)transportCanSend;
- (void)closeWithCode:(long long)arg1 reason:(id)arg2;
- (void)close;
- (_Bool)connect:(id *)arg1;
- (void)setCredential:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithWebSocket:(id)arg1 transportQueue:(id)arg2 URL:(id)arg3 incoming:(_Bool)arg4;
@property(readonly) NSURLCredential *credential;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSWebSocketBuffer : NSObject
{
    NSMutableData *_data;
    long long _offset;
    unsigned long long _compactionLength;
}

@property(nonatomic) unsigned long long compactionLength; // @synthesize compactionLength=_compactionLength;
@property(nonatomic) long long offset; // @synthesize offset=_offset;
- (void).cxx_destruct;
- (id)data;
- (void *)mutableBytes;
- (const void *)bytes;
- (void)reset;
- (void)compact;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)appendData:(id)arg1;
- (unsigned long long)bytesAvailable;
- (_Bool)hasBytesAvailable;
- (id)init;

@end

@interface PSWebSocket : NSObject <NSStreamDelegate, PSWebSocketDriverDelegate>
{
    long long _mode;
    NSMutableURLRequest *_request;
    NSObject<OS_dispatch_queue> *_workQueue;
    PSWebSocketDriver *_driver;
    PSWebSocketBuffer *_inputBuffer;
    PSWebSocketBuffer *_outputBuffer;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    long long _readyState;
    _Bool _secure;
    _Bool _opened;
    _Bool _closeWhenFinishedOutput;
    _Bool _sentClose;
    _Bool _failed;
    _Bool _pumpingInput;
    _Bool _pumpingOutput;
    _Bool _readPaused;
    _Bool _serverUnvalidated;
    long long _closeCode;
    NSString *_closeReason;
    NSMutableArray *_pingHandlers;
    NSArray *_SSLClientCertificates;
    id <PSWebSocketDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
}

+ (id)serverSocketWithRequest:(id)arg1 inputStream:(id)arg2 outputStream:(id)arg3;
+ (id)clientSocketWithRequest:(id)arg1;
+ (id)peerAddressOfStream:(id)arg1;
+ (_Bool)isWebSocketRequest:(id)arg1;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <PSWebSocketDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *SSLClientCertificates; // @synthesize SSLClientCertificates=_SSLClientCertificates;
@property(readonly, nonatomic) NSURLRequest *URLRequest; // @synthesize URLRequest=_request;
- (void).cxx_destruct;
- (void)dealloc;
- (void)executeDelegateAndWait:(CDUnknownBlockType)arg1;
- (void)executeDelegate:(CDUnknownBlockType)arg1;
- (void)executeWorkAndWait:(CDUnknownBlockType)arg1;
- (void)executeWork:(CDUnknownBlockType)arg1;
- (void)askDelegateToValidateServerTrust:(id)arg1;
- (void)notifyDelegateDidCloseWithCode:(long long)arg1 reason:(id)arg2 wasClean:(_Bool)arg3;
- (void)notifyDelegateDidFailWithError:(id)arg1;
- (void)notifyDelegateDidReceiveMessage:(id)arg1;
- (void)notifyDelegateDidOpen;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)driver:(id)arg1 write:(id)arg2;
- (void)driver:(id)arg1 didReceivePong:(id)arg2;
- (void)driver:(id)arg1 didReceivePing:(id)arg2;
- (void)driver:(id)arg1 didReceiveMessage:(id)arg2;
- (void)driver:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3;
- (void)driver:(id)arg1 didFailWithError:(id)arg2;
- (void)driverDidOpen:(id)arg1;
- (void)failWithError:(id)arg1;
- (void)failWithCode:(long long)arg1 reason:(id)arg2;
@property _Bool readPaused;
- (void)pumpOutput;
- (void)pumpInput;
- (void)disconnect;
- (void)disconnectGracefully;
- (void)connect;
- (void)setStreamProperty:(void *)arg1 forKey:(id)arg2;
- (void *)copyStreamPropertyForKey:(id)arg1;
- (void)closeWithCode:(long long)arg1 reason:(id)arg2;
- (void)close;
- (void)ping:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)send:(id)arg1;
- (void)open;
@property(retain, nonatomic) NSString *protocol;
- (id)initServerWithRequest:(id)arg1 inputStream:(id)arg2 outputStream:(id)arg3;
- (id)initClientSocketWithRequest:(id)arg1;
- (id)initWithMode:(long long)arg1 request:(id)arg2;
@property(readonly, nonatomic) NSString *remoteHost;
@property(readonly, nonatomic) NSData *remoteAddress;
@property(readonly, nonatomic) long long readyState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSWebSocketDeflater : NSObject
{
    long long _windowBits;
    unsigned long long _memoryLevel;
    unsigned char _chunkBuffer[16384];
    struct z_stream_s _stream;
    _Bool _ready;
    NSMutableData *_buffer;
}

- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)ensureReady:(id *)arg1;
- (void)reset;
- (_Bool)end:(id *)arg1;
- (_Bool)appendBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)begin:(id)arg1 error:(id *)arg2;
- (id)initWithWindowBits:(long long)arg1 memoryLevel:(unsigned long long)arg2;

@end

@interface PSWebSocketFrame : NSObject
{
    _Bool fin;
    _Bool rsv1;
    _Bool rsv2;
    _Bool rsv3;
    unsigned char opcode;
    _Bool masked;
    unsigned long long payloadLength;
    _Bool control;
    unsigned long long headerExtraLength;
    unsigned char maskKey[4];
    unsigned int maskOffset;
    NSMutableData *buffer;
    unsigned long long payloadRemainingLength;
}

- (void).cxx_destruct;

@end

@interface PSWebSocketDriver : NSObject
{
    NSURLRequest *_request;
    long long _state;
    _Bool _failed;
    NSString *_handshakeSecKey;
    PSWebSocketFrame *_initialFrame;
    NSMutableArray *_frames;
    _Bool _pmdEnabled;
    long long _pmdClientWindowBits;
    _Bool _pmdClientNoContextTakeover;
    long long _pmdServerWindowBits;
    _Bool _pmdServerNoContextTakeover;
    PSWebSocketInflater *_inflater;
    PSWebSocketDeflater *_deflater;
    unsigned int _utf8DecoderState;
    unsigned int _utf8DecoderCodePoint;
    long long _mode;
    id <PSWebSocketDriverDelegate> _delegate;
    NSString *_protocol;
}

+ (id)PSErrorWithCode:(long long)arg1 reason:(id)arg2;
+ (id)serverDriverWithRequest:(id)arg1;
+ (id)clientDriverWithRequest:(id)arg1;
+ (_Bool)isWebSocketRequest:(id)arg1;
@property(retain, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property(nonatomic) __weak id <PSWebSocketDriverDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long mode; // @synthesize mode=_mode;
- (void).cxx_destruct;
- (id)base64EncodedData:(id)arg1;
- (id)acceptHeaderForKey:(id)arg1;
- (_Bool)pmdConfigureWithExtensionsHeaderComponents:(id)arg1;
- (id)pmdExtensionsHeaderComponents;
- (void)failWithError:(id)arg1;
- (void)failWithErrorCode:(long long)arg1 reason:(id)arg2;
- (_Bool)processFramesAndDelegate:(id *)arg1;
- (long long)readBytes:(void *)arg1 maxLength:(unsigned long long)arg2 error:(id *)arg3;
- (void)writeMessageWithOpCode:(unsigned char)arg1 data:(id)arg2;
- (void)writeHandshakeResponse;
- (void)writeHandshakeRequest;
- (void)sendPong:(id)arg1;
- (void)sendPing:(id)arg1;
- (void)sendCloseCode:(long long)arg1 reason:(id)arg2;
- (void)sendBinary:(id)arg1;
- (void)sendText:(id)arg1;
- (unsigned long long)execute:(void *)arg1 maxLength:(unsigned long long)arg2;
- (void)start;
- (id)initWithMode:(long long)arg1 request:(id)arg2;

@end

@interface PSWebSocketInflater : NSObject
{
    long long _windowBits;
    unsigned char _chunkBuffer[16384];
    struct z_stream_s _stream;
    _Bool _ready;
    NSMutableData *_buffer;
}

- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)ensureReady:(id *)arg1;
- (void)reset;
- (_Bool)end:(id *)arg1;
- (_Bool)appendBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)begin:(id)arg1 error:(id *)arg2;
- (id)initWithWindowBits:(long long)arg1;

@end

@interface PSWebSocketNetworkThread : NSThread
{
    NSObject<OS_dispatch_group> *_waitGroup;
    NSRunLoop *_runLoop;
}

+ (id)sharedNetworkThread;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
- (void).cxx_destruct;
- (void)main;
- (id)init;

@end

@interface PSWebSocketServerConnection : NSObject
{
    _Bool _inputStreamOpenCompleted;
    _Bool _outputStreamOpenCompleted;
    NSString *_identifier;
    long long _readyState;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    PSWebSocketBuffer *_inputBuffer;
    PSWebSocketBuffer *_outputBuffer;
}

@property(retain, nonatomic) PSWebSocketBuffer *outputBuffer; // @synthesize outputBuffer=_outputBuffer;
@property(retain, nonatomic) PSWebSocketBuffer *inputBuffer; // @synthesize inputBuffer=_inputBuffer;
@property(nonatomic) _Bool outputStreamOpenCompleted; // @synthesize outputStreamOpenCompleted=_outputStreamOpenCompleted;
@property(nonatomic) _Bool inputStreamOpenCompleted; // @synthesize inputStreamOpenCompleted=_inputStreamOpenCompleted;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) long long readyState; // @synthesize readyState=_readyState;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)init;

@end

@interface PSWebSocketServer : NSObject <NSStreamDelegate, PSWebSocketDelegate>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSArray *_SSLCertificates;
    _Bool _secure;
    _Bool _isV6Address;
    NSData *_addrData;
    struct {
        long long version;
        void *info;
        CDUnknownFunctionPointerType retain;
        CDUnknownFunctionPointerType release;
        CDUnknownFunctionPointerType copyDescription;
    } _socketContext;
    _Bool _running;
    struct __CFSocket *_socket;
    struct __CFRunLoopSource *_socketRunLoopSource;
    NSMutableSet *_connections;
    NSMapTable *_connectionsByStreams;
    NSMutableSet *_webSockets;
    unsigned short _realPort;
    id <PSWebSocketServerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
}

+ (id)serverWithHost:(id)arg1 port:(unsigned long long)arg2 SSLCertificates:(id)arg3;
+ (id)serverWithHost:(id)arg1 port:(unsigned long long)arg2;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <PSWebSocketServerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) unsigned short realPort; // @synthesize realPort=_realPort;
- (void).cxx_destruct;
- (void)dealloc;
- (void)executeDelegateAndWait:(CDUnknownBlockType)arg1;
- (void)executeDelegate:(CDUnknownBlockType)arg1;
- (void)executeWorkAndWait:(CDUnknownBlockType)arg1;
- (void)executeWork:(CDUnknownBlockType)arg1;
- (_Bool)askDelegateShouldAcceptConnection:(id)arg1 request:(id)arg2 response:(id *)arg3;
- (void)notifyDelegateWebSocketIsHungry:(id)arg1;
- (void)notifyDelegateWebSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)notifyDelegateWebSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)notifyDelegateWebSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)notifyDelegateWebSocketDidOpen:(id)arg1;
- (void)notifyDelegateDidStop;
- (void)notifyDelegateFailedToStart:(int)arg1;
- (void)notifyDelegateDidStart;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)pumpOutput;
- (void)pumpInput;
- (void)disconnectConnection:(id)arg1;
- (void)disconnectConnectionGracefully:(id)arg1 statusCode:(long long)arg2 description:(id)arg3 headers:(id)arg4;
- (void)detatchConnection:(id)arg1;
- (void)attachConnection:(id)arg1;
- (void)webSocketIsHungry:(id)arg1;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocketDidOpen:(id)arg1;
- (void)detachWebSocket:(id)arg1;
- (void)attachWebSocket:(id)arg1;
- (void)accept:(int)arg1;
- (void)disconnect:(_Bool)arg1;
- (void)disconnectGracefully:(_Bool)arg1;
- (void)connect:(_Bool)arg1;
- (void)stop;
- (void)start;
- (id)initWithHost:(id)arg1 port:(unsigned long long)arg2 SSLCertificates:(id)arg3;
- (id)runLoop;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBL_SQLiteStorage : NSObject <CBL_Storage>
{
    NSString *_directory;
    _Bool _readOnly;
    NSCache *_docIDs;
    CBLSymmetricKey *_encryptionKey;
    _Bool _autoCompact;
    unsigned int _maxRevTreeDepth;
    id <CBL_StorageDelegate> _delegate;
    CBL_FMDatabase *_fmdb;
}

+ (_Bool)databaseExistsIn:(id)arg1;
+ (void)firstTimeSetup;
@property(readonly, nonatomic) CBL_FMDatabase *fmdb; // @synthesize fmdb=_fmdb;
@property unsigned int maxRevTreeDepth; // @synthesize maxRevTreeDepth=_maxRevTreeDepth;
@property _Bool autoCompact; // @synthesize autoCompact=_autoCompact;
@property(retain) id <CBL_StorageDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly) NSArray *allViewNames;
- (id)viewStorageNamed:(id)arg1 create:(_Bool)arg2;
- (void)notifyPurgedDocument:(id)arg1;
- (unsigned long long)purgeExpiredDocuments;
- (unsigned long long)nextDocumentExpiry;
- (_Bool)setExpiration:(unsigned long long)arg1 ofDocument:(id)arg2;
- (unsigned long long)expirationOfDocument:(id)arg1;
- (_Bool)purgeSequences:(id)arg1;
- (int)purgeRevisions:(id)arg1 result:(id *)arg2;
- (id)findAllAttachmentKeys:(id *)arg1;
- (long long)pruneDocument:(id)arg1 numericID:(unsigned long long)arg2 generationsBelow:(unsigned int)arg3;
- (int)pruneRevsToMaxDepth:(unsigned long long)arg1 numberPruned:(unsigned long long *)arg2;
- (_Bool)compact:(id *)arg1;
- (void)optimizeSQLIndexes;
- (id)winnerWithDocID:(long long)arg1 oldWinner:(id)arg2 oldDeleted:(_Bool)arg3 newRev:(id)arg4;
- (id)encodeDocumentJSON:(id)arg1;
- (long long)insertRevision:(id)arg1 docNumericID:(long long)arg2 parentSequence:(long long)arg3 current:(_Bool)arg4 hasAttachments:(_Bool)arg5 JSON:(id)arg6 docType:(id)arg7;
- (int)forceInsert:(id)arg1 revisionHistory:(id)arg2 validationBlock:(CDUnknownBlockType)arg3 source:(id)arg4 error:(id *)arg5;
- (id)addDocID:(id)arg1 prevRevID:(id)arg2 properties:(id)arg3 deleting:(_Bool)arg4 allowConflict:(_Bool)arg5 validationBlock:(CDUnknownBlockType)arg6 status:(int *)arg7 error:(id *)arg8;
- (int)setInfo:(id)arg1 forKey:(id)arg2;
- (id)infoForKey:(id)arg1;
- (int)deleteLocalDocumentWithID:(id)arg1 revisionID:(id)arg2;
- (id)putLocalRevisionNoMVCC:(id)arg1 status:(int *)arg2;
- (id)putLocalRevision:(id)arg1 prevRevisionID:(id)arg2 obeyMVCC:(_Bool)arg3 status:(int *)arg4;
- (id)getLocalDocumentWithID:(id)arg1 revisionID:(id)arg2;
- (id)winningRevIDOfDocNumericID:(long long)arg1 isDeleted:(_Bool *)arg2 isConflict:(_Bool *)arg3 status:(int *)arg4;
- (id)documentPropertiesFromJSON:(id)arg1 docID:(id)arg2 revID:(id)arg3 deleted:(_Bool)arg4 sequence:(long long)arg5;
- (_Bool)row:(id)arg1 passesFilter:(CDUnknownBlockType)arg2;
- (id)getAllDocs:(id)arg1 status:(int *)arg2;
- (_Bool)findMissingRevisions:(id)arg1 status:(int *)arg2;
- (id)changesSinceSequence:(long long)arg1 options:(const struct CBLChangesOptions *)arg2 filter:(CDUnknownBlockType)arg3 status:(int *)arg4;
- (id)findCommonAncestorOf:(id)arg1 withRevIDs:(id)arg2;
- (id)getPossibleAncestorRevisionIDs:(id)arg1 limit:(unsigned int)arg2 haveBodies:(_Bool *)arg3;
- (id)getAllRevisionsOfDocumentID:(id)arg1 numericID:(long long)arg2 onlyCurrent:(_Bool)arg3 includeDeleted:(_Bool)arg4;
- (id)getAllRevisionsOfDocumentID:(id)arg1 onlyCurrent:(_Bool)arg2 includeDeleted:(_Bool)arg3;
- (id)getRevisionHistoryDict:(id)arg1 startingFromAnyOf:(id)arg2;
- (id)getRevisionHistory:(id)arg1 backToRevIDs:(id)arg2;
- (id)getParentRevision:(id)arg1;
- (long long)getRevisionSequence:(id)arg1;
- (long long)getSequenceOfDocument:(long long)arg1 revision:(id)arg2 onlyCurrent:(_Bool)arg3;
- (id)revisionWithDocID:(id)arg1 revID:(id)arg2 deleted:(_Bool)arg3 sequence:(long long)arg4 json:(id)arg5;
- (int)loadRevisionBody:(id)arg1;
- (id)getDocumentWithID:(id)arg1 sequence:(long long)arg2 status:(int *)arg3;
- (_Bool)existsDocumentWithID:(id)arg1 revisionID:(id)arg2;
- (id)getDocumentWithID:(id)arg1 revisionID:(id)arg2 withBody:(_Bool)arg3 status:(int *)arg4;
- (void)invalidateDocNumericIDs;
- (void)invalidateDocNumericID:(id)arg1;
- (long long)createOrGetDocNumericID:(id)arg1 isNew:(_Bool *)arg2;
- (long long)_createDocNumericID:(id)arg1;
- (long long)_readDocNumericID:(id)arg1;
- (long long)getDocNumericID:(id)arg1;
- (int)withReadLock:(CDUnknownBlockType)arg1;
- (int)inOuterTransaction:(CDUnknownBlockType)arg1;
- (int)inTransaction:(CDUnknownBlockType)arg1;
- (_Bool)endTransaction:(_Bool)arg1;
- (_Bool)beginTransaction;
@property(readonly, nonatomic) _Bool inTransaction;
@property(readonly, nonatomic) long long lastSequence;
@property(readonly, nonatomic) unsigned long long documentCount;
- (id)fmdbError;
@property(readonly, nonatomic) int lastDbError;
@property(readonly, nonatomic) int lastDbStatus;
- (void)close;
- (_Bool)open:(id *)arg1;
- (id)actionToChangeEncryptionKey:(id)arg1;
- (_Bool)checkUpdate:(_Bool)arg1 error:(id *)arg2;
- (_Bool)decryptWithKey:(id)arg1 error:(id *)arg2;
- (_Bool)sqliteHasRealEncryption;
- (_Bool)openFMDB:(id *)arg1;
- (int)schemaVersion;
- (_Bool)initialize:(id)arg1 error:(id *)arg2;
- (_Bool)runStatements:(id)arg1 error:(id *)arg2;
- (_Bool)openInDirectory:(id)arg1 readOnly:(_Bool)arg2 manager:(id)arg3 error:(id *)arg4;
- (void)setEncryptionKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBL_SQLiteViewStorage : NSObject <CBL_ViewStorage, CBL_QueryRowStorage>
{
    CBL_SQLiteStorage *_dbStorage;
    int _viewID;
    int _collation;
    NSString *_mapTableName;
    _Bool _initializedFullTextSchema;
    _Bool _initializedRTreeSchema;
    NSString *_emitSQL;
    NSString *_name;
    id <CBL_ViewStorageDelegate> _delegate;
}

@property(nonatomic) __weak id <CBL_ViewStorageDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)fullTextForDocument:(id)arg1 sequence:(long long)arg2 fullTextID:(unsigned long long)arg3;
- (id)documentPropertiesWithID:(id)arg1 sequence:(long long)arg2 status:(int *)arg3;
- (id)storageForQueryRow:(id)arg1;
- (id)reducedQueryWithOptions:(id)arg1 status:(int *)arg2;
- (_Bool)row:(id)arg1 passesFilter:(CDUnknownBlockType)arg2;
- (id)fullTextQueryWithOptions:(id)arg1 status:(int *)arg2;
- (id)regularQueryWithOptions:(id)arg1 status:(int *)arg2;
- (int)_runQueryWithOptions:(id)arg1 onRow:(CDUnknownBlockType)arg2;
- (_Bool)groupOrReduceWithOptions:(id)arg1;
- (id)queryWithOptions:(id)arg1 status:(int *)arg2;
- (int)_emitKey:(id)arg1 value:(id)arg2 valueIsDoc:(_Bool)arg3 forSequence:(long long)arg4;
- (int)updateIndexes:(id)arg1;
@property(readonly) long long lastSequenceChangedAt;
@property(readonly) long long lastSequenceIndexed;
@property(readonly) unsigned long long totalRows;
- (id)mapTableName;
- (int)viewID;
- (void)deleteView;
- (_Bool)createRTreeSchema;
- (_Bool)createFullTextSchema;
- (void)deleteIndex;
- (void)finishCreatingIndex;
- (void)createIndex;
- (_Bool)runStatements:(id)arg1 error:(id *)arg2;
- (id)queryString:(id)arg1;
- (_Bool)setVersion:(id)arg1;
- (void)close;
- (id)initWithDBStorage:(id)arg1 name:(id)arg2 create:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CBL_FMDatabase : NSObject
{
    struct sqlite3 *db;
    NSString *databasePath;
    _Bool logsErrors;
    _Bool crashOnErrors;
    // Error parsing type: {atomic_flag="_Value"AB}, name: inUse
    _Bool inTransaction;
    _Bool traceExecution;
    _Bool checkedOut;
    double busyRetryTimeout;
    MYReadWriteLock *databaseLock;
    int readLevel;
    _Bool hasTemporaryLock;
    _Bool shouldCacheStatements;
    _Bool enforceReadOnly;
    NSMutableDictionary *cachedStatements;
    NSMutableSet *openResultSets;
    struct _opaque_pthread_t {
        long long _field1;
        struct __darwin_pthread_handler_rec *_field2;
        char _field3[8176];
    } *homeThread;
    NSObject<OS_dispatch_queue> *dispatchQueue;
    _Bool bindNSDataAsString;
    int transactionLevel;
}

+ (_Bool)isThreadSafe;
+ (id)sqliteLibVersion;
+ (id)databaseWithPath:(id)arg1;
@property int transactionLevel; // @synthesize transactionLevel;
@property(nonatomic) _Bool bindNSDataAsString; // @synthesize bindNSDataAsString;
@property _Bool traceExecution; // @synthesize traceExecution;
@property _Bool checkedOut; // @synthesize checkedOut;
@property(retain) MYReadWriteLock *databaseLock; // @synthesize databaseLock;
@property _Bool crashOnErrors; // @synthesize crashOnErrors;
@property _Bool logsErrors; // @synthesize logsErrors;
@property(retain) NSMutableDictionary *cachedStatements; // @synthesize cachedStatements;
@property _Bool inTransaction; // @synthesize inTransaction;
- (void)setShouldCacheStatements:(_Bool)arg1;
- (_Bool)shouldCacheStatements;
- (void)endUse;
- (void)beginUse;
- (_Bool)inUse;
- (_Bool)executeUpdate:(id)arg1 withArgumentsInArray:(id)arg2;
- (_Bool)executeUpdate:(id)arg1;
- (_Bool)executeUpdate:(id)arg1 error:(id *)arg2 withArgumentsInArray:(id)arg3 orVAList:(struct __va_list_tag [1])arg4;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2;
- (id)executeQuery:(id)arg1;
- (id)executeQuery:(id)arg1 withArgumentsInArray:(id)arg2 orVAList:(struct __va_list_tag [1])arg3;
- (void)bindObject:(id)arg1 toColumn:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;
- (int)changes;
- (long long)lastInsertRowId;
- (int)lastErrorCode;
- (_Bool)hadError;
- (id)lastErrorMessage;
- (_Bool)databaseExists;
- (void)setCachedStatement:(id)arg1 forQuery:(id)arg2;
- (id)cachedStatementForQuery:(id)arg1;
- (id)openResultSetQueries;
- (void)resultSetDidClose:(id)arg1;
- (void)closeOpenResultSets;
- (void)clearCachedStatements;
@property(readonly) _Bool hasLock;
- (void)releaseReadLock;
- (void)acquireReadLock;
- (void)releaseWriteLock;
- (void)acquireWriteLock;
- (_Bool)endTransaction:(_Bool)arg1;
- (_Bool)beginTransaction;
- (_Bool)close;
- (_Bool)openWithFlags:(int)arg1;
- (struct sqlite3 *)sqliteHandle;
- (id)databasePath;
- (void)setDispatchQueue:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)initWithPath:(id)arg1;
- (id)dataForQuery:(id)arg1;
- (double)doubleForQuery:(id)arg1;
- (_Bool)boolForQuery:(id)arg1;
- (long long)longLongForQuery:(id)arg1;
- (int)intForQuery:(id)arg1;
- (id)stringForQuery:(id)arg1;

@end

@interface CBL_FMStatement : NSObject
{
    struct sqlite3_stmt *statement;
    NSString *query;
    long long useCount;
}

+ (id)explainQueryPlan:(struct sqlite3_stmt *)arg1;
@property long long useCount; // @synthesize useCount;
@property(retain) NSString *query; // @synthesize query;
@property struct sqlite3_stmt *statement; // @synthesize statement;
- (id)explainQueryPlan;
- (id)description;
- (void)reset;
- (void)close;
- (void)dealloc;
- (void)finalize;

@end

@interface CBL_FMResultSet : NSObject
{
    CBL_FMDatabase *parentDB;
    CBL_FMStatement *statement;
    int lastRC;
    _Bool alreadyCalledStep;
    NSString *query;
    NSMutableDictionary *columnNameToIndexMap;
    _Bool columnNamesSetup;
}

@property(retain) CBL_FMStatement *statement; // @synthesize statement;
@property(retain) NSMutableDictionary *columnNameToIndexMap; // @synthesize columnNameToIndexMap;
@property(retain) NSString *query; // @synthesize query;
- (id)columnNameForIndex:(int)arg1;
- (id)objectForColumnIndex:(int)arg1;
- (id)dataNoCopyForColumnIndex:(int)arg1;
- (id)dataForColumnIndex:(int)arg1;
- (id)dataForColumn:(id)arg1;
- (id)stringForColumnIndex:(int)arg1;
- (double)doubleForColumnIndex:(int)arg1;
- (double)doubleForColumn:(id)arg1;
- (_Bool)boolForColumnIndex:(int)arg1;
- (_Bool)boolForColumn:(id)arg1;
- (long long)longLongIntForColumnIndex:(int)arg1;
- (long long)longForColumnIndex:(int)arg1;
- (int)intForColumnIndex:(int)arg1;
- (int)columnIndexForName:(id)arg1;
- (_Bool)hasAnotherRow;
- (_Bool)next;
- (int)_step;
- (int)step;
- (void)setupColumnNames;
- (void)close;
- (void)dealloc;
- (void)finalize;
- (id)initWithStatement:(id)arg1 usingParentDatabase:(id)arg2;
- (id)revIDForColumnIndex:(int)arg1;

@end

@interface NSString (NSString_SBJSON)
- (id)JSONValue;
@end

@interface UIImage (animatedGIF)
+ (id)animatedImageWithAnimatedGIFURL:(id)arg1;
+ (id)animatedImageWithAnimatedGIFData:(id)arg1;
@end

@interface NSObject (NSObject_SBJSON)
- (id)JSONRepresentation;
@end

@interface NSData (Base64)
+ (id)dataWithBase64EncodedString:(id)arg1;
- (id)base64EncodedString;
- (id)base64EncodedStringWithWrapWidth:(unsigned long long)arg1;
@end

@interface NSString (Base64)
+ (id)stringWithBase64EncodedString:(id)arg1;
- (id)base64DecodedData;
- (id)base64DecodedString;
- (id)base64EncodedString;
- (id)base64EncodedStringWithWrapWidth:(unsigned long long)arg1;
@end

@interface NSData (AESEncryption)
- (id)dataUsingAES256DecryptionWithKey:(id)arg1;
- (id)dataUsingAES256EncryptionWithKey:(id)arg1;
@end

@interface NSURL (Parameters)
- (id)parmetersInfo;
@end

@interface NSDictionary (YapDatabase)
- (_Bool)ydb_containsKey:(id)arg1;
@end

@interface UIViewController (TopViewController)
+ (id)topViewController:(id)arg1;
@end

@interface UIAlertController (Blocks)
+ (id)showWithTitle:(id)arg1 message:(id)arg2 preferedStyle:(long long)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5 tapBlock:(CDUnknownBlockType)arg6;
+ (id)alertControllerWithTitle:(id)arg1 message:(id)arg2 preferedStyle:(long long)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5 tapBlock:(CDUnknownBlockType)arg6;
+ (long long)cancelButtonIndex;
- (void)setAlertCompletionBlock:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)alertCompletionBlock;
- (void)show;
@end

@interface NSString (Reverse)
- (id)reverse;
@end

@interface NSArray (Extension)
- (long long)indexOfString:(id)arg1;
@end

@interface CKRecord (YapDatabaseCloudKit)
- (id)safeCopy;
- (id)sanitizedCopy;
@end

@interface NSUserDefaults (SecureAdditions)
- (void)setSecretObject:(id)arg1 forKey:(id)arg2;
- (void)setSecretURL:(id)arg1 forKey:(id)arg2;
- (void)setSecretDouble:(double)arg1 forKey:(id)arg2;
- (void)setSecretInteger:(long long)arg1 forKey:(id)arg2;
- (void)setSecretFloat:(float)arg1 forKey:(id)arg2;
- (void)setSecretBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setSecret:(id)arg1;
- (id)secretObjectForKey:(id)arg1;
- (id)secretURLForKey:(id)arg1;
- (double)secretDoubleForKey:(id)arg1;
- (id)secretStringForKey:(id)arg1;
- (id)secretStringArrayForKey:(id)arg1;
- (long long)secretIntegerForKey:(id)arg1;
- (float)secretFloatForKey:(id)arg1;
- (id)secretDictionaryForKey:(id)arg1;
- (id)secretDataForKey:(id)arg1;
- (_Bool)secretBoolForKey:(id)arg1;
@end

@interface NSDictionary (CBL_Body)
@property(readonly) NSDictionary *cbl_attachments;
@property(readonly) _Bool cbl_deleted;
@property(readonly) NSString *cbl_revStr;
@property(readonly) CBL_RevID *cbl_rev;
@property(readonly) NSString *cbl_id;
@end

@interface NSMutableDictionary (CBL_Body)
@property(retain) NSString *cbl_revStr;
@property(retain) CBL_RevID *cbl_rev;
- (void)cbl_setID:(id)arg1 revStr:(id)arg2;
- (void)cbl_setID:(id)arg1 rev:(id)arg2;
@end

@interface NSData (MYData)
+ (id)my_dataWithSlice:(CDStruct_6dcf026d)arg1;
- (const void *)my_readVarUInt:(unsigned long long *)arg1 at:(const void *)arg2;
- (CDStruct_6dcf026d)my_asSlice;
@end

@interface NSMutableData (MYData)
- (void)my_appendVarUInt:(unsigned long long)arg1;
@end

@interface NSException (MYUtilities)
- (id)my_callStack;
- (id)my_callStackReturnAddressesSkipping:(unsigned int)arg1 limit:(unsigned int)arg2;
- (id)my_callStackReturnAddresses;
@end

@interface NSObject (MYUtils)
- (id)my_compactDescription;
@end

@interface NSString (MYUtils)
- (id)my_compactDescription;
@end

@interface NSArray (MYUtils)
- (id)my_compactDescription;
- (id)my_filter:(CDUnknownBlockType)arg1;
- (id)my_map:(CDUnknownBlockType)arg1;
- (_Bool)my_containsObjectIdenticalTo:(id)arg1;
@end

@interface NSMutableArray (MYUtils)
- (void)my_removeMatching:(CDUnknownBlockType)arg1;
@end

@interface NSSet (MYUtils)
+ (id)my_differenceOfSet:(id)arg1 andSet:(id)arg2;
+ (id)my_intersectionOfSet:(id)arg1 andSet:(id)arg2;
+ (id)my_unionOfSet:(id)arg1 andSet:(id)arg2;
- (id)my_compactDescription;
@end

@interface NSDictionary (MYUtils)
- (id)my_dictionaryByUpdatingValues:(CDUnknownBlockType)arg1;
- (id)my_compactDescription;
@end

@interface NSData (MYUtils)
- (id)my_UTF8ToString;
@end

@interface NSObject (MYBlockUtils)
- (void)my_run_as_block;
@end

@interface NSError (MYUtils)
- (id)my_nonDefaultLocalizedDescription;
- (id)my_compactDescription;
- (id)my_failingURL;
- (_Bool)my_isFileNotFoundError;
- (_Bool)my_isFileExistsError;
- (_Bool)my_hasDomain:(id)arg1 code:(long long)arg2;
- (id)my_nameOfCode;
- (id)my_errorByPrependingMessage:(id)arg1;
@end

@interface NSURL (MYUtilities)
@property(readonly) NSString *my_sanitizedPath;
@property(readonly) NSString *my_sanitizedString;
@property(readonly) NSDictionary *my_proxySettings;
- (id)my_credentialForRealm:(id)arg1 authenticationMethod:(id)arg2;
- (id)my_protectionSpaceWithRealm:(id)arg1 authenticationMethod:(id)arg2;
@property(readonly) NSURL *my_URLByRemovingUser;
@property(readonly) NSString *my_pathAndQuery;
- (id)my_baseURL;
@property(readonly) _Bool my_isHTTPS;
@property(readonly) unsigned short my_effectivePort;
@end

@interface NSInputStream (MYUtils)
- (_Bool)my_readData:(CDUnknownBlockType)arg1;
- (_Bool)my_readBytes:(CDUnknownBlockType)arg1;
@end

@interface NSString (CBJSONEncoder)
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2;
@end

@interface NSNumber (CBJSONEncoder)
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2;
@end

@interface NSNull (CBJSONEncoder)
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2;
@end

@interface NSArray (CBJSONEncoder)
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2;
@end

@interface NSDictionary (CBJSONEncoder)
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2 keyFilter:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (int)cbjson_encodeTo:(struct yajl_gen_t *)arg1 canonical:(_Bool)arg2;
@end

@interface NSString (CBL_RevID)
@property(readonly) CBL_RevID *cbl_asRevID;
@end

@interface NSArray (CBL_RevID)
@property(readonly) NSArray *cbl_asMaybeRevIDs;
@property(readonly) NSArray *cbl_asRevIDs;
@end

@interface NSURL (OABaseAdditions)
- (id)oa_URLStringWithoutQuery;
@end

@interface NSMutableURLRequest (OAParameterAdditions)
- (void)oa_attachFileWithName:(id)arg1 filename:(id)arg2 contentType:(id)arg3 data:(id)arg4;
- (void)oa_setHTTPBodyWithString:(id)arg1;
@property(retain, nonatomic) NSArray *oa_parameters;
- (_Bool)oa_isMultipart;
@end

@interface NSString (OAURLEncodingAdditions)
- (id)oa_removeQuotes;
- (id)oa_decodedURLString;
- (id)oa_encodedURLParameterString;
- (id)oa_encodedURLString;
@end

